(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    354197,       7081]
NotebookOptionsPosition[    342172,       6904]
NotebookOutlinePosition[    342597,       6921]
CellTagsIndexPosition[    342554,       6918]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:/Users/serha/OneDrive/Masa\[UDoubleDot]st\[UDoubleDot]/MyRepo/\
master_thesis_MMT003/210421_OR_model_and_other_lines_sliding\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.82068372916162*^9, 3.8206837590902376`*^9}, {
   3.82099449057887*^9, 3.820994498313196*^9}, {3.8210054790054235`*^9, 
   3.8210055295954804`*^9}, 3.821869880332293*^9, 3.8218700558187695`*^9, {
   3.8222100529225636`*^9, 3.822210053174907*^9}, 3.823328020773944*^9, 
   3.823328228743762*^9, 3.824615554045221*^9, 3.8251436646664114`*^9, 
   3.8265588273592052`*^9, 3.8272953735167117`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"7303abaa-6687-4536-b1d2-ba38b9a3d432"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["FBA Model Network",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8279740680808125`*^9, 3.8279740754570713`*^9}, 
   3.8279741126445045`*^9},ExpressionUUID->"b9cce465-e4dc-4c45-ab98-\
39d60c38747e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stoichioforhomosapiens", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<../210324_disc_time_windows_and_OR_model/iAT_PLT_636_stoichiomat.\
csv\>\"", ",", 
       RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}], ",", "None", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SparseArray", "@", "stoichioforhomosapiens"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.825143680639896*^9, 3.8251437146444435`*^9}, {
   3.825143833225416*^9, 3.8251438411507435`*^9}, {3.8251439007010984`*^9, 
   3.8251439008171315`*^9}, {3.8251451115692215`*^9, 
   3.8251451427508907`*^9}, {3.825145379437434*^9, 3.8251453823410106`*^9}, {
   3.8265593492030516`*^9, 3.826559371836701*^9}, 3.827974112652102*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"f53254ce-f391-4b33-9a13-3c627f232910"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1: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
              "], {{0, 0}, {30, 30}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4006", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"738", ",", "1008"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1: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
              "], {{0, 0}, {30, 30}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4006", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"738", ",", "1008"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.005385103454209146`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "12"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.`"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "14"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "345"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.`"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "439"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.`"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {738, 1008}, 0., {1, {CompressedData["
1:eJwd1A1wyHUYB/A/eZ9ZY2vD8rKWvM2sEQsxWYSGFjMvKUsrahahEnHJktdm
CC1vpdU55Ly0FNILITlEy3tyUru1cmpJ6aPf3efud7+7393z3Pe5p+nIsQ/m
VAqC4Hzl4P9ThVMkekwmhR6MZyJTqXxTENQlkrk37j5FEEVzWhJPW5K4i470
oi9ppDOYWcxhJavZwjZ28jl72U85FVSpGgQ1qU0YdYkgiga0JJ4EEmnPIDIZ
Rg4TmEQes5jNQhbxDkVsYBMf8TE72c0X7GUfX/MNRzhGCSc5zVl+4AKXKKWc
CkKrBcHN1CWSaBoQQ2OacjstaEU8ibSjM11JoQc96U8u48hnEUtZTiEr2UYx
2znKMUo4w0V+5XeuUMHf/EtQXd5UoToh1CGcCG4hmhiaEEdL2pBMZ7qTSi96
05c0+pNOJsOYyRwKWMIKVnOAbzjMUY5RQil/UMG1G3XWCIIahBBKOBFEUZ8Y
GtGC1rShLR3pRBe60Z1UepLGAB4ig6EMZwRZZDOapxjLM4xnPoVspZhP2cM+
DvA9JznNOS5yiVLKuMyfN/qpadapy220IJF2JNOdVHrTl34MYhgPM5IpTOMV
8lhNEXvYx0Eq1QqCm6hKdUKoQz2iqE9DGtGEWOJJ4H76MICHGMQQHiGLbEbz
FDnkMo4JTOJ5JjOdPGYxm7nMJ58lLGMV77KVYrazg6/Yz3FKOMEpzvAzpfzO
Ff7iGlVCgqAaEUQTSxzNaEECSXTkbrrQje704AH6MZAMMskimzGM41km8gJT
mMEc5rGAAlawijUU8T7rWM9GNrOV7exgFwc5zHHOcI6fKKWMcq5QwVWucZ1K
te1PQqhDPSKJpiG30phY4mhGc1rThjtpRwc6cw/dSGcgGWQylOGMZBTZjOZp
nmE8E3mOyUxlGi/zCnnMYjZzmU8+BSzmDZbxJm+xkrdZSxEb+IBtFLOLz/iC
veznIIc4zFGO8R3fc5KznOcCFymljHIuc4U/+YvrVA41U1SjBrUIJYxwIoii
ATE0ogmxxNGM5rSiDW1Joj0d6EoKqfSkD2n0J52BZDCEYTzCSB7jcZ7gaXIZ
zwQm8TwvMpVpvEwec5jHAvIpYDFLWU4hq3mbtRTxPutYz0Y2sYVtFPMxO9jF
bj5nD19xgEMc4VtKOMFpznGeC1zkEr9QRjl/UMFVrhHUsc+oSnVqEkIoYYRT
j0iiaUAMjYgljmY0pxXxJJBIEu3pQDKd6EJXUriXVHrSm76k0Z8HGcRghjKc
ETxKFqPI5knGkEMuE5jCS0xnBjN5ldeYx+ssZBFLWEYhK1jFGt7hPdaxgU1s
Zisfsp1P2MmnfMaX7GUfX3OII3zLcUo4wSnO8gM/UsZvXOYq/3D9RiZhMqEm
IYQSRjj1iCSK+jTkVhrTlNu5g5a0JoFEkmhPB5LpRBe6kkIP7qMXfXiAfgwg
nYFkkMlQhjOCR8liFNk8yRhyyGUczzKRyUxhOjOYyau8xlwWkE8BS1jKcgpZ
wSrWsJb/ABbAdQ8=
     "], CompressedData["
1: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
iZ9Bo5C7QUswBnlOGsuppj+/4j7XeltZ/7CNz937KuYtdbd6+T+bv4yZx0Vt
PX93sYfY0+frwaKjuD3as5v6e6TfqU9pD35qbPa/2yZ8+o6Z+bZd3Da0yGyd
FO04RhwrbhbfiG85JjKfA4y3pn/TnjNzs7XYuUfEY9425ikJ5tpu35qLg0pt
ejLa2qmDcosTpvt4b+x91KzUvmQX6LPpWVGfnedtXaPCTlBHrett/7v+HJgX
/mKEv8cMtxdzSu+yir9LqiduVer31v5uqe87+7tN9zG4XrRvgF1Fa6Gr0CVo
Jbaxu9hx6hjkB5/1Y9/nS5+PX6jm93kx2jbflRo912PL0fOvZuZLOE4dn/bg
T1jrVfYd3dDY0a6Z4P7nB79uFx8vXJ9yGdzjOZ4tXsqKeJi1auV8xoSK52zp
foU66+X+ruSMm/n4455Dffzgt9n/Wma/x/p7se9MP4d2s4aBmg/5Quovt+a2
Ziy1G1+2m/cF93o9s3fjGDqOa9GFu2dWf2Kbuj7bL0U7t5bfi+MHej/vJfYu
bbNGgLo+Noi1VtSgK/e/7vuP8vcFxij3eTnaPZ+KtsZiX9EmW1ojvRJND6Dh
Po62f6T4MLc6Ehq7Q7SadfnYWqVj2J7ZFbanc2nMY1t2c7vSysf1WLcntOHu
3O5DO/tW7KOux1zF7+JbK3334rzw36wbod72d9d8XnFda51zeWZ/6aff15/k
1l9Px2KbBbmMib65jXlyMOfntjbhlGhrBomN5kWLk8qaGZ38ZrS8NLHMq/r9
c7DjHJvu16IR2vl5rE3Dxt+ObcptXL2Tm15jTqGlfg3W//9EMyZtuI3fP913
kN+HNXFoO3LD5VpiWsN2ic9lci9pLQ5x4HfopGj7nmTMZbb+lPWb1B3TOT94
m7mOGHCt3GqTw3xeYLNWKV2LRtkoNx9GjbeR75vp2wR5KXdTO7NcUdSxLXJb
g8i5+BvOS1qikR9nfSJ5iuqZxQnMJXzDwxXjZXhuPgib/W1udhefkvwGvoL1
m6zTZH0max2Tj5nu7R/o458xz7krZsU5bFfJLI4mfsb+EFed+Tf3if7O4zKr
T1ObTus42/i1tUvnrYl9yuwbN/f78q7D88L3p/dLMWqao6l/uaazbx8nTsis
ds46Gn6j/3m356I9a5PM6uz9Kt7x2Wj7yesRj2NrF/rcfVQ0zEzjMAZYt/Wa
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
m1imudPan9un9Jf2o507l9ryX8lZeK8=
     "]}, CompressedData["
1:eJztXTty3EYQXWXMvMEGChjILIcKnXPP4CO4yrFv5WsYR9IRlMxsFRtqvk83
PlJRSdcCM/19rwECM9Dvf//71z+fLpfLf79dxr9v/w/5Gn5/yA/5K0iE61cw
7iBeXO5iXOE3nI/sL6KfMY/Iv0x/Md9PmT+o7hvVWa4D6Yeq93kZ85Zt4kzr
UMQXkp+nHbXOP7vM4qviD/WXneOB/aVJPi3b2qP1oj6A5ql1RePOKoO/ad8X
9bTnA+kJx7/ck/Fs/VXcuPw8GidqPs4ax9Z5Z/NwMH/tOp8lnq35eDbcduHw
bLIpz/N6P+9zrwtn5xLHdeVR5ZnLO1aPaG/190JzHHvdZ7p9If499bhPQHZI
/chPNj/XMS7FsRl/pudl2HkKMrMXx63Gn7SfZHpnvqdM+0nIc1bPR9/K5BLm
q3yMeELnk/HxfNpfSf9W+cjyNX7flrfH6XyweAF6UrvJvD+Xmr3d+qLrRzOv
2uro+tddl6ivW2/3/G4cnAXnQNrPiZrrg64Pst8Z/jKeuFK1y/qj6uvyA9Wv
S+9R81k93XHvLOn3HWepq+p3t57M/4wHe8nMP+Rv9/Gz5IGtn5vf6rgP+WPJ
1q9aN5bv3VKN/yh/Vbtd9avayeq+Ny/3tndUXFV+NtmFzzlYPFSPn4W/ql9s
PG5+z/bbrV9XXo7GA4tvlxdb858dp8b1s9Wz6g8bt5t3l0+unq157frB2lV/
d+VrK7508x/F5/K0ip8qHlw8svnq5mkVH1vlXcWTin837+H8XB8M32veRf/I
esZ1iV/v3Dz7+gLy83kZ8ZKyzJNw/vG+fRz/urw/vu36pPJZxWkVz1W/uvoB
izMXp65+1V+3nlU/2Dqq9UL23eNVvg2J1k+U69pdHxY/TTyH6/rcfqDyvAs3
LJ7U+rGS9GviMtsfkF7/X9/Oy8bF81Fvuh4NxBXtTTvXcDz60YWr9H2+2BfK
fbZbHxg/eRrvU+L57H3m0/L+uHh+ZfcO/M7qFfROO9dwPPpRvV7D97oIP2x/
U+e7uO3Wo/YzhNNuvVX91TxU42T7gBkXvX+yqy+5cbj2XB6R4+197MD/2O+y
9c/o+jblY/2wi++96kbidvb3uT7+FuQcN+N+DsfL/cbFPYszUk/ExQoniT73
fkp+jgTie0b6uvqP2idcu2bdIb+74lT1d+fJrSPoA5P38b4w7QNV3qu4F8dP
ft7ub39nfH/wyOUj6Tf6OzLd353pZfPs1sm1C+Jtu09Cel27kScoDhG3U9/L
kLcgU3xuhEsWZ7M/fFm48TQugT37PqUqSbzJ3ysaxx/fp0H2Ev/c/KD9Yek6
rq58kjiM+wpRn1k9VwH4viXj4nUC9e2XIWkeB9ywfELP9dr2KRfrme4DJfst
4lGKi6LeFa6QfsRXcnyKb9J/9NwxtdfUJ+HzwiRutB971V/F/Ff3mWd/r5X3
qyCcqPNUXrl4FuOD+8FZO+A8/P4DW7ds3v3983J+qxLYgbiPcZm8z94f2H0x
kdl7LRpXJv/hdWh560fWx2XcIZypfGH1NuufdftjSHR/tPpuScxfV78i+4SM
a9MufP7A4sXEsdzPqrh1/XL1g3mr74O4/GHzocav6qvad8dX8+LWHeFW7QNV
3rD6qpLlrYo71f5W9UK4YXHuzldxvHfcbL5VXKu8dfmi1k3Nm4pXl0duvd18
dPHQrftevOzCg4sXFg+un2qcXbxj46nqreZLzYOaD7U+Kk9cfW592Xy5fFfr
vhU/wTi43tzF65DZ+swuXK7WG6l5GZJex+nidWv+qfXq4kE3L938sXkK5+X1
u2M+vc6rymO2Dmb87f5161fxF87DflO16/Koy57Ls+68uzx3ceTGE37D968I
Vy7Oq/llec/WtyvfB+FEvn4Hme4XSeZd0XgyLvl77BGHmR9qPrvqUsSHvE/A
xbeLc5bPbF6qerv8UvWr9a3WS8UdGx+Jy7Y8qfUakv4uexcf3Lya8bXfp6h2
uurvxqvyvcufqt4qL9x6JvPgPuFu/Li86aqTimfWTnNd7L5Y5An6/zPtOqv5
VXmm8krFyd51cfPVhXOX713zD5I0/lV82rz/DtZ1Zac=
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.8266760514228945`*^9, 3.8266927269896836`*^9, 
  3.826723018303991*^9, 3.8267337960608177`*^9, 3.8267633998012805`*^9, 
  3.827210706161263*^9, 3.827463914773634*^9, 3.827919300626298*^9, 
  3.827924132475503*^9, 3.827969701476077*^9, 3.827974112652102*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"843bc7dd-25de-4511-98d2-5e39c6b301b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stochmatrix", "=", "stoichioforhomosapiens"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AdjmatR", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "stochmatrix", "]"}], ".", "stochmatrix"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormAdjmatR", "=", 
   RowBox[{"AdjmatR", "/.", 
    RowBox[{
     RowBox[{"x_", "/;", 
      RowBox[{"x", "\[NotEqual]", "0"}]}], "\[Rule]", "1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormAdjmatR", "=", 
   RowBox[{"NormAdjmatR", "/.", " ", 
    RowBox[{"0.", "\[Rule]", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormAdjmatR", "=", 
   RowBox[{
    RowBox[{"UpperTriangularize", "[", 
     RowBox[{"NormAdjmatR", ",", "1"}], "]"}], "+", 
    RowBox[{"LowerTriangularize", "[", 
     RowBox[{"NormAdjmatR", ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AdjmatM", "=", 
   RowBox[{"stochmatrix", ".", 
    RowBox[{"Transpose", "[", "stochmatrix", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormAdjmatM", "=", 
   RowBox[{"AdjmatM", "/.", 
    RowBox[{
     RowBox[{"x_", "/;", 
      RowBox[{"x", "\[NotEqual]", "0"}]}], "\[Rule]", "1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormAdjmatM", "=", 
   RowBox[{"NormAdjmatM", "/.", " ", 
    RowBox[{"0.", "\[Rule]", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormAdjmatM", "=", 
   RowBox[{
    RowBox[{"UpperTriangularize", "[", 
     RowBox[{"NormAdjmatM", ",", "1"}], "]"}], "+", 
    RowBox[{"LowerTriangularize", "[", 
     RowBox[{"NormAdjmatM", ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824353199674821*^9, 3.8243532847237806`*^9}, {
   3.8243533178139076`*^9, 3.8243533382037325`*^9}, {3.8243533911905184`*^9, 
   3.8243533933366966`*^9}, 3.824353677317257*^9, 3.824356526085764*^9, {
   3.8243614147369184`*^9, 3.8243614497987075`*^9}, {3.8243615166565924`*^9, 
   3.8243615244514627`*^9}, {3.8279194068387394`*^9, 
   3.8279194172970085`*^9}, {3.8279697673808136`*^9, 
   3.8279698121880355`*^9}, {3.827969845671748*^9, 3.827969854141897*^9}, {
   3.827970064610075*^9, 3.8279701019231167`*^9}, {3.827970269809258*^9, 
   3.827970307207075*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"4040e321-da72-4be8-ae7c-3f2d638359d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"AdjacencyGraph", "[", 
    RowBox[{"NormAdjmatR", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DirectedEdges", "\[Rule]", "False"}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "6"}], ",", 
       RowBox[{"VertexStyle", "\[Rule]", "Red"}]}], 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "->", "\"\<v1\>\""}], ",", 
           RowBox[{"2", "->", "\"\<v2\>\""}], ",", 
           RowBox[{"3", "->", "\"\<v3\>\""}], ",", 
           RowBox[{"4", "->", "\"\<v4\>\""}], ",", 
           RowBox[{"5", "->", "\"\<b1\>\""}], ",", 
           RowBox[{"6", "->", "\"\<b2\>\""}], ",", 
           RowBox[{"7", "->", "\"\<b3\>\""}]}], "}"}]}]}], "*)"}], "}"}]}], 
    "]"}], "*)"}], 
  RowBox[{"AdjacencyGraph", "[", 
   RowBox[{"NormAdjmatM", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirectedEdges", "\[Rule]", "False"}], ",", 
      RowBox[{"VertexSize", "\[Rule]", "6"}], ",", 
      RowBox[{"VertexStyle", "\[Rule]", "Red"}]}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"VertexLabels", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "->", "\"\<A\>\""}], ",", 
          RowBox[{"2", "->", "\"\<B\>\""}], ",", 
          RowBox[{"3", "->", "\"\<C\>\""}]}], "}"}]}]}], "*)"}], "}"}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.824353407462245*^9, 3.8243534148951025`*^9}, {
  3.824353473426015*^9, 3.824353677317257*^9}, {3.8243614628305016`*^9, 
  3.824361498800334*^9}, {3.827919439813521*^9, 3.827919468665315*^9}, {
  3.8279194992015047`*^9, 3.827919526743943*^9}, {3.8279703305420575`*^9, 
  3.8279703470936556`*^9}, {3.827972805514076*^9, 3.827972819128106*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"6b1f75ef-9b56-444a-b253-6369a1f48f84"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJwl1mObEAgUBeDJtm3btl2TXZM52bZt27Zt265FrTe3W+07z354n/ML7jk3
VVBwYNdQAQEBL0IHBISkCAhDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8E
JCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIU
pBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBaB1KYOdalHfRrQ
kEY0pglNaUZzWtCSIFrRmja0pR3t6UBHOtGZLnQlmG50pwc96UVv+tCXfvRn
AAMZxGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcB
C1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAH
OcRhjnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95
xGOe8JRnPOcFL3nFD/zIT/zMa97wC7/yG7/zB3/yF3/zlne85wMf+cRnvvAP
//KVb3wn5PhDEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgk
JCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIU
pRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWoRSG3qUJd61KcBDWlEY5rQ
lGY0pwUtCaIVrWlDW9rRng50pBOd6UJIeQfTje70oCe96E0f+tKP/gxgIIMY
zBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jM
EpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwR
jnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe
8oznvOAlr/iBH/mJn3nNG37hV37jd/7gT/7ib97yjvd84COf+MwX/uFfvvKN
74QMfyhCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5
KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozgl
KEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLQKpTR3qUo/6NKAhjWhME5rSjOa0
oCVBtKI1bWhLO9rTgY50ojNd6Eow3ehOD3rSi970oS/96M8ABjKIwQxhKMMY
zghGMorRjGEs4xjPBCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jO
ClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4J
TnKK05zhLOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94Hvr/
P/w/5xBooA==
      "], {Null, 
       SparseArray[Automatic, {738, 738}, 0, {1, {CompressedData["
1:eJwd1X9wyGUcB/Cv1Wr5EdOYzTZWi2Td5paTrHSTmMRKqXAUlVbTZDvVWi1a
U1qbH6O1/CiyS2kihbg5RDsKTa38OJNEfizaEtqlXtdz9/rnef75PM/n/TxP
/Pjs+55pEQTBLyHB/6M1nU1sYBf1HOVa6z1IZfllQbCTWrIuD4K40CDoSjcG
M4QMRjGWJ8lmNgv5gCrW0e6KIIgijUFkM5UZzGIBS/mTK68Mgi4k0ZtUBjKI
exjBVF5hBsWUU8sBjhAWFgSRxNCPNNIZwzgKKGIeC1jJKtZRTQ27qeMQhzlN
I82EXhUELQmnE3HcSC/6MpQc8shnOsXMpYKlfMgaNrKZGnZTxwnO0sgFQloG
QQTpZPAaJVSwmGVUsZf91HNVK+dOFD25nXt5iHGMJ5PJTCGXFyigkJmUsYhl
rGA11eygjoM08hchQtWKCKKI43oSSSKVNGbxLlV8Tg27iW0TBAn0pBcp9OVx
8niFVymhnCUs53Oq2cx2vmEvxzjJGc5y2dV6RivaE0EMcSTRm/6kcz+jGcNE
cshnGq9TShnbOEnHtuonmQEMIYMsppBLHjMpZT4VVLKSWg5xmrbt1MSNJJPK
CEYymkfIJJ8ZFDOfbezkBw7QMtwdYAQjGcMq1rKJbezlMOcJbR8EbWhPLAnc
QH8G8BwFvEEp81nISr5gI9v5jjoOUc9xGmjkPFdcEwQdiKILXYmnGzeRwp0M
5ymeJZcXmcsCVrOeDWxmCwep5zfO0EQzrSP0mkR6MYjhjORhHiebPKbxGqXM
YzGf8BnVbKWGw5ykidAO7hrhRBJLEreSxkCGMpEscniJ6bxKIW9SwlyWsJwV
7GEfR/mbZlp2tB+i6UoyfUgljXQymMDTTCGflymimDIq+IAPWckXbGEHe/mB
Q5zgFE1ERuoZ3Ukkhd6kkc4wHmQsE8kki8nk8AL5FPEWs5jNHN5hIZUs5zPW
spGt1LCL7/mJepq4yCVCOgXBNUQRR3dSSOU27iSd+xjFBB5jMjk8RwFvMoe3
qeB9llHFJr5mJ7Xs52eOc4qzNHGJsCjZow3hdKAzMcSTQCJJ9KEfqQzhXkYx
gSyeJ4/pFDKTuczjPT5iFev5ij3s4wgnOM15LhEa7Y0hkutI5GZu5Q4Gkk4G
D/AQT/A02eSSxzQKmcksylnAEir5mCpWsZZNbGMP+/mF3zhHM5d3lm3CiSCa
LiSQTB+GksFIRvMImWQzmam8RBEllFHBIir5iCpWs4mtfM23/MhPHOQIxzhN
A39wjmaCGH8JYbSmHdF05lq6k8gt9GcwdzOc+3mY8WSSTS4vUkAxi1nKMlbw
KatZTzVfUcM31HKQEzTwJ+e4SGis7NGRWOLpRg+S6UM/0riLdIYxnAcYzaNk
8hSTyCGPQoqYQTmLqGQNa/mS7exgF99RRz1HOcZxGvidJi7wDy3i/NGEE0EU
McTTgyRSuJlb6McABjGMEYxhPJlMYgpTeZlpvEEJpZQxj3IWUUkVa9jIFraz
izp+5ldO0sDvnKGRc1zgIv8S0kWuCaMdHYgmjgT+A74Lp4k=
          "], CompressedData["
1:eJztXXe0V8W1njmAKAqxQix0pKPGLqh07EixYgULKoIoKEq3ooIQFcEuYAWx
F1AssSBYsYtiQ02MGjQxicaS+PaXs7/MPvObc+/1vbz31lvr/fGtxPs7Z2bP
nt1nz6H5kFMGjMicc62aOuflf/H/awlqC+oI1hLUFdQT1Bc0EDQXtBHc4vN3
+DyeW0efXVewnnlnfcEGgo0EGwsaCn4p2FSwuWALQWNBE4GQ4loKttR52gra
CdoLOgg6CjoJthZsI9hWsINgR8FOgp0Fuwg6C7oKegl6C/YU7CXYW7CvoK9g
f0E/QX/BQYJDBIcKBgkOExwhOFIwWHCM4FjBiYKTBCcLhgtGCE4RnCo4TTBK
cIZgjGCsYIJgomCS4FzBeYILBRcJLhZMFUwT/FpwqeAywUzBLMFswZWCOYJ5
gpvAd8GtgtsEtwsWCu4U3C24R3Cv4H7BA4IHBQ8LHhM8IVgqeEawTLBc8Kzg
BcGLgpcErwveELwleFvwjuBdwfuCDwUfCT4VfCZYI/ij4GvBXwTfCX4U/EMA
waglqC1YS7COYD1BA8EvBVsIGguaCpoJWgs6CbYRbC/YUbCrYDdBN0EvwZ6C
gYJBgiMEgwUnCE4UDBMMF4wQnCYYJRgtOENwlmCsYLxgkmCy4FzBBYIpgqmC
GYIrBFcJbhDMFdwmWCC4S3CP4D7BA4IlgscFTwieFDwjWCZ4TvCC4CXBCsFr
grcF7wh+L/hc8IXgT4LvVNkyQT3BeoL1BRsKGguaCJoKmgmaC1oIWgpaCVoL
2gjaCjoIOgo6CbYW/Eqwg2AnwS6CLoJdBbsL9hEcKDhUMEhwuOBIwdGCwYJj
BEMFJwiGCU4RjBSMFowVjBdMFFwkmCWYLbhKcI3gWsENghsFtwhuEywU3C14
QLBM8LzgJcErgneyYG9oO9Z25faDtgI2wtqH1i7YiI5qB6DzPYze7xHpPPT8
YNXzw1SvTzB6PcroLvV2suBso7/U1SuMbt6o+nlzpKMLjW7er7r4uOrjU6p7
0Ls3Ve9Wqu6tEnws+ETwO8EXgr8KfnK5btVR3aon+IVgQ8HGql+bqV61U52C
Pu0s6Ks6dKDgYNWl41SPoEMjVWfOjPRmgurOOYLzjO5cJJim+jNL9WeB0Zf7
BYtUL140uvGy4FXVC+gCdKChkf3WKt8dE3INme6j8ryfyvJxkeyerjJLOZ0v
uEvl8eVI/moZmaO8baAyB3mDz/mVoLvL/cKsyEbc4fOx6CsbqKy2Utk8SN8b
qnIzV23nFOXbbkLETKWnjo6xpT5jaaQ/tr54EzMX/WU71YNugp5G5geprIMO
67Mg7xOMTMP3XK903q/y+ZrL/QJogr3/s8vtcze1xaepveWaYBd/p/v7mdo9
2CisdU9BX9037tO5ygPs08NZvt4yW0B+rJ3YN8YZjC8aK1/a6T520r3cXffT
8je2QzWJYRq5YJs2c8VYBnaquaCFS9urOKZhPAP6ENNsp/to45ndlPauSn9s
52yMs48rxjmIcQYKDhAc6IIdLIt5jhIc7ULcc7wr2sk4/hlp5An280yX29Bx
gvGuGAdNdkV7injIxkKXCKa7dEx0jeBaV73dLYuN7nO5XC8WPOQq7XEqRnrO
hTjpFcGrLsRKtNuMl2C3bcxE+8246XPBH1yuS39yuT7Brn8j+FbwN5fHUt8L
fnB5TAWbD2GtrXa/rg8xVX2fx1XwAesbP7CJoKGgkfqETQVNfIi5mvs87mrr
89hra/UVv/Ih7uou6CHoLegj2EOwt/qRfoJDfIjHjvZ5TAZ/MtSH2Owk9S0n
+xCjwc+c6oux2umR3xnnK2O2843vma625lLB5T6P3+iDaJ9vUft8p8/juHuN
X0Ist1jwkC+P6Zb7yriOvgvx3RuCt3yI8z4QrPbFeO8PPo/5flBjk9Uwztuy
ilhvK+MXtxVsr/4RMV8v9Y97CfoJBmjcd7CJ/Q7TmG+I+k76zREm5oNtHqP2
+RzBeRr7XSyYJvi14ArjY6/RGHCOiQHpc+/XOPBBwROCJwVPC57R2HC54FnB
c1keJ76Y5bEifPWb6q9XCz7KivbaxoywzbCvsK2MAWkXGe/RfsV2KLYjtAnU
7TNVJiFf5Ffsh+gnfuGq9it4dj19ln6EsS38Bf0EY1rmt6m4Ns5nmcfa+Ba2
PI5xYbdhp093uW0us8txbjonwatUrMsc1NpW2NI41oXNhG2EXbQ2sbr4FrYM
MW5jtWPtIvuFeLeX2izYq33VXjHepX0apvZolA97PF5tDWxMHNvCpixQe/KS
sQUf+BDL1s4q41mrz22z8pj2wCzEs9RJ6iLj2fmqU3EMy5pNStbqVyNrcUyS
krueP1P2GE+Uyd8II4NjXfUxQiyLjFP/KzK59GfKJWPff4d8sq5hZRTySR8a
y+foamTU+j8rp08mfBfl9bOfIbMdsnSdISW7Nhez8jstkuGHVY4ho+urLFNu
YUcZy2cq3zYnwPMbqdxuo3LKOt/+KoNHqMydbOSKseY8lZfbVSae0b1H3AYe
I+ZAHHGC+sR3s3y+W5Ue+pwNVbduMn+nL8DzzBGYE+C5uipHB2R53mPXbfMN
vLeZebeezmVrIdDjNq5oB9YxzzbU58CnbQ2foL/9lU9HKp+GGz5R38ine5VP
y5VPY1UGIWsH6n6Pzor5alw7bqT0Mje+SX9vGK2HuSz5SdvU1QXbMlPf/8w8
10SfQx24nz53mj77aQmPSJvN6TZzoRYNelooDcwfmZ9hnjgnI2/3caG2zLyL
vEZuNdjlORX5PlJpRe0YudO4xF4wL2JdmLmQ3SPkN6j9MrfBfiF/QX33Fd07
5iBfmX1EbI1a6OU+xM6sb9zjQwyJuuEQs9+IEVEbPEf3nvlvM+UV6vK76F5Q
R1hzifNoyjr5Sz6Sh+Qd+RXzZY7LbT/5wLU3MGvk2mxMzHW8pXreRPectO/q
cl8byzLzftYZ2uiabe4O+vsq/Qcp/cco/aNcZa57jws5Kmh/UfcLe3W+2nzQ
f7DaW8bo9Qzfd1Sauyd4jryWtUX4rS7qPx4WPOLzPAg+A7kP7PWdWR7HU583
1bWxtoS1wA+vMfOwFhbrGHhFe9XTpWtvjHttbGNtScx72gvGLjH/eyb2YJDZ
hxFmL3heE+8JY42FZm+Wmv1BrAB9sjECcnrm83U0LmDNDLHoUPXpqK2e48Pe
XmT8Ofb5Pt2PFeqveQZAf0w5GGpkYZr6Vrvvqfrm5iozrZV/tv4E/tG+dde9
sHvawIV6F+PHTvoOeI66Es/LYNNQw0H9BrYK9on1EKz19SzY8AY6HuuTPyn/
oMOoH6BucLryCPn6MpXTOEYY5IJvIA+4fqx3Kxf8bmNd/9a6/u1d0P2OyhfS
10nHBv2wjzYWaKvjbhvRwrNNyr7lFWSUPhn+Aj5isPKN/oB+gHaf9h58hI2H
badPnqp2+3C10eOzyrjExiOMn7YztNq4grLQyRXt4e6Gt6kzYvr4tjp2T30e
fGjmcvvaSXm9k47bRcemTwU/Brjcd4Inx7ncZ4Ivo13wlWe53F+SP1cJrnbF
WuEtyq9FLveN4NkKl/tExO27qH521dgbfLxM/SH4uVB94efK26PUD45THk8Q
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
nHW9GPkFjI0eOXwz6D8AaLvFgQ==
          "]}, Pattern}]}, {VertexSize -> {6}, VertexStyle -> {
         RGBColor[1, 0, 0]}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
D3B7dMg=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[CompressedData["
1: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
EO+EeCfEOyHeYYoR74R4J8Q7Id4J8U6Id0K8E+KdEO+EeCfEOyHeCfFOiHdC
vBPinRDvhHjHvjPEEMfNOFYMZ5Jx/zX2yfvNS/IA43nT8CrWZTM2Z0vewLbs
zyFcxuV8k3H/a7h4DBeH4eoftuZQTuUszmE+V3AN1/NjfspNjOetIgYjxOAA
o/5J9U+qf1L9k+qfVP+k+ifVP+zJ/hzCZVzON7mB3zHikhSXpLgkxSUpLklx
SYpLUlyS4pIUl6S4JMUlKS5JcUmKS1JckuIyUr3CXN7OOxn3bWOfjn5SuJ0H
+BvzpCtgvN8S5jL6T9E3GFso7SOcxGmczlmMfmL85o/jo5zMqXycs/mMdY23
bDxX8MD/hgmcwZsy0mkekuZh448Yf9QyE5nHJ/iBtJOkyeMTjPwfVd5I85jx
KcanGZ9q2Sd4ZkbaYox8ptoOscxz6jyd87iKO7iX0R9+Qr5PyPcJ+UYeM+U1
i89xDvO5ipu4h3uZJ79nMtIxHsh4v3Km7ROu4CbuYfx+h3GeGGV50jJPGX/a
eGzfZwul+6/PKuezyvmcOIUbeYBRvjDewzpZx8x0HnPklc9FXGxePhfxNS7h
h9zPf/MQ/+R/Gc9xhIVZhEV5GiuxCquyHuszmw14DVuwJTuxB/vwGT7L5ziH
S/kht/Nf/J4/Ms5PTpabVXkVG7Mn+3MER3EcH+YkTucMzuazfJmvcDE/51bu
4L/4JXfzW8ZzudGm4jwx3MgDzDU/rgvHvhjPG4WvcCmXcwXjPDeeVZrPlywb
zyVFm1vE17iEH3I//81D/JP/ZbS3sDCLsChPYyVWYVXWY31mswGvYQu2ZCf2
YB8+w2f5HOdwKT/kdv6L3/NHRnvL197ytbd87S1fe8vX3vK1t3ztLV97y9fe
8rW3fO0tX3vL197ytbd87S1fe8vX3vK1t3ztLV97y9fe8rW3fO0tX3vL197y
tbdoAwsj7/8NP7GArTPStuGNjOuaC7W7V7S7aEOLuY3beYx/MjPDtwZYhEVZ
kg3Zh/05gwu5hZ8ztlN4NmvxSl7Fa3kT27EL7+JQPshJ/CdXMZ7LX6zei9V3
sfouVs+wC/uzmOVacigf5CS+yX9yNf9e7+bM9Dt38d5VeAn3Mc47Yh9fYnid
7zN+R2Paj+b9zH38hb/a5ssMcbyJY01cd4xvJ73Nd0yL40+82/cu32PU/031
DON9jLctF8b7X2F93sY+fIWf8Qt+ya95qnxL8R+8hH05hcsy02WI+1BhnNdF
2U+ow9v+fpcT/pf+n+IYfZfV/IjruZGb+Jm0awxrDR/JK7ZHGOd70Qf8tFD6
mLyOH3MD/8PfGcfZsAqrsjqvYNwf/Ug518l3nXzDHxjfh1in3mH072OZTyyz
gcd5gvG+YHguf+BPGellN1r2OE8wlttguQ2W22C5iOFmQ8RxS6H0+/jhv/gl
d/M7xnOn4euZ6Xc/43gVbucuRty3ym+r/LbKb6v8wp9YwCNM8ThPsFpG2prM
YmO2YRf25QiO4yOcwqmcxtl8j7/zMI/yv/yLJ3iK+hfhRbyaTXgNr2cHPsQ8
TuNTXMh3uIFxHNtme2yzPcLvGf2L8FSezrNYnJXZkI3YjH14P8fwYU5mHpfx
E25lWeW9nDWZzTVczzhf3q5e4Vf8lof4J+P3Y7t6b1ffk+8oszjP44WsxkZs
yhZsxbv5GrdyOwu4/+/1KH9NXsvWnMGZfJrz+SbjvbV4dj3OI8Odxr9hPEcV
5vJ2xv2X2Cdjfwx38zv+wJ9YwP08whSP8wQzMtLWZBZnMfarKOvXtmHvzHRZ
divTd/yB+3mcJxj5fyn/sB0THMqVXMX3+AE/5jb+webK9Ra38JvMdJv7VtuL
9vOV7f+1+H8j/rvVZ7e47Ra33eqxWz12q0fYhl04i7N5grH/Rxm+t47IJ4zj
ckyL/ewH2/EH2/EHcQwbmL+SbzN+n6IPE/2XcB+LmL6Msb+G8TzXT/IPD/AI
UzzOE4z9K2zM1mzDtmzPcXyEU/kUf+dhHuVfzFDOU1iUp/FMFufFrM+r2YLR
Ln4Wn5/F52fxCSuaH/HZIy7hIT6WkY7ZAbE7whSP8wSrSd+YrdmGbdme4/gI
p/Ip/s7DPMq/GPEqEK8C8SoQrwLxKhCvAvEqEK8C8SoQrwLx2qu+e8UhfDQj
HcNfxPJXHmVv8+O96DDei45jwr8t8ysP8jD/4FHr/I0Rp3B6RrrPF/29sKy/
4z2bg/I5KJ+D8gnjfZRD8gub+juPP7KAcV0vjOtlv0kX/ptJ0+P89Xfl+F05
Dlv/YesP475G2Ibx/a4j2s0R7eaIdhPG8fiI9nNE+zmi/YTt2J6d2YUjOI6P
cAqnchpn8ymu5A/8ib/ydx7mUf7FE8xQz1NYhOfyAl7N5pzGlXyHq7mB0W/6
Q5yPandHtbuj2l2ci0c/IWzIOI9OiXtK3FPinhL3lLinxD0l7ilxT4l7StxT
4p4S95S4p8Q9Je4pcU+Je0rcU+KeEveUuKfEPSXuKXFPiXtK3FPinhL3lLin
xD0l7ilxT4l7StxT4p4S95S4p8Q9Je4pcY++WlwHC6O/Fp7O4ryQFzHOz4+L
93HxDs/h+SzPy1iNNZnFxryR7dieHdiROezCuzicK/kBf+XvPMw/eJR/MeJ+
XNzDoizOc3kBL2RJXsz6bMrmbMHBvJ95nMbV3MCvGf2g+AZy3KcLz+JVrMso
9wnb54TtE57L83kZq7Ems9iYbdiO7dmBHZnDzuzCvuzH/kxwKIdzBKdwGmfz
Kc7jSr7Nd7mK7/EDfsxt3MGd/IY/8Cf+yt95mH/wKP/iCWbYHqfwXF7AC3kR
S7I+r2ZzTmAeF/ItvsPV/Iif8BvG9dRoS9GOoq20Yxe+m5k+Npz8fnZG+vwn
roHGeV1YhEV5GvvwKunjunJh6QpLV9h6C8s/bMU4/ywi/clvPvFs9mEel7G/
5YZyMqM/WNR6i1q+qPIVtVycm8fx71TlOlW5wni+4HTTTzc9vJRlWU5Zz2b8
bsW9xWIsIY/iPJ9/T6/LRmzGrYzrgWFZlmNNZnMN1zPO32Od51j3hSzBi3gJ
G7EZW7AV5/M1vsM1XMf13Mqd3MXjLKR8mSzLmsxmQzZmDrvyGT7PuXyBa7ie
f8clvjMT2yzel4kYnStW57M8LzPvfJYwHvtvGPttPGMd9wPCi1mXt7EX+7Af
13Mfz5bfFbyL8T3tC223C223C8UryvSieZewBVtxH39R1ovZkHG/It6J/wdL
S9OLC3nMOlqwlbTxvHbsG2VZjhXMu9y8cszjW3yHUZ+wNtcyvjsUy94sj7f4
DmuaX5trGcuVtx3D14zvYBz341tuNXgl62Skr01XYVVWZ1yXrmx7hksY1+Wr
SF9F+irSh035Al9iATtb/g7Gdamq8qkqn6qWr2r5qpararn4bY/f8bANOzCH
XdiXIziOj3AKp3IaV/IDFrHe+lzIlYz+Z3XlD1/090uZ6WkvMv6OPkn0R8J2
nMdVfI8f8GNu4x9sLr/X+Rbj9zC+6RD9qLAue/GYMrTjPK7ie/yAH3Mb/2Cs
P8v6s6w/y/prZ6TbW3iAh3iEKf7J48pc1xD3jcLTWYxn83yW42WsxJa8ibP4
AuP7+XHPO65jxT2uPnyFS/gZ4z5V3BOP40rYhCNMj/vLV8snzOMSxvINtK/w
bcZ1wYbyC2dwIX/mXhaTvinjfnb8xsXvWxjHr9hHmrIvZ3E23+PvPMyj/IvR
3wtPYRHmcRrfYfTvmyhnE+WLstyhTIM4hHks4H4Otdx0vsx4Dy/qGs/FxTN8
8dxoGM8jXKP+Me069mZc9wjb8BZ2zEwv00oeufyQu+XVm7F8nIPH8Se8kR2Y
w+hfx7dSbmBb7rbsjYzjSaS5Xdo72ZUlzL+U5VmB0a4jr6KM87K21tPWcm2l
i2fB4r3LdsobdmQOO7MLExzOj7mNfzDaRdiUvTmY0xj98PbW395628s/jPOh
+Nb/rezE+zmKD3Mi47sqHdSng3w7qE8H9QnvYl8+xZX8lRfKryTjeH+r8oTd
rCuHndmFd0kbz8VEX6kP47gWxv3uHMvlWC7HcjnKl6N8OcqXo3w5ypejfDnK
l6v9hIX9XZrRDmJdcR51u3SxT97DQRyiLHcxweGM7Rw2Z28O5jSu5Lv8J1dx
NeP3M8rS1TrjPC7G7zZtIGfwO/PiPlh8ayie0+0uXRjP4Z58Rob7eIzx/6yE
0T+OfTquz91r+4T9jf/tEL7MJfyMX/BLfs04HwvrsQH7sj8nchmXM74f2Vc5
+tr+0bcewASHcj2jfx3LDLZsMX9X4oOcyEcZx4eI4TCxHMUxfIAPciInc4My
DeVwztO2hihT/H9EMZ5nWnl/R72HSh9liOer49tQScZ3oe5XrvBh88ZyPCfw
UU5ivEcWfcFxjOsHkedoeY7hDC7jzsx0mrHSTOYy08bLM66rPSA+D8gnjPtc
keYh814xPkEdJhqP+wnRN53CuP420fomitdE+YZLM9N1e0wdH5c2j0sY703m
KW+4lt9xL6tJV4OT+Rrjdzf6ytFPDqO/F+NxPeZx8Z1hPTPUO77NFd/lir7H
bEb/IMbjelHMezojfYx71vjzxucYn2vI1zY+YBx/4lzhJUOcb8c7XfE+5cvi
HMZ+GseCY+bFe4RxD+a+zHSMYr+Lb6/ckJl+JjHeQw2v8Hc8/xd1Wq5ul/t7
ESM+8e3keA8grOTv2J/eyEj/Py7hARY2PfofsU9HPzB8l9NMj35hnAvGeWD4
T2nfZVw3e1u6SLNJ2s2saXpDxnWGdy33ruWizx/9wFXievIaY0b6WxxrGdcT
3jM/jH5eXBt5PyPtOmmjfXxgu3ygfYRxPhDfiI77yWH0d2KZ9YaIc/gIo91F
H+PTjLRbjH/O6HfEseY7sT3AiOcm9Q/j+2Wb5b9ZPMJs9uQKvsFPGe9RbLHe
MJHp2YyMtCefO8lI939iWjy3Gr8FXzJ+B+JcfCe/Mb6LXzGu94RxnWeXdOG3
7Gp6zP9SvnEt9yfG/dTw5P1nf//k7zh32JORNvbz6GPvNx77efw2xnWT8KB5
v5kW563hS3wvMx3rQ2J+hCn+yeOsJf0tvIc9MtP3Lv+Tke7L/GH8N2U4Zh1H
mOKfPM7bMtM+l5k+h4nzlvAvxvlKnNM0YTz3dER+R+R3RH6xbDwvdVS6KMMw
LmL0F1KWS1kupRwp5fjT9D9N/9P0eMYr9qsw7oNEGa9hrO/k/92XmT7XOoXX
8ynTOjD+jmNIvJcWfbHof0XfP/r90bc8ncUY/cxoE2eaF9Pj24VnsQSrmzeC
oxjnb/HbFtf549y7pXWfZ1ocD+Jc/B6OzUwf2+N6SfRRS1pH5B/3BC5mxCGu
Af+DlxgPY9+K9lnO+sKb+ALj/D36DnEeFOf+lRjH3ThGVzSvsvH4nmI8O17V
0IzdGMeDOEZksTaz2ZCNGddda6l32MMydTPTzzoPYIKDGO3qKvUJ47nn6CM2
ELOrrfNj45utuzFbZab/r6EmnG7ew6ZF+4hzsObq2ILd2NO8wYz7dtEWr2Ms
H8+UvSv2N/FBaWJ98axZvJ8WbbQtY7k4N77R0N686fKIet5segfp4xmnToZ4
ziz2mRzGfhPX/u5gHAfjGbT4PkI8I34Xt5t2t2mjpX1enXvaRj0Y7TO+ldmL
fcwbLe3n3M1vpR3IIUxyJOM7BPfa3vfa3pF3P0MsP8D8AeaHw8wbYtow2+Z+
TjMvvksU10Re5hbTktKOMIziOGUbY9o44w+IQfw/lfHtg4c43TZ+1LTYPhP8
HecKC/iFaY9lpp+N/4TxvkOe8oZx/hfvND7OBcZj/3wiM30fKtY5m7G+eHZx
Jr80vktZ435ItIk5tu28zPSxII4D8Vv1Et8z/p5YvcJ47jGO5XEcj9/8Nxj3
UaKvEv2UOEddxc3G4zw1rrm/zw8MH2amjwHRT4h99VND/B33FqPfFG1pN6Md
xTsicX77tfXtNv3/ALuexeA=
          "], 0.058340995617936126`]}, 
        {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.058340995617936126], DiskBox[2, 0.058340995617936126], 
         DiskBox[3, 0.058340995617936126], DiskBox[4, 0.058340995617936126], 
         DiskBox[5, 0.058340995617936126], DiskBox[6, 0.058340995617936126], 
         DiskBox[7, 0.058340995617936126], DiskBox[8, 0.058340995617936126], 
         DiskBox[9, 0.058340995617936126], DiskBox[10, 0.058340995617936126], 
         DiskBox[11, 0.058340995617936126], DiskBox[12, 0.058340995617936126],
          DiskBox[13, 0.058340995617936126], 
         DiskBox[14, 0.058340995617936126], DiskBox[15, 0.058340995617936126],
          DiskBox[16, 0.058340995617936126], 
         DiskBox[17, 0.058340995617936126], DiskBox[18, 0.058340995617936126],
          DiskBox[19, 0.058340995617936126], 
         DiskBox[20, 0.058340995617936126], DiskBox[21, 0.058340995617936126],
          DiskBox[22, 0.058340995617936126], 
         DiskBox[23, 0.058340995617936126], DiskBox[24, 0.058340995617936126],
          DiskBox[25, 0.058340995617936126], 
         DiskBox[26, 0.058340995617936126], DiskBox[27, 0.058340995617936126],
          DiskBox[28, 0.058340995617936126], 
         DiskBox[29, 0.058340995617936126], DiskBox[30, 0.058340995617936126],
          DiskBox[31, 0.058340995617936126], 
         DiskBox[32, 0.058340995617936126], DiskBox[33, 0.058340995617936126],
          DiskBox[34, 0.058340995617936126], 
         DiskBox[35, 0.058340995617936126], DiskBox[36, 0.058340995617936126],
          DiskBox[37, 0.058340995617936126], 
         DiskBox[38, 0.058340995617936126], DiskBox[39, 0.058340995617936126],
          DiskBox[40, 0.058340995617936126], 
         DiskBox[41, 0.058340995617936126], DiskBox[42, 0.058340995617936126],
          DiskBox[43, 0.058340995617936126], 
         DiskBox[44, 0.058340995617936126], DiskBox[45, 0.058340995617936126],
          DiskBox[46, 0.058340995617936126], 
         DiskBox[47, 0.058340995617936126], DiskBox[48, 0.058340995617936126],
          DiskBox[49, 0.058340995617936126], 
         DiskBox[50, 0.058340995617936126], DiskBox[51, 0.058340995617936126],
          DiskBox[52, 0.058340995617936126], 
         DiskBox[53, 0.058340995617936126], DiskBox[54, 0.058340995617936126],
          DiskBox[55, 0.058340995617936126], 
         DiskBox[56, 0.058340995617936126], DiskBox[57, 0.058340995617936126],
          DiskBox[58, 0.058340995617936126], 
         DiskBox[59, 0.058340995617936126], DiskBox[60, 0.058340995617936126],
          DiskBox[61, 0.058340995617936126], 
         DiskBox[62, 0.058340995617936126], DiskBox[63, 0.058340995617936126],
          DiskBox[64, 0.058340995617936126], 
         DiskBox[65, 0.058340995617936126], DiskBox[66, 0.058340995617936126],
          DiskBox[67, 0.058340995617936126], 
         DiskBox[68, 0.058340995617936126], DiskBox[69, 0.058340995617936126],
          DiskBox[70, 0.058340995617936126], 
         DiskBox[71, 0.058340995617936126], DiskBox[72, 0.058340995617936126],
          DiskBox[73, 0.058340995617936126], 
         DiskBox[74, 0.058340995617936126], DiskBox[75, 0.058340995617936126],
          DiskBox[76, 0.058340995617936126], 
         DiskBox[77, 0.058340995617936126], DiskBox[78, 0.058340995617936126],
          DiskBox[79, 0.058340995617936126], 
         DiskBox[80, 0.058340995617936126], DiskBox[81, 0.058340995617936126],
          DiskBox[82, 0.058340995617936126], 
         DiskBox[83, 0.058340995617936126], DiskBox[84, 0.058340995617936126],
          DiskBox[85, 0.058340995617936126], 
         DiskBox[86, 0.058340995617936126], DiskBox[87, 0.058340995617936126],
          DiskBox[88, 0.058340995617936126], 
         DiskBox[89, 0.058340995617936126], DiskBox[90, 0.058340995617936126],
          DiskBox[91, 0.058340995617936126], 
         DiskBox[92, 0.058340995617936126], DiskBox[93, 0.058340995617936126],
          DiskBox[94, 0.058340995617936126], 
         DiskBox[95, 0.058340995617936126], DiskBox[96, 0.058340995617936126],
          DiskBox[97, 0.058340995617936126], 
         DiskBox[98, 0.058340995617936126], DiskBox[99, 0.058340995617936126],
          DiskBox[100, 0.058340995617936126], 
         DiskBox[101, 0.058340995617936126], 
         DiskBox[102, 0.058340995617936126], 
         DiskBox[103, 0.058340995617936126], 
         DiskBox[104, 0.058340995617936126], 
         DiskBox[105, 0.058340995617936126], 
         DiskBox[106, 0.058340995617936126], 
         DiskBox[107, 0.058340995617936126], 
         DiskBox[108, 0.058340995617936126], 
         DiskBox[109, 0.058340995617936126], 
         DiskBox[110, 0.058340995617936126], 
         DiskBox[111, 0.058340995617936126], 
         DiskBox[112, 0.058340995617936126], 
         DiskBox[113, 0.058340995617936126], 
         DiskBox[114, 0.058340995617936126], 
         DiskBox[115, 0.058340995617936126], 
         DiskBox[116, 0.058340995617936126], 
         DiskBox[117, 0.058340995617936126], 
         DiskBox[118, 0.058340995617936126], 
         DiskBox[119, 0.058340995617936126], 
         DiskBox[120, 0.058340995617936126], 
         DiskBox[121, 0.058340995617936126], 
         DiskBox[122, 0.058340995617936126], 
         DiskBox[123, 0.058340995617936126], 
         DiskBox[124, 0.058340995617936126], 
         DiskBox[125, 0.058340995617936126], 
         DiskBox[126, 0.058340995617936126], 
         DiskBox[127, 0.058340995617936126], 
         DiskBox[128, 0.058340995617936126], 
         DiskBox[129, 0.058340995617936126], 
         DiskBox[130, 0.058340995617936126], 
         DiskBox[131, 0.058340995617936126], 
         DiskBox[132, 0.058340995617936126], 
         DiskBox[133, 0.058340995617936126], 
         DiskBox[134, 0.058340995617936126], 
         DiskBox[135, 0.058340995617936126], 
         DiskBox[136, 0.058340995617936126], 
         DiskBox[137, 0.058340995617936126], 
         DiskBox[138, 0.058340995617936126], 
         DiskBox[139, 0.058340995617936126], 
         DiskBox[140, 0.058340995617936126], 
         DiskBox[141, 0.058340995617936126], 
         DiskBox[142, 0.058340995617936126], 
         DiskBox[143, 0.058340995617936126], 
         DiskBox[144, 0.058340995617936126], 
         DiskBox[145, 0.058340995617936126], 
         DiskBox[146, 0.058340995617936126], 
         DiskBox[147, 0.058340995617936126], 
         DiskBox[148, 0.058340995617936126], 
         DiskBox[149, 0.058340995617936126], 
         DiskBox[150, 0.058340995617936126], 
         DiskBox[151, 0.058340995617936126], 
         DiskBox[152, 0.058340995617936126], 
         DiskBox[153, 0.058340995617936126], 
         DiskBox[154, 0.058340995617936126], 
         DiskBox[155, 0.058340995617936126], 
         DiskBox[156, 0.058340995617936126], 
         DiskBox[157, 0.058340995617936126], 
         DiskBox[158, 0.058340995617936126], 
         DiskBox[159, 0.058340995617936126], 
         DiskBox[160, 0.058340995617936126], 
         DiskBox[161, 0.058340995617936126], 
         DiskBox[162, 0.058340995617936126], 
         DiskBox[163, 0.058340995617936126], 
         DiskBox[164, 0.058340995617936126], 
         DiskBox[165, 0.058340995617936126], 
         DiskBox[166, 0.058340995617936126], 
         DiskBox[167, 0.058340995617936126], 
         DiskBox[168, 0.058340995617936126], 
         DiskBox[169, 0.058340995617936126], 
         DiskBox[170, 0.058340995617936126], 
         DiskBox[171, 0.058340995617936126], 
         DiskBox[172, 0.058340995617936126], 
         DiskBox[173, 0.058340995617936126], 
         DiskBox[174, 0.058340995617936126], 
         DiskBox[175, 0.058340995617936126], 
         DiskBox[176, 0.058340995617936126], 
         DiskBox[177, 0.058340995617936126], 
         DiskBox[178, 0.058340995617936126], 
         DiskBox[179, 0.058340995617936126], 
         DiskBox[180, 0.058340995617936126], 
         DiskBox[181, 0.058340995617936126], 
         DiskBox[182, 0.058340995617936126], 
         DiskBox[183, 0.058340995617936126], 
         DiskBox[184, 0.058340995617936126], 
         DiskBox[185, 0.058340995617936126], 
         DiskBox[186, 0.058340995617936126], 
         DiskBox[187, 0.058340995617936126], 
         DiskBox[188, 0.058340995617936126], 
         DiskBox[189, 0.058340995617936126], 
         DiskBox[190, 0.058340995617936126], 
         DiskBox[191, 0.058340995617936126], 
         DiskBox[192, 0.058340995617936126], 
         DiskBox[193, 0.058340995617936126], 
         DiskBox[194, 0.058340995617936126], 
         DiskBox[195, 0.058340995617936126], 
         DiskBox[196, 0.058340995617936126], 
         DiskBox[197, 0.058340995617936126], 
         DiskBox[198, 0.058340995617936126], 
         DiskBox[199, 0.058340995617936126], 
         DiskBox[200, 0.058340995617936126], 
         DiskBox[201, 0.058340995617936126], 
         DiskBox[202, 0.058340995617936126], 
         DiskBox[203, 0.058340995617936126], 
         DiskBox[204, 0.058340995617936126], 
         DiskBox[205, 0.058340995617936126], 
         DiskBox[206, 0.058340995617936126], 
         DiskBox[207, 0.058340995617936126], 
         DiskBox[208, 0.058340995617936126], 
         DiskBox[209, 0.058340995617936126], 
         DiskBox[210, 0.058340995617936126], 
         DiskBox[211, 0.058340995617936126], 
         DiskBox[212, 0.058340995617936126], 
         DiskBox[213, 0.058340995617936126], 
         DiskBox[214, 0.058340995617936126], 
         DiskBox[215, 0.058340995617936126], 
         DiskBox[216, 0.058340995617936126], 
         DiskBox[217, 0.058340995617936126], 
         DiskBox[218, 0.058340995617936126], 
         DiskBox[219, 0.058340995617936126], 
         DiskBox[220, 0.058340995617936126], 
         DiskBox[221, 0.058340995617936126], 
         DiskBox[222, 0.058340995617936126], 
         DiskBox[223, 0.058340995617936126], 
         DiskBox[224, 0.058340995617936126], 
         DiskBox[225, 0.058340995617936126], 
         DiskBox[226, 0.058340995617936126], 
         DiskBox[227, 0.058340995617936126], 
         DiskBox[228, 0.058340995617936126], 
         DiskBox[229, 0.058340995617936126], 
         DiskBox[230, 0.058340995617936126], 
         DiskBox[231, 0.058340995617936126], 
         DiskBox[232, 0.058340995617936126], 
         DiskBox[233, 0.058340995617936126], 
         DiskBox[234, 0.058340995617936126], 
         DiskBox[235, 0.058340995617936126], 
         DiskBox[236, 0.058340995617936126], 
         DiskBox[237, 0.058340995617936126], 
         DiskBox[238, 0.058340995617936126], 
         DiskBox[239, 0.058340995617936126], 
         DiskBox[240, 0.058340995617936126], 
         DiskBox[241, 0.058340995617936126], 
         DiskBox[242, 0.058340995617936126], 
         DiskBox[243, 0.058340995617936126], 
         DiskBox[244, 0.058340995617936126], 
         DiskBox[245, 0.058340995617936126], 
         DiskBox[246, 0.058340995617936126], 
         DiskBox[247, 0.058340995617936126], 
         DiskBox[248, 0.058340995617936126], 
         DiskBox[249, 0.058340995617936126], 
         DiskBox[250, 0.058340995617936126], 
         DiskBox[251, 0.058340995617936126], 
         DiskBox[252, 0.058340995617936126], 
         DiskBox[253, 0.058340995617936126], 
         DiskBox[254, 0.058340995617936126], 
         DiskBox[255, 0.058340995617936126], 
         DiskBox[256, 0.058340995617936126], 
         DiskBox[257, 0.058340995617936126], 
         DiskBox[258, 0.058340995617936126], 
         DiskBox[259, 0.058340995617936126], 
         DiskBox[260, 0.058340995617936126], 
         DiskBox[261, 0.058340995617936126], 
         DiskBox[262, 0.058340995617936126], 
         DiskBox[263, 0.058340995617936126], 
         DiskBox[264, 0.058340995617936126], 
         DiskBox[265, 0.058340995617936126], 
         DiskBox[266, 0.058340995617936126], 
         DiskBox[267, 0.058340995617936126], 
         DiskBox[268, 0.058340995617936126], 
         DiskBox[269, 0.058340995617936126], 
         DiskBox[270, 0.058340995617936126], 
         DiskBox[271, 0.058340995617936126], 
         DiskBox[272, 0.058340995617936126], 
         DiskBox[273, 0.058340995617936126], 
         DiskBox[274, 0.058340995617936126], 
         DiskBox[275, 0.058340995617936126], 
         DiskBox[276, 0.058340995617936126], 
         DiskBox[277, 0.058340995617936126], 
         DiskBox[278, 0.058340995617936126], 
         DiskBox[279, 0.058340995617936126], 
         DiskBox[280, 0.058340995617936126], 
         DiskBox[281, 0.058340995617936126], 
         DiskBox[282, 0.058340995617936126], 
         DiskBox[283, 0.058340995617936126], 
         DiskBox[284, 0.058340995617936126], 
         DiskBox[285, 0.058340995617936126], 
         DiskBox[286, 0.058340995617936126], 
         DiskBox[287, 0.058340995617936126], 
         DiskBox[288, 0.058340995617936126], 
         DiskBox[289, 0.058340995617936126], 
         DiskBox[290, 0.058340995617936126], 
         DiskBox[291, 0.058340995617936126], 
         DiskBox[292, 0.058340995617936126], 
         DiskBox[293, 0.058340995617936126], 
         DiskBox[294, 0.058340995617936126], 
         DiskBox[295, 0.058340995617936126], 
         DiskBox[296, 0.058340995617936126], 
         DiskBox[297, 0.058340995617936126], 
         DiskBox[298, 0.058340995617936126], 
         DiskBox[299, 0.058340995617936126], 
         DiskBox[300, 0.058340995617936126], 
         DiskBox[301, 0.058340995617936126], 
         DiskBox[302, 0.058340995617936126], 
         DiskBox[303, 0.058340995617936126], 
         DiskBox[304, 0.058340995617936126], 
         DiskBox[305, 0.058340995617936126], 
         DiskBox[306, 0.058340995617936126], 
         DiskBox[307, 0.058340995617936126], 
         DiskBox[308, 0.058340995617936126], 
         DiskBox[309, 0.058340995617936126], 
         DiskBox[310, 0.058340995617936126], 
         DiskBox[311, 0.058340995617936126], 
         DiskBox[312, 0.058340995617936126], 
         DiskBox[313, 0.058340995617936126], 
         DiskBox[314, 0.058340995617936126], 
         DiskBox[315, 0.058340995617936126], 
         DiskBox[316, 0.058340995617936126], 
         DiskBox[317, 0.058340995617936126], 
         DiskBox[318, 0.058340995617936126], 
         DiskBox[319, 0.058340995617936126], 
         DiskBox[320, 0.058340995617936126], 
         DiskBox[321, 0.058340995617936126], 
         DiskBox[322, 0.058340995617936126], 
         DiskBox[323, 0.058340995617936126], 
         DiskBox[324, 0.058340995617936126], 
         DiskBox[325, 0.058340995617936126], 
         DiskBox[326, 0.058340995617936126], 
         DiskBox[327, 0.058340995617936126], 
         DiskBox[328, 0.058340995617936126], 
         DiskBox[329, 0.058340995617936126], 
         DiskBox[330, 0.058340995617936126], 
         DiskBox[331, 0.058340995617936126], 
         DiskBox[332, 0.058340995617936126], 
         DiskBox[333, 0.058340995617936126], 
         DiskBox[334, 0.058340995617936126], 
         DiskBox[335, 0.058340995617936126], 
         DiskBox[336, 0.058340995617936126], 
         DiskBox[337, 0.058340995617936126], 
         DiskBox[338, 0.058340995617936126], 
         DiskBox[339, 0.058340995617936126], 
         DiskBox[340, 0.058340995617936126], 
         DiskBox[341, 0.058340995617936126], 
         DiskBox[342, 0.058340995617936126], 
         DiskBox[343, 0.058340995617936126], 
         DiskBox[344, 0.058340995617936126], 
         DiskBox[345, 0.058340995617936126], 
         DiskBox[346, 0.058340995617936126], 
         DiskBox[347, 0.058340995617936126], 
         DiskBox[348, 0.058340995617936126], 
         DiskBox[349, 0.058340995617936126], 
         DiskBox[350, 0.058340995617936126], 
         DiskBox[351, 0.058340995617936126], 
         DiskBox[352, 0.058340995617936126], 
         DiskBox[353, 0.058340995617936126], 
         DiskBox[354, 0.058340995617936126], 
         DiskBox[355, 0.058340995617936126], 
         DiskBox[356, 0.058340995617936126], 
         DiskBox[357, 0.058340995617936126], 
         DiskBox[358, 0.058340995617936126], 
         DiskBox[359, 0.058340995617936126], 
         DiskBox[360, 0.058340995617936126], 
         DiskBox[361, 0.058340995617936126], 
         DiskBox[362, 0.058340995617936126], 
         DiskBox[363, 0.058340995617936126], 
         DiskBox[364, 0.058340995617936126], 
         DiskBox[365, 0.058340995617936126], 
         DiskBox[366, 0.058340995617936126], 
         DiskBox[367, 0.058340995617936126], 
         DiskBox[368, 0.058340995617936126], 
         DiskBox[369, 0.058340995617936126], 
         DiskBox[370, 0.058340995617936126], 
         DiskBox[371, 0.058340995617936126], 
         DiskBox[372, 0.058340995617936126], 
         DiskBox[373, 0.058340995617936126], 
         DiskBox[374, 0.058340995617936126], 
         DiskBox[375, 0.058340995617936126], 
         DiskBox[376, 0.058340995617936126], 
         DiskBox[377, 0.058340995617936126], 
         DiskBox[378, 0.058340995617936126], 
         DiskBox[379, 0.058340995617936126], 
         DiskBox[380, 0.058340995617936126], 
         DiskBox[381, 0.058340995617936126], 
         DiskBox[382, 0.058340995617936126], 
         DiskBox[383, 0.058340995617936126], 
         DiskBox[384, 0.058340995617936126], 
         DiskBox[385, 0.058340995617936126], 
         DiskBox[386, 0.058340995617936126], 
         DiskBox[387, 0.058340995617936126], 
         DiskBox[388, 0.058340995617936126], 
         DiskBox[389, 0.058340995617936126], 
         DiskBox[390, 0.058340995617936126], 
         DiskBox[391, 0.058340995617936126], 
         DiskBox[392, 0.058340995617936126], 
         DiskBox[393, 0.058340995617936126], 
         DiskBox[394, 0.058340995617936126], 
         DiskBox[395, 0.058340995617936126], 
         DiskBox[396, 0.058340995617936126], 
         DiskBox[397, 0.058340995617936126], 
         DiskBox[398, 0.058340995617936126], 
         DiskBox[399, 0.058340995617936126], 
         DiskBox[400, 0.058340995617936126], 
         DiskBox[401, 0.058340995617936126], 
         DiskBox[402, 0.058340995617936126], 
         DiskBox[403, 0.058340995617936126], 
         DiskBox[404, 0.058340995617936126], 
         DiskBox[405, 0.058340995617936126], 
         DiskBox[406, 0.058340995617936126], 
         DiskBox[407, 0.058340995617936126], 
         DiskBox[408, 0.058340995617936126], 
         DiskBox[409, 0.058340995617936126], 
         DiskBox[410, 0.058340995617936126], 
         DiskBox[411, 0.058340995617936126], 
         DiskBox[412, 0.058340995617936126], 
         DiskBox[413, 0.058340995617936126], 
         DiskBox[414, 0.058340995617936126], 
         DiskBox[415, 0.058340995617936126], 
         DiskBox[416, 0.058340995617936126], 
         DiskBox[417, 0.058340995617936126], 
         DiskBox[418, 0.058340995617936126], 
         DiskBox[419, 0.058340995617936126], 
         DiskBox[420, 0.058340995617936126], 
         DiskBox[421, 0.058340995617936126], 
         DiskBox[422, 0.058340995617936126], 
         DiskBox[423, 0.058340995617936126], 
         DiskBox[424, 0.058340995617936126], 
         DiskBox[425, 0.058340995617936126], 
         DiskBox[426, 0.058340995617936126], 
         DiskBox[427, 0.058340995617936126], 
         DiskBox[428, 0.058340995617936126], 
         DiskBox[429, 0.058340995617936126], 
         DiskBox[430, 0.058340995617936126], 
         DiskBox[431, 0.058340995617936126], 
         DiskBox[432, 0.058340995617936126], 
         DiskBox[433, 0.058340995617936126], 
         DiskBox[434, 0.058340995617936126], 
         DiskBox[435, 0.058340995617936126], 
         DiskBox[436, 0.058340995617936126], 
         DiskBox[437, 0.058340995617936126], 
         DiskBox[438, 0.058340995617936126], 
         DiskBox[439, 0.058340995617936126], 
         DiskBox[440, 0.058340995617936126], 
         DiskBox[441, 0.058340995617936126], 
         DiskBox[442, 0.058340995617936126], 
         DiskBox[443, 0.058340995617936126], 
         DiskBox[444, 0.058340995617936126], 
         DiskBox[445, 0.058340995617936126], 
         DiskBox[446, 0.058340995617936126], 
         DiskBox[447, 0.058340995617936126], 
         DiskBox[448, 0.058340995617936126], 
         DiskBox[449, 0.058340995617936126], 
         DiskBox[450, 0.058340995617936126], 
         DiskBox[451, 0.058340995617936126], 
         DiskBox[452, 0.058340995617936126], 
         DiskBox[453, 0.058340995617936126], 
         DiskBox[454, 0.058340995617936126], 
         DiskBox[455, 0.058340995617936126], 
         DiskBox[456, 0.058340995617936126], 
         DiskBox[457, 0.058340995617936126], 
         DiskBox[458, 0.058340995617936126], 
         DiskBox[459, 0.058340995617936126], 
         DiskBox[460, 0.058340995617936126], 
         DiskBox[461, 0.058340995617936126], 
         DiskBox[462, 0.058340995617936126], 
         DiskBox[463, 0.058340995617936126], 
         DiskBox[464, 0.058340995617936126], 
         DiskBox[465, 0.058340995617936126], 
         DiskBox[466, 0.058340995617936126], 
         DiskBox[467, 0.058340995617936126], 
         DiskBox[468, 0.058340995617936126], 
         DiskBox[469, 0.058340995617936126], 
         DiskBox[470, 0.058340995617936126], 
         DiskBox[471, 0.058340995617936126], 
         DiskBox[472, 0.058340995617936126], 
         DiskBox[473, 0.058340995617936126], 
         DiskBox[474, 0.058340995617936126], 
         DiskBox[475, 0.058340995617936126], 
         DiskBox[476, 0.058340995617936126], 
         DiskBox[477, 0.058340995617936126], 
         DiskBox[478, 0.058340995617936126], 
         DiskBox[479, 0.058340995617936126], 
         DiskBox[480, 0.058340995617936126], 
         DiskBox[481, 0.058340995617936126], 
         DiskBox[482, 0.058340995617936126], 
         DiskBox[483, 0.058340995617936126], 
         DiskBox[484, 0.058340995617936126], 
         DiskBox[485, 0.058340995617936126], 
         DiskBox[486, 0.058340995617936126], 
         DiskBox[487, 0.058340995617936126], 
         DiskBox[488, 0.058340995617936126], 
         DiskBox[489, 0.058340995617936126], 
         DiskBox[490, 0.058340995617936126], 
         DiskBox[491, 0.058340995617936126], 
         DiskBox[492, 0.058340995617936126], 
         DiskBox[493, 0.058340995617936126], 
         DiskBox[494, 0.058340995617936126], 
         DiskBox[495, 0.058340995617936126], 
         DiskBox[496, 0.058340995617936126], 
         DiskBox[497, 0.058340995617936126], 
         DiskBox[498, 0.058340995617936126], 
         DiskBox[499, 0.058340995617936126], 
         DiskBox[500, 0.058340995617936126], 
         DiskBox[501, 0.058340995617936126], 
         DiskBox[502, 0.058340995617936126], 
         DiskBox[503, 0.058340995617936126], 
         DiskBox[504, 0.058340995617936126], 
         DiskBox[505, 0.058340995617936126], 
         DiskBox[506, 0.058340995617936126], 
         DiskBox[507, 0.058340995617936126], 
         DiskBox[508, 0.058340995617936126], 
         DiskBox[509, 0.058340995617936126], 
         DiskBox[510, 0.058340995617936126], 
         DiskBox[511, 0.058340995617936126], 
         DiskBox[512, 0.058340995617936126], 
         DiskBox[513, 0.058340995617936126], 
         DiskBox[514, 0.058340995617936126], 
         DiskBox[515, 0.058340995617936126], 
         DiskBox[516, 0.058340995617936126], 
         DiskBox[517, 0.058340995617936126], 
         DiskBox[518, 0.058340995617936126], 
         DiskBox[519, 0.058340995617936126], 
         DiskBox[520, 0.058340995617936126], 
         DiskBox[521, 0.058340995617936126], 
         DiskBox[522, 0.058340995617936126], 
         DiskBox[523, 0.058340995617936126], 
         DiskBox[524, 0.058340995617936126], 
         DiskBox[525, 0.058340995617936126], 
         DiskBox[526, 0.058340995617936126], 
         DiskBox[527, 0.058340995617936126], 
         DiskBox[528, 0.058340995617936126], 
         DiskBox[529, 0.058340995617936126], 
         DiskBox[530, 0.058340995617936126], 
         DiskBox[531, 0.058340995617936126], 
         DiskBox[532, 0.058340995617936126], 
         DiskBox[533, 0.058340995617936126], 
         DiskBox[534, 0.058340995617936126], 
         DiskBox[535, 0.058340995617936126], 
         DiskBox[536, 0.058340995617936126], 
         DiskBox[537, 0.058340995617936126], 
         DiskBox[538, 0.058340995617936126], 
         DiskBox[539, 0.058340995617936126], 
         DiskBox[540, 0.058340995617936126], 
         DiskBox[541, 0.058340995617936126], 
         DiskBox[542, 0.058340995617936126], 
         DiskBox[543, 0.058340995617936126], 
         DiskBox[544, 0.058340995617936126], 
         DiskBox[545, 0.058340995617936126], 
         DiskBox[546, 0.058340995617936126], 
         DiskBox[547, 0.058340995617936126], 
         DiskBox[548, 0.058340995617936126], 
         DiskBox[549, 0.058340995617936126], 
         DiskBox[550, 0.058340995617936126], 
         DiskBox[551, 0.058340995617936126], 
         DiskBox[552, 0.058340995617936126], 
         DiskBox[553, 0.058340995617936126], 
         DiskBox[554, 0.058340995617936126], 
         DiskBox[555, 0.058340995617936126], 
         DiskBox[556, 0.058340995617936126], 
         DiskBox[557, 0.058340995617936126], 
         DiskBox[558, 0.058340995617936126], 
         DiskBox[559, 0.058340995617936126], 
         DiskBox[560, 0.058340995617936126], 
         DiskBox[561, 0.058340995617936126], 
         DiskBox[562, 0.058340995617936126], 
         DiskBox[563, 0.058340995617936126], 
         DiskBox[564, 0.058340995617936126], 
         DiskBox[565, 0.058340995617936126], 
         DiskBox[566, 0.058340995617936126], 
         DiskBox[567, 0.058340995617936126], 
         DiskBox[568, 0.058340995617936126], 
         DiskBox[569, 0.058340995617936126], 
         DiskBox[570, 0.058340995617936126], 
         DiskBox[571, 0.058340995617936126], 
         DiskBox[572, 0.058340995617936126], 
         DiskBox[573, 0.058340995617936126], 
         DiskBox[574, 0.058340995617936126], 
         DiskBox[575, 0.058340995617936126], 
         DiskBox[576, 0.058340995617936126], 
         DiskBox[577, 0.058340995617936126], 
         DiskBox[578, 0.058340995617936126], 
         DiskBox[579, 0.058340995617936126], 
         DiskBox[580, 0.058340995617936126], 
         DiskBox[581, 0.058340995617936126], 
         DiskBox[582, 0.058340995617936126], 
         DiskBox[583, 0.058340995617936126], 
         DiskBox[584, 0.058340995617936126], 
         DiskBox[585, 0.058340995617936126], 
         DiskBox[586, 0.058340995617936126], 
         DiskBox[587, 0.058340995617936126], 
         DiskBox[588, 0.058340995617936126], 
         DiskBox[589, 0.058340995617936126], 
         DiskBox[590, 0.058340995617936126], 
         DiskBox[591, 0.058340995617936126], 
         DiskBox[592, 0.058340995617936126], 
         DiskBox[593, 0.058340995617936126], 
         DiskBox[594, 0.058340995617936126], 
         DiskBox[595, 0.058340995617936126], 
         DiskBox[596, 0.058340995617936126], 
         DiskBox[597, 0.058340995617936126], 
         DiskBox[598, 0.058340995617936126], 
         DiskBox[599, 0.058340995617936126], 
         DiskBox[600, 0.058340995617936126], 
         DiskBox[601, 0.058340995617936126], 
         DiskBox[602, 0.058340995617936126], 
         DiskBox[603, 0.058340995617936126], 
         DiskBox[604, 0.058340995617936126], 
         DiskBox[605, 0.058340995617936126], 
         DiskBox[606, 0.058340995617936126], 
         DiskBox[607, 0.058340995617936126], 
         DiskBox[608, 0.058340995617936126], 
         DiskBox[609, 0.058340995617936126], 
         DiskBox[610, 0.058340995617936126], 
         DiskBox[611, 0.058340995617936126], 
         DiskBox[612, 0.058340995617936126], 
         DiskBox[613, 0.058340995617936126], 
         DiskBox[614, 0.058340995617936126], 
         DiskBox[615, 0.058340995617936126], 
         DiskBox[616, 0.058340995617936126], 
         DiskBox[617, 0.058340995617936126], 
         DiskBox[618, 0.058340995617936126], 
         DiskBox[619, 0.058340995617936126], 
         DiskBox[620, 0.058340995617936126], 
         DiskBox[621, 0.058340995617936126], 
         DiskBox[622, 0.058340995617936126], 
         DiskBox[623, 0.058340995617936126], 
         DiskBox[624, 0.058340995617936126], 
         DiskBox[625, 0.058340995617936126], 
         DiskBox[626, 0.058340995617936126], 
         DiskBox[627, 0.058340995617936126], 
         DiskBox[628, 0.058340995617936126], 
         DiskBox[629, 0.058340995617936126], 
         DiskBox[630, 0.058340995617936126], 
         DiskBox[631, 0.058340995617936126], 
         DiskBox[632, 0.058340995617936126], 
         DiskBox[633, 0.058340995617936126], 
         DiskBox[634, 0.058340995617936126], 
         DiskBox[635, 0.058340995617936126], 
         DiskBox[636, 0.058340995617936126], 
         DiskBox[637, 0.058340995617936126], 
         DiskBox[638, 0.058340995617936126], 
         DiskBox[639, 0.058340995617936126], 
         DiskBox[640, 0.058340995617936126], 
         DiskBox[641, 0.058340995617936126], 
         DiskBox[642, 0.058340995617936126], 
         DiskBox[643, 0.058340995617936126], 
         DiskBox[644, 0.058340995617936126], 
         DiskBox[645, 0.058340995617936126], 
         DiskBox[646, 0.058340995617936126], 
         DiskBox[647, 0.058340995617936126], 
         DiskBox[648, 0.058340995617936126], 
         DiskBox[649, 0.058340995617936126], 
         DiskBox[650, 0.058340995617936126], 
         DiskBox[651, 0.058340995617936126], 
         DiskBox[652, 0.058340995617936126], 
         DiskBox[653, 0.058340995617936126], 
         DiskBox[654, 0.058340995617936126], 
         DiskBox[655, 0.058340995617936126], 
         DiskBox[656, 0.058340995617936126], 
         DiskBox[657, 0.058340995617936126], 
         DiskBox[658, 0.058340995617936126], 
         DiskBox[659, 0.058340995617936126], 
         DiskBox[660, 0.058340995617936126], 
         DiskBox[661, 0.058340995617936126], 
         DiskBox[662, 0.058340995617936126], 
         DiskBox[663, 0.058340995617936126], 
         DiskBox[664, 0.058340995617936126], 
         DiskBox[665, 0.058340995617936126], 
         DiskBox[666, 0.058340995617936126], 
         DiskBox[667, 0.058340995617936126], 
         DiskBox[668, 0.058340995617936126], 
         DiskBox[669, 0.058340995617936126], 
         DiskBox[670, 0.058340995617936126], 
         DiskBox[671, 0.058340995617936126], 
         DiskBox[672, 0.058340995617936126], 
         DiskBox[673, 0.058340995617936126], 
         DiskBox[674, 0.058340995617936126], 
         DiskBox[675, 0.058340995617936126], 
         DiskBox[676, 0.058340995617936126], 
         DiskBox[677, 0.058340995617936126], 
         DiskBox[678, 0.058340995617936126], 
         DiskBox[679, 0.058340995617936126], 
         DiskBox[680, 0.058340995617936126], 
         DiskBox[681, 0.058340995617936126], 
         DiskBox[682, 0.058340995617936126], 
         DiskBox[683, 0.058340995617936126], 
         DiskBox[684, 0.058340995617936126], 
         DiskBox[685, 0.058340995617936126], 
         DiskBox[686, 0.058340995617936126], 
         DiskBox[687, 0.058340995617936126], 
         DiskBox[688, 0.058340995617936126], 
         DiskBox[689, 0.058340995617936126], 
         DiskBox[690, 0.058340995617936126], 
         DiskBox[691, 0.058340995617936126], 
         DiskBox[692, 0.058340995617936126], 
         DiskBox[693, 0.058340995617936126], 
         DiskBox[694, 0.058340995617936126], 
         DiskBox[695, 0.058340995617936126], 
         DiskBox[696, 0.058340995617936126], 
         DiskBox[697, 0.058340995617936126], 
         DiskBox[698, 0.058340995617936126], 
         DiskBox[699, 0.058340995617936126], 
         DiskBox[700, 0.058340995617936126], 
         DiskBox[701, 0.058340995617936126], 
         DiskBox[702, 0.058340995617936126], 
         DiskBox[703, 0.058340995617936126], 
         DiskBox[704, 0.058340995617936126], 
         DiskBox[705, 0.058340995617936126], 
         DiskBox[706, 0.058340995617936126], 
         DiskBox[707, 0.058340995617936126], 
         DiskBox[708, 0.058340995617936126], 
         DiskBox[709, 0.058340995617936126], 
         DiskBox[710, 0.058340995617936126], 
         DiskBox[711, 0.058340995617936126], 
         DiskBox[712, 0.058340995617936126], 
         DiskBox[713, 0.058340995617936126], 
         DiskBox[714, 0.058340995617936126], 
         DiskBox[715, 0.058340995617936126], 
         DiskBox[716, 0.058340995617936126], 
         DiskBox[717, 0.058340995617936126], 
         DiskBox[718, 0.058340995617936126], 
         DiskBox[719, 0.058340995617936126], 
         DiskBox[720, 0.058340995617936126], 
         DiskBox[721, 0.058340995617936126], 
         DiskBox[722, 0.058340995617936126], 
         DiskBox[723, 0.058340995617936126], 
         DiskBox[724, 0.058340995617936126], 
         DiskBox[725, 0.058340995617936126], 
         DiskBox[726, 0.058340995617936126], 
         DiskBox[727, 0.058340995617936126], 
         DiskBox[728, 0.058340995617936126], 
         DiskBox[729, 0.058340995617936126], 
         DiskBox[730, 0.058340995617936126], 
         DiskBox[731, 0.058340995617936126], 
         DiskBox[732, 0.058340995617936126], 
         DiskBox[733, 0.058340995617936126], 
         DiskBox[734, 0.058340995617936126], 
         DiskBox[735, 0.058340995617936126], 
         DiskBox[736, 0.058340995617936126], 
         DiskBox[737, 0.058340995617936126], 
         DiskBox[738, 0.058340995617936126]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.827919472168521*^9, 3.8279698226334085`*^9, 3.8279698613309793`*^9, {
   3.8279703197668753`*^9, 3.8279703482224617`*^9}, 3.8279728204054704`*^9, 
   3.827974112652102*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"5a824fdc-366d-4e96-827d-3a7379bb8d85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stoichiometricmatrix", "=", "stoichioforhomosapiens"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metabolites", "=", "738"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fluxexchanges", "=", "1008"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steadystatevector", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "metabolites"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "500"}], "}"}], ",", "fluxexchanges"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"first", "[", "a_", "]"}], ":=", 
   RowBox[{
    RowBox[{"First", "/@", 
     RowBox[{"GatherBy", "[", 
      RowBox[{
       RowBox[{"Ordering", "@", "a"}], ",", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "&"}]}], "]"}]}], "//", "Sort"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8266018181138163`*^9, 3.826601827616828*^9}, {
  3.8266033251320276`*^9, 3.826603394768468*^9}, {3.8266198994993844`*^9, 
  3.826619906893012*^9}, {3.826635132144923*^9, 3.826635132568225*^9}, {
  3.8279729870117116`*^9, 
  3.827972998523628*^9}},ExpressionUUID->"61e1aad2-231b-42ad-958f-\
8b4cf72928b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"syntheticseqgenerator", "[", 
   RowBox[{
   "stoichiometricmatrix_", ",", "steadystatevector_", ",", "boundaries_", 
    ",", "fluxexchanges_", ",", "sequencesize_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "subsetsizechoice", ",", "subsetpositions", ",", "coefficients", ",", 
      "objectivefunctions", ",", "solutionvectors"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subsetsizechoice", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "fluxexchanges"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"subsetpositions", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "@", "fluxexchanges"}], ",", "subsetsizechoice"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"coefficients", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "subsetsizechoice"}], 
         "]"}], ",", "sequencesize"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"objectivefunctions", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ReplacePart", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.", ",", "fluxexchanges"}], "]"}], ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"subsetpositions", ",", 
              RowBox[{"coefficients", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "sequencesize"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"solutionvectors", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"LinearProgramming", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"objectivefunctions", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", "stoichiometricmatrix", 
          ",", "steadystatevector", ",", "boundaries"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "objectivefunctions"}]}], "}"}]}], 
       "]"}]}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8266351739300585`*^9, 3.826635215943279*^9}, {
   3.8266352683343153`*^9, 3.8266354819775057`*^9}, {3.8266355132621107`*^9, 
   3.826635535252803*^9}, {3.826636057810994*^9, 3.8266360785912924`*^9}, {
   3.8266392988474464`*^9, 3.826639305527588*^9}, 3.8266393419519544`*^9, {
   3.8266534049250927`*^9, 3.8266534088937216`*^9}, 3.8266760340497336`*^9, 
   3.827972998523628*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"a9ba4c3d-c722-4e1f-8737-2e911d88eb57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequences", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"syntheticseqgenerator", "[", 
       RowBox[{
       "stoichiometricmatrix", ",", "steadystatevector", ",", "boundaries", 
        ",", "fluxexchanges", ",", "300"}], "]"}], ",", "200"}], "]"}]}], 
   ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Chop", "[", 
    RowBox[{"sequences", ",", 
     RowBox[{"10", "^", 
      RowBox[{"-", "5"}]}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8266355773609533`*^9, 3.826635600149911*^9}, {
   3.8266393647818317`*^9, 3.8266393830738955`*^9}, {3.8266394412787695`*^9, 
   3.8266394629563475`*^9}, {3.826639510445099*^9, 3.8266395152950077`*^9}, {
   3.8266413334700346`*^9, 3.826641333556304*^9}, {3.82664144544678*^9, 
   3.8266414455019655`*^9}, {3.826727587386547*^9, 3.8267276009689674`*^9}, {
   3.8272168632589693`*^9, 3.8272168639369955`*^9}, 
   3.827972998523628*^9},ExpressionUUID->"48b08232-f72e-45e7-8958-\
308d86488aba"],

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"sequenceschopped", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"first", "@", 
         RowBox[{"sequenceschopped", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "All"}], "]"}], "]"}], 
     ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "200"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Flatten", "[", 
     RowBox[{"sequenceschopped", ",", "1"}], "]"}], ")"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"first", "@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"sequenceschopped", ",", "1"}], "]"}]}], ",", "All"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Flatten", "[", 
     RowBox[{"sequenceschopped", ",", "1"}], "]"}], ")"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"first", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Flatten", "[", 
         RowBox[{"sequenceschopped", ",", "1"}], "]"}], ")"}], 
       "\[Transpose]"}], "]"}]}], "]"}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.82721680914478*^9, 3.8272168368467674`*^9}, {
   3.8274641418133106`*^9, 3.8274641426403575`*^9}, 
   3.827972998523628*^9},ExpressionUUID->"cec02b29-fcb4-449d-943b-\
c4c2b3f40d64"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Varying Amount of Selected Subsets",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272202415290284`*^9, 3.8272202636975317`*^9}, {
   3.827220297142401*^9, 3.8272203260102425`*^9}, 3.827974014700467*^9, {
   3.8279741203470078`*^9, 
   3.8279741281669903`*^9}},ExpressionUUID->"cd26e807-1b35-4d15-a839-\
404728092d26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
   RowBox[{
   "stoichiometricmatrix_", ",", "steadystatevector_", ",", "boundaries_", 
    ",", "fluxexchanges_", ",", "sequencesize_", ",", "subsetnumber_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "subsetsizechoice", ",", "subsetpositions", ",", "coefficients", ",", 
      "objectivefunctions", ",", "solutionvectors"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subsetsizechoice", "=", "subsetnumber"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"subsetpositions", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "@", "fluxexchanges"}], ",", "subsetsizechoice"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"coefficients", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "subsetsizechoice"}], 
         "]"}], ",", "sequencesize"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"objectivefunctions", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ReplacePart", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.", ",", "fluxexchanges"}], "]"}], ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"subsetpositions", ",", 
              RowBox[{"coefficients", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "sequencesize"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"solutionvectors", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"LinearProgramming", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"objectivefunctions", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", "stoichiometricmatrix", 
          ",", "steadystatevector", ",", "boundaries"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "objectivefunctions"}]}], "}"}]}], 
       "]"}]}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272166958564386`*^9, 3.827216706754908*^9}, {
   3.8272174003965287`*^9, 3.827217422513888*^9}, 3.827974014708991*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"8cb40589-a10b-4ad1-a1b6-0f3fd5ed4b80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"subsetamounts", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"100", ",", "1000", ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "boundaries", 
          ",", "fluxexchanges", ",", "10", ",", "i"}], "]"}], ",", "10"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "subsetamounts"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uniquefluxexchanges", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{"first", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Flatten", "[", 
          RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uniqueevents", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"first", "@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827464198878089*^9, 3.8274641989894295`*^9}, {
   3.8279730966922665`*^9, 3.827973121582154*^9}, {3.827973202663316*^9, 
   3.8279732316365604`*^9}, {3.8279737757774935`*^9, 3.827973787837226*^9}, 
   3.827974014708991*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"d76fe613-e0ab-42b8-bf27-93939264d09c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"30.5996629`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.8272196785939713`*^9, {3.8279731139113474`*^9, 3.82797313110658*^9}, 
   3.827973261904651*^9, 3.827973819165807*^9, 3.8279740147099924`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"5d2510a0-ca39-4c8d-a9d8-d8eea92dd089"],

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{"{", 
   RowBox[{"subsetamounts", ",", "uniqueevents"}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8279749043201675`*^9, 3.827974905305115*^9}, 
   3.827978116325981*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"d047329e-a8c6-489e-ac0f-0d1f596851c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", ",", "89"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "81"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "82"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"400", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"500", ",", "73"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"600", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"700", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"800", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"900", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1000", ",", "48"}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.827974881505907*^9, 3.8279749059101896`*^9}, 
   3.827978116327944*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"53c3f511-0c84-4dcf-b1e0-c2c01fb88b70"],

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"Overlay", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"subsetamounts", ",", "uniquefluxexchanges"}], "}"}], "]"}], 
       ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "35"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "All"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Unique Flux Exchanges\>\"", ",", "Blue"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "@", "subsetamounts"}], ",", 
            RowBox[{"Last", "@", "subsetamounts"}]}], "}"}], ",", "All"}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"subsetamounts", ",", "uniqueevents"}], "}"}], "]"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "35"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"All", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Subset Amount\>\"", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Unique Events\>\"", ",", "Red"}], "]"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "@", "subsetamounts"}], ",", 
            RowBox[{"Last", "@", "subsetamounts"}]}], "}"}], ",", "All"}], 
         "}"}]}]}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8279736420401316`*^9, 3.827973683142578*^9}, {
   3.827973805326457*^9, 3.8279738083334737`*^9}, {3.8279738471920557`*^9, 
   3.8279739701785793`*^9}, 3.8279740147099924`*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"c77309eb-6518-4401-9a49-f3b3a806fd82"],

Cell[BoxData[
 OverlayBox[{
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{100., 3.}, {200., 3.}, {300., 3.}, {400., 3.}, {500., 3.}, {
       600., 3.}, {700., 3.}, {800., 3.}, {900., 3.}, {1000., 
       3.}}]}}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{100., 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, 
      FormBox[
       StyleBox["\"Unique Flux Exchanges\"", 
        RGBColor[0, 0, 1], StripOnInput -> False], TraditionalForm]}, {
     None, None}},
   FrameTicks->{{None, All}, {All, None}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->35,
   ImageSize->350,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{100, 1000}, {0, 6.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{100., 89.}, {200., 81.}, {300., 82.}, {400., 54.}, {500., 
       73.}, {600., 53.}, {700., 58.}, {800., 57.}, {900., 47.}, {1000., 
       48.}}]}}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{100., 44.666666666666664`},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Unique Events\"", 
        RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox["\"Subset Amount\"", TraditionalForm], None}},
   FrameTicks->{{All, None}, {All, None}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->35,
   ImageSize->350,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{100, 1000}, {44.666666666666664`, 89.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.827973972229726*^9, 3.8279740147099924`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"bb26fe4a-1d88-4eed-ba34-83b27651bdcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Varying Range of Objective Function Coefficients",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8272202415290284`*^9, 3.8272202636975317`*^9}, {
   3.8272233710549808`*^9, 3.8272233812300425`*^9}, {3.827974200107839*^9, 
   3.8279742207066474`*^9}, 
   3.8279768149134173`*^9},ExpressionUUID->"0b05e5e5-f96a-477c-9ed3-\
6ed16abc5900"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "500"}], "}"}], ",", "fluxexchanges"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coefboundaries", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8272249556306815`*^9, 3.8272251115604696`*^9}, 
   3.8279742207066474`*^9, {3.8279757958313203`*^9, 3.8279758127412357`*^9}, {
   3.8279758960888243`*^9, 3.827975898291149*^9}, 3.8279768149144216`*^9},
 CellLabel->
  "In[171]:=",ExpressionUUID->"07b8671b-c2ba-47aa-aff0-f75b02515927"],

Cell[BoxData[
 RowBox[{
  RowBox[{"syntheticseqgeneratorfxdsubsetsizevaryingcoeff", "[", 
   RowBox[{
   "stoichiometricmatrix_", ",", "steadystatevector_", ",", "boundaries_", 
    ",", "fluxexchanges_", ",", "sequencesize_", ",", "subsetnumber_", ",", 
    "coefboundaries_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "subsetsizechoice", ",", "subsetpositions", ",", "coefficients", ",", 
      "objectivefunctions", ",", "solutionvectors"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subsetsizechoice", "=", "subsetnumber"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"subsetpositions", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "@", "fluxexchanges"}], ",", "subsetsizechoice"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"coefficients", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"coefboundaries", ",", "subsetsizechoice"}], "]"}], ",", 
        "sequencesize"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"objectivefunctions", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ReplacePart", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.", ",", "fluxexchanges"}], "]"}], ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"subsetpositions", ",", 
              RowBox[{"coefficients", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "sequencesize"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"solutionvectors", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"LinearProgramming", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"objectivefunctions", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", "stoichiometricmatrix", 
          ",", "steadystatevector", ",", "boundaries"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "objectivefunctions"}]}], "}"}]}], 
       "]"}]}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.827224453974499*^9, 3.8272244557785735`*^9}, {
   3.827224506382226*^9, 3.827224527822291*^9}, {3.82722456111222*^9, 
   3.827224605132887*^9}, 3.8279742207066474`*^9, 3.8279768149144216`*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"bdece311-7469-4221-ad07-3d24712f0272"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsizevaryingcoeff", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "boundaries", 
          ",", "fluxexchanges", ",", "10", ",", "20", ",", "i"}], "]"}], ",", 
        "10"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "coefboundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uniquefluxexchanges", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{"first", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Flatten", "[", 
          RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uniqueevents", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"first", "@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, {3.82722182648096*^9, 
   3.827221826536984*^9}, 3.8272226005130577`*^9, {3.8272248137146025`*^9, 
   3.8272248294079*^9}, {3.827224865969437*^9, 3.827224907334979*^9}, 
   3.8279742207066474`*^9, {3.8279743038750277`*^9, 3.827974304098137*^9}, {
   3.8279746092819085`*^9, 3.8279746100024023`*^9}, {3.827974644409677*^9, 
   3.827974645585458*^9}, 3.8279768149144216`*^9},
 CellLabel->
  "In[173]:=",ExpressionUUID->"78a35992-c54c-45c7-9762-4b6ac5ff201a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"32.9352839`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8272269521577044`*^9, 3.8279742207066474`*^9, 
  3.8279743339650335`*^9, 3.8279758513998566`*^9, 3.82797605311495*^9, 
  3.8279768149144216`*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"00985017-0b51-4f10-bf52-12ad2d7dde17"],

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"Overlay", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "#2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "#2"}], "}"}]}], "}"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"coefboundaries", ",", "uniquefluxexchanges"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "35"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "All"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Unique Flux Exchanges\>\"", ",", "Blue"}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "#2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "#2"}], "}"}]}], "}"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"coefboundaries", ",", "uniqueevents"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "35"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"All", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"All", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Objective Function Coefficients\>\"", ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Unique Events\>\"", ",", "Red"}], "]"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.827974818803609*^9, 3.8279748188492956`*^9}, 
   3.827976457819626*^9, 3.8279765078874245`*^9, {3.827976540046373*^9, 
   3.827976543482217*^9}, {3.8279765805940323`*^9, 3.8279765814715776`*^9}, {
   3.8279766863446093`*^9, 3.827976751051197*^9}, 3.8279768149144216`*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"87211642-95dc-4086-a903-800b1ef5f260"],

Cell[BoxData[
 OverlayBox[{
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 3.}, {1., 3.}, {1., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-1., 3.}, {0., 3.}, {0., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 3.}, {2., 3.}, {2., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-2., 3.}, {0., 3.}, {0., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-1., 3.}, {1., 3.}, {1., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-2., 3.}, {2., 3.}, {2., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-3., 3.}, {3., 3.}, {3., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 3.}, {5., 3.}, {5., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 3.}, {-5., 3.}, {-5., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., 3.}, {1., 3.}, {1., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-5., 3.}, {5., 3.}, {5., 3.}}]}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-4., 3.}, {4., 3.}, {4., 3.}}]}}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, 
      FormBox[
       StyleBox["\"Unique Flux Exchanges\"", 
        RGBColor[0, 0, 1], StripOnInput -> False], TraditionalForm]}, {
     None, None}},
   FrameTicks->{{None, All}, {All, None}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->35,
   ImageSize->350,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{-5., 5.}, {0, 6.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 100.}, {1., 100.}, {1., 100.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-1., 100.}, {0., 100.}, {0., 100.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 99.}, {2., 99.}, {2., 99.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-2., 91.}, {0., 91.}, {0., 91.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-1., 100.}, {1., 100.}, {1., 100.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-2., 100.}, {2., 100.}, {2., 100.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-3., 97.}, {3., 97.}, {3., 97.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 100.}, {5., 100.}, {5., 100.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0., 100.}, {-5., 100.}, {-5., 100.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., 10.}, {1., 10.}, {1., 10.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-5., 100.}, {5., 100.}, {5., 100.}}]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{-4., 100.}, {4., 100.}, {4., 100.}}]}}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Unique Events\"", 
        RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox["\"Objective Function Coefficients\"", TraditionalForm], None}},
   FrameTicks->{{All, None}, {All, None}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->35,
   ImageSize->350,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{-5., 5.}, {0, 100.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.8279764594530044`*^9, 3.82797650977206*^9, 3.82797654403111*^9, 
   3.827976582131459*^9, {3.827976698162324*^9, 3.827976711425127*^9}, 
   3.827976751714425*^9, 3.8279768149144216`*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"083f5977-525e-4fb6-8de6-d3383a23be9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Varying Vector of Boundaries",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8272202415290284`*^9, 3.8272202636975317`*^9}, {
   3.827974142283854*^9, 3.8279741473800197`*^9}, 
   3.8279781037780185`*^9},ExpressionUUID->"808be21c-ba65-4fd5-854e-\
1f86a3acadc4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xaxis", "=", 
   RowBox[{"Reverse", "@", 
    RowBox[{"Range", "[", 
     RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"i", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", "fluxexchanges"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Reverse", "@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "i", ",", 
          "fluxexchanges", ",", "10", ",", "20"}], "]"}], ",", "10"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "boundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uniquefluxexchanges", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{"first", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Flatten", "[", 
          RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uniqueevents", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"first", "@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, {3.82722182648096*^9, 
   3.827221826536984*^9}, 3.8272226005130577`*^9, {3.827229001256073*^9, 
   3.827229048332595*^9}, {3.8272292618255043`*^9, 3.827229262022353*^9}, {
   3.8279770404291277`*^9, 3.8279770464363976`*^9}, {3.827977078894683*^9, 
   3.8279770818283477`*^9}, {3.8279775051756124`*^9, 
   3.8279775139571743`*^9}, {3.82797764685478*^9, 3.827977647207453*^9}, {
   3.827978097322856*^9, 3.8279781037790065`*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"f644084c-531c-460f-9d2c-29956c0dfc4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16.1977904`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.827229545789624*^9, 3.8279771001454387`*^9, 3.8279775088378143`*^9, 
   3.8279775394027243`*^9, 3.8279776640401964`*^9, {3.827978097322856*^9, 
   3.8279781037790065`*^9}},
 CellLabel->
  "Out[229]=",ExpressionUUID->"4e481845-1491-4909-9b35-26899820910d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tickvalues", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"400", ",", "400"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"600", ",", "600"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"800", ",", "800"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "1000"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Rotate", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", "tickvalues", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot3", "=", 
  RowBox[{"Overlay", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"xaxis", ",", "uniquefluxexchanges"}], "}"}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "35"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"None", ",", "ticks"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"All", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Unique Flux Exchanges\>\"", ",", "Blue"}], "]"}]}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "20"}]}], "]"}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"xaxis", ",", "uniqueevents"}], "}"}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "35"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"All", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"All", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Possibility of Bound:(-5,5)\>\"", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Unique Events\>\"", ",", "Red"}], "]"}]}], "}"}]}], 
        ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"ImagePadding", "\[Rule]", "20"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8279775591701365`*^9, 3.8279776268154125`*^9}, {
  3.8279776983218117`*^9, 3.827977743004348*^9}, {3.827977780824675*^9, 
  3.8279778654080005`*^9}, {3.827977915411845*^9, 3.8279779426826334`*^9}, {
  3.8279779740652027`*^9, 3.8279780446354876`*^9}, {3.827978097322856*^9, 
  3.827978103779984*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"e28e56c4-a2a7-44af-a94b-02906fc07b55"],

Cell[BoxData[
 OverlayBox[{
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{100., 1006.}, {90., 736.}, {80., 439.}, {70., 308.}, {60., 
       169.}, {50., 79.}, {40., 19.}, {30., 10.}, {20., 4.}, {10., 
       1.}}]}}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{8.125, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, 
      FormBox[
       StyleBox["\"Unique Flux Exchanges\"", 
        RGBColor[0, 0, 1], StripOnInput -> False], TraditionalForm]}, {
     None, None}},
   FrameTicks->{{None, {{0, 
        FormBox[
         RotationBox["0", BoxRotation -> 1.5707963267948966`], 
         TraditionalForm]}, {200, 
        FormBox[
         RotationBox["200", BoxRotation -> 1.5707963267948966`], 
         TraditionalForm]}, {400, 
        FormBox[
         RotationBox["400", BoxRotation -> 1.5707963267948966`], 
         TraditionalForm]}, {600, 
        FormBox[
         RotationBox["600", BoxRotation -> 1.5707963267948966`], 
         TraditionalForm]}, {800, 
        FormBox[
         RotationBox["800", BoxRotation -> 1.5707963267948966`], 
         TraditionalForm]}, {1000, 
        FormBox[
         RotationBox["1000", BoxRotation -> 1.5707963267948966`], 
         TraditionalForm]}}}, {All, None}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->35,
   ImageSize->350,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{8.125, 100.}, {0, 1006.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{100., 100.}, {90., 100.}, {80., 100.}, {70., 100.}, {60., 
       91.}, {50., 100.}, {40., 29.}, {30., 5.}, {20., 3.}, {10., 
       1.}}]}}, {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{8.125, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Unique Events\"", 
        RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox["\"Possibility of Bound:(-5,5)\"", TraditionalForm], None}},
   FrameTicks->{{All, None}, {All, None}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->35,
   ImageSize->350,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{8.125, 100.}, {0, 100.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]},
  ImageSize->Large]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8279775938245087`*^9, 3.8279776072326565`*^9}, 
   3.827977664786811*^9, 3.8279777291532545`*^9, {3.8279777887837076`*^9, 
   3.8279778658222003`*^9}, {3.8279780100154047`*^9, 3.82797804973092*^9}, {
   3.8279780973248186`*^9, 3.827978103779984*^9}},
 CellLabel->
  "Out[256]=",ExpressionUUID->"582ccf73-eaa7-434a-a1b0-b8e3d9bf5a01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Model Cartoon",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8279781462099237`*^9, 
  3.827978160272624*^9}},ExpressionUUID->"f63f4c1b-96d2-4002-b6cf-\
b91c744f0547"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQm4XUWZv+tz733uc5/nf2+LQ0+23QqEQUaBQEKY1W4RbaS1uxWZ+SPd
0AoawjyKMiRMYVBR6UYFQcRuwLaZB2UKIAqKIRNJCJkIISEDycl46u5fnXw7
365Ta+29T/ZJsjbvy1OcnT3UqlWr1qrvV1/VV1sef+rnTvw/3vWud532/9T+
97njzjxo5Mjjzv78FrV//NMpp530L6d8+YRPnTLqy//y5ZHDj/8/a2/+37X/
nVtL/1ftdQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAIDNjJ5w28nPhwMOVhofbps58JxmjJu6Lp9aGrOwc0UE
AAAAAACoDAudxno+XDJu05Rixh3jO6fPvNY7eU6Y0ZkiAgAAAABA19G6HppR
NZ0xc0444eDO+NMGzsJwSSfL0HBOU8OTHSkjAAAAAAB0HW3ooSfHPD8I8wcH
0fe2GWjTzteZ145oPQAAAAAAKMDroVLt0NOgyU64o6czxx9E31tH504OhEE5
tw77CQEAAAAAoCtp8DuV+b4adEsH/W8ta812GSRt2gYNWrOJX9HPjy0vK1oP
AAAAAACa0aiHSn1fDZos1RhOf6zTNDPGzQmXeK1Vy3tGYX6ZlGqjmbVjnOy1
09Rw27iehnwaNZLXRIk27adbU23VU9PA48MJvm5q53zJHQvbmAdacvwMXnOX
f7dn4HNe265D/WZdXTRcm/GZOgMAAAAAgM2HRj1S5k8q9VEl+wBIG2T1m9OS
Df7EJt9tOHaSTijSPUXzJxOdlzuXE8rK1eq6vzb9levro5mvrj0NaWx4HaYJ
nyIAAAAAwGZLh+KylOmIxrRe8zTTenXN0cz/V1T+XFyWmY06qVSzlqRW5oO2
F5PF++qa6cIBaL0B1WHi80XrAQAAAABUhkaNVqYxyv1//XXb+L65gSHZpyHV
B021ZqLNVMa6f25hwxzRtPz947I00Xmptql9/mSR7mmq3Vr3l/b7fjO/Ydvx
XgZYh+neDq4unlTdVmHPDQAAAACAdyidicuS+n/a0HNN5jk2atH+uqZ4Xmka
l2VhPx3X71wL92foiXrVn39T7Vaqx5r5y5r4z9rUegOuw0Sjsz4PAAAAAKAq
DEJclpwOKtEm5XEqm5eveJ5k6stqpmnb0V8t+NLKNGzpGrhcSn7f1jrADajD
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
u3ZtTBt6r7TznYG003au40DK1uq90mq9FH3WSh6t/K7Vc2v1Hmm3rK0eu517
tNX8OnGflJ1jWZkAAABg46B+1+xUpfT9NWvWNLzfTl7e/sv9u5ltrM90/FWr
VsW/ZTaFz8+SlX/16tWFx7Jj2Dnq3/q+7HclvdbnltJj5MrRal2lxy06hr8O
ueuS1q/Hvptex1y+9r7Px/8+/a7/vJVr6c8x1yZU10XX2j7317KoHenf+p69
58vok3/P2lkuf/31Wu8973lP9Osdd9xx4ZlnnqlrvYHcK0X1mtaZnXtqm/vz
9+dhKc23qO3m7pOyduWPnWuLuTpstV6sHfjzbeeZ4c8vd1+l3y07vq+Xsvyt
vlvVQWVlzz3LcvWQlseuhW/3/lzsd+l7Ph873/R5kz5P7dlY1O7TdtvKswoA
AAA6T2pflNnRXgf5/jvNq8gesn7fkrf5U9vGa6z0u6n2SO1db9fkktePaf4+
D2/zlNlf6fm3Wu9F+tfbZP74qV3ny+o1UmqHe33lbdOiekr1WJpS2zKtI6vT
Iu2U08s5OzO1FYvsxrS+vH2e08lF7+e0dqr1hg0bFv16W2+9dTj66KOjX2/F
ihX98mslldVr7t9lZU2vdVoX6XVItV1R+XPv+/dy9Zl+32uh9L6yz/RMyd2T
RW0sfTal9VNUf+nYUU4LpsdPtVWuHLk6buV50Go7SfVnWp5cvfl7yL+Xe7al
bSb3PMi1L/+8zT1XisaS0HoAAACDT5HdmRtHtr/qy2Xbmr1UZHem+Zqtktp7
Rfa1t2u8PeftxvT4XmPkbPucDsnZMTktmdZJWZ21ew1y+sfXQc6eT8fpZSvn
9Jm39VP72l+L1D5Lz7+sbnJ17PMv+25OG1i9tKJJ07bZzjHTdlP2u6lTp8b1
eiNGjAjve9/7wpZbbhmOOOKI8NRTT8X7oVV9V6QDUn1epGOU0vGWouucez+t
q/S+K9KAXhul+VkZ07Ecr528nkvvXb2vOvTnlJYnNxaT6rO0/RfpYfPZp2MK
RRonbQtF4xztav0i3Z57Llv95cZO/O+LnmO5Z276Wa6efV03099F44BF4xoA
AAAwuKQ6I7U17Du5ft3beH6+o7d5yuyo1A5N7dmcDvRj8jl70GxJszP8GH0z
X5/ZsGZz+nlw3qa1fIts43bxNrLy8telyEbv6emJ5czZZek19HZiqge9jZ36
Oqw+7Bqk3y3yYbSir33y+iy1YXP2tW8HqodUG6R2fM4mtvqwcum8rE7T9mXH
mzJlSvTrSeu9//3vD1tttVU48sgjo1+vaO5eu6nI7re68uVJ/SqWUv9YUX65
+8h+r3oour5pu0zrOC1D0fVsdi8W6Tx//VOtmvuOb/NpOYvGhPzzxH6fG3fw
5UuvSdk9kXt+5O6BIi2ZalH/rE61rtWB2reSXRd/frl7P6epfXn8s7bs3k/b
XDo3FwAAAAaP3PhsTuspmT3stZR9XqQzcvrMbGtvT6b2VqpTli1b1qAjU1sp
tS982cryTW2cIv9WquNyto2vs3ZI8ygrd2pP57SZ6bEi3eSPkdNkqa2Zq4uc
Te7t4bSteNs6d718fl57pZqtSLul9rtdw5yPq6z8ubZobeKVV14JY8eOjXM4
5ddTbBZbr2dar8in0szPUqRX0jaevp9qr5xeSf1v6Tmn4zRFqajNeH9TK+M5
+rdd31RfF52/1a3XJbk2bXWRe54UtcEyrZ1rJ0XaJh3zKbvPWtGBRc84e89r
8vT8i65Dei8VfSc3vpa2j7TNpeMN9oz3z4DcNQMAAIDBo8gO8X232WDeTvI2
mMfrutTWydnjRfav/63ZeDm/T2pn5sbHfT7pPCb/O28jGd52yumLonpste6L
9IuvwyL/RE6X5OzqNH97P+eLbba+rsi+9vah97mU6YfUZ5Nep9xczGbaKLXT
Ux+Vb385rZ+rM8tTczil9XxslmOPPba+Xi9ty2W6KbWrc3rf6iP1a+U0Rc7/
kytLWn+5+zytizRGUVr3/joWaaV03mZ6DVLfUvrcyB2naPzDrkXuvkzrLm2H
ZdcqPWb6rCnSMGXP2Fw7Tq+bv5/8NfL3eZlOzT0DUh97biwivSdz190f25fR
6770WenLBAAAAINLzg7LjYF7GyRn46e6JLU5/G9y9mjONkg1Q84uTzVBajem
tmJqm+XslJytnNZBaqvkdEIzctrR26xeY9sYeapRU3s1tSdTG97XcZnW89c5
pxdyerBM6+Q0RM7HkrYZfw65YxfpJ68xUq1n7xXNM8zpISXFZvFaT349xWZ5
8sknw/Lly0s1aCspbQvWRlItkvMHFrXZ9N7zdZ7TPUWaIK2rVI/74+e0Y1qe
tL0WtancdU2fCz4Pa9N2b6b1l6ur3LMlHRfJ6aV0nMlfu3aud9l95M8tvTfL
9GEuv9yzPR1zy7WB9P7MfTfXX5SdD1oPAABg46D+WXaqUtFcG28jm8/Na6ci
bZUbi07HxVNN4H8ve1xzN61szeYDFdkgueMbOZtLr4vmmJbZbamubUaZpvZ2
r+kye0+vVSdpbImcDZ/ahnatcra0f+2Pn/oJU13s30/rLR0jKLLri+x3a3e5
9uXLWuTXLaqDdD+8VKvk2qX59XwcTu2v98QTT8S5iLk23EqbyWmr1F5O11r6
Oks1TJF2y+k3ix8q7LNUJ6XnZddE96aSXe9UR5bVQzr/sExjpW1Dv9Vx3377
7YY1q7lngteA/tlhxy/yPTe7TkVjCv4YOb1d9sxoRROm92bu+ZBr1838lkXH
9Xo254NNr5O/t/2x03GlVp+RAAAAsGGkNonZVX6tldcfubHvVF8I02pmS6Zj
z17r5ey7IpvK3rP1Pl7TyPbzNndq9+fsi1RbCb3252+2SjoW7o9TtAdFGV4T
m6b1msXXW5H/K7X7U5+P13Z2Tfy/vaa287Xrb3Z07joU6apUy5lP0q8ftDq0
65FqzbROvY5sNmctnZPmdZKdr9qJztdr63SMwOxnr6dN6w0fPrxhz4Vx48bV
y2ptshWtZ3Vj30/t8iJNa/Xmx2l8PeX0X2rr53xg+p35J4XVQW58JWfXF+kG
O15Op6btIG2/vl3njp/zZ9nzwcqtf+u87FnkNYx/xqWaMNVR9h1bZ+ivm7Xx
omeX13rp9ciNn/h6Ut5qs34Px3RsKG1HOZ957llvr61subpNr4k9H/w9ns7z
zenr9LkFAAAAGwfrr994443w+9//Ptx7773h1ltvDT/5yU/Cz372s/Dzn/88
/PSnPw133nlnuOOOO+Jn+vevf/3raP8uXbo0O/7vddGSJUvCiy++GP77v/87
3H777TEfJeWjv5a3jqnXjz32WJg+fXq0cVK70tugeq28X3755XDPPfeE2267
LeZv+ar8+qv3lPd//ud/xnIrzobsP69HUhtXn0kT6LsPP/xwzEv5K/n6UN56
T//W+akOlXczVEc6x0cffTTmc8stt9TrQvnbcexcLO8FCxZkdYq3e3X8WbNm
xXpUflYvqgPlpWtq9aTPVHcvvPBCWLRoUd0O9vEHva2uupozZ074zW9+E3/n
y6i/lq+S2oqOrzVtr7/+esN83HQMwK7FvHnzYt533313rBMru5KugfKzOr/r
rrvCs88+G2bPnh3tT5+Pld/HDVVbfe6552I78OdvbdKusY6r72g/BZVbedie
C3vvvXfYYost4p4LxxxzTIzNonby5ptvhvHjx4f77ruv3u7K0kMPPRTzVPv1
9ZFqJr3WdyZMmBDuv//+hjau62nXVMe0a6y81W51/6S2urfpbZxB333ggQfq
+Skvy99fW7Ub5T1x4sTYVry9n/rA7f559dVXw+OPPx7r0+4f5W/HsOPo/V/8
4hfx2utZ5PVrOp6k/C1vzaG1vH27s/OwZ5by1jNo/vz5Dbok58NSmjt3brz+
ykO/923P6sXau9rq888/H8vtx4hSbWO6bOHChfH7KpNvz/ZcUT3reHZt9YyY
MWNGQ5s2bZf69ZS3nhPK2+rB2odv7/rsv/7rv+JYhepR9ZnThF6j6ZqrDnW+
ysc/x62dWN46np61ad5oPQAAgGLSMfPcZ0Zqd+X6WG/nTJo0Kfz4xz8OJ598
cjj00EPDZz7zmfAP//AP4fOf/3w47LDDwuc+97nw2c9+NnzqU5+K6bzzzosa
SNrDxoa9XWD2gmwb2eI/+tGPwkknnRT+/u//PuatPJWUp6VDDjkk/NM//VPM
+1e/+lXddsrFdrDzkU0m20N5Kw/lrWOo3P/4j/8Yj6F/q8z//M//HC644IJo
M1u5U9vJ3tNr2e+ybc8999yYn/JR3eg4vk6srk444YRYh7Iny3yJ5iN45JFH
Ynm++MUv1vNQnjqGjmXH03snnnhi1CCK/W8+iiK/y+LFi8Pvfve7cOGFF8Zy
q159Xko6npLK/2//9m+x3LInrZ69X8TbrbLbZEt++9vfjrFJ9Hvla/ViSf9W
nX/hC18IV111VfjDH/7Qb65jbn6o9NJ3v/vdmPfBBx/c0FZUbtWRlV3728nX
Jn0gPeR9Xn5PBdOX0pE/+MEPYvxMa+PpNf30pz8dy628r7zyylhuaWfpsuuv
vz7O4Xz3u9/doPWkIaXb1Q5POeWUWE4rc1E688wzow2vMnkfas6HJm0tXX3a
aafF8qqM/t5RnSjpPPTZGWecETWn8s75v3z9q61I551++ukxL8vb8re8dVzd
T6NGjYrjDjNnzqzr63TdnuWve0xzXC+55JJw+OGHx3bo27mOoTLrfaXjjz8+
3HjjjbGNe93l/ch2b7711ltR511++eWxjemaqYwqs907dh46py9/+cvhP/7j
P6Jm9u3QPwMtf10PaZorrrgiPjNUNnsW6q+1FWs7//t//+9w0003xTEn0zU5
v57+Lf2ttvL9738/nq/q1Mqsv6oXe+bquDr+N7/5zTim4bV7zperv1pXqntZ
zyLVifJQXtY+rG50b+majB49Ol4jacT0fvRtUHm/9tprUTuqLv09b23E2ok9
x1Vu6T09R1MdmfpzW9GCOd+gXT/0IwAAdAPpfEfTWP4zI51Ll87jSteCyE65
+uqrwyc/+cmw0047hY985CNhxx13DLvsskvYeeed42ulHXbYIXz4wx+O89dk
f2qs1885Svtt2VWyEWSTy87T7xXXQnl+9KMfjcfadtttY976q/dk55utWjRO
bkk2p2wb2S4q8/bbbx//7r777jEvHU//Vt56T3a+xs697yCdF2VJ39HYt2x6
1YPyUnktT71n5d9uu+3CJz7xibgHm2xzb8+k19D0pepPNtnQoUNjfqoT5adz
0F/Vid7fdddd63lLC9kcKm9j+/qR7pHfQLak8lTZlJfytGNYnei1bDZdn8mT
J9c1Um4Or81XU97nn39+3GtOv/dltjpRHSn/PfbYI2oU6TFpJu+vSud9Kcm/
ePHFF4f99tuv3i6szPbarrPmU0ozyZ40rZeW19vyGhe47LLLwoEHHlgvs/Lz
7VtJ7+vcTj311Oj3kP1ufj3FZpFfz9bryWdpvrF///d/j7avrpfVS1H60pe+
FP1Raium9dK5ffZa94/GSqRpVFaVz8pqZVd9W9mVt3ws8u2WreMy7SE/ksYb
rE4sX7v39dfaobSHfDgaF7C5sP6Z5OtdYx7SkRpLUL2l19O3ccU1PeCAA8K3
vvWtqMfS2J+pVpXWk1YeOXJkvK91PVR2u0ctb/3b7k3pQrUvK7evG6+ZdH/p
ukvXqtxpffty6/XHP/7x2K40vqL6zLVDoX9LW+tZK/2r3+kZZe3Z17s9D/Vs
0DiWztXPobC5Ezbf3MY3lLfGKD72sY/F3/vnip2D1bfuza985SvxGqk+/Vxp
r8nsvpeO1DiMnrX2DLH73te53lPe//qv/xrnifixr7SN2Dmo7Do/lcPmEufm
Pafr/tL8AAAAqoy3W22NiB8f9Vov7av9ejPfn5tNLztY/i7ZQ/JjnXPOOfGv
fGz2b72Wjf+1r30tjr/LbkpjEKZz85S/+Q7k3znrrLOiD0F5yqelPGWv66/8
EWeffXbMW/aejZEX2fBKGo+WXabxaf1e+aus3/jGN2JZlZ/+rfd1jO9973t1
P5C3JVMtrCTbQ9+VP0e/V15KOo6dg/KWlpHNqbp78MEHY5lSLe6voWk91Z/8
AZan8tJrHcvKruPo37Il5Qf0cyF9eb3fQ9dX+kA+LMtPf1VeOwfVhd5X0nXR
tVfe/rpZ+dPrKr+EtISun8qssuoaKi8dw45j5yFfgH6TxgLJzbmUdpcGlk9A
eVr+1g71Wn+Vt/yW0h2aU2jtMOe/svLrempu26WXXlovp87B8rT8dcyLLroo
/PCHP4w+JvOXSGvL9pbW03iFaT2dl+pOfm7Z2XYdy5LalNqtbNt0rqy/pvqr
9qR5kNdcc039mikP1Y/lZ/enPtP9o7mqyjsdG0nvI9W7fJPSsb6dqB5Uv/YM
0LGUVAe6JzTG42Pc5PxYusfkA5Y/TflZe/DPF0tq/9J58o1K/+bi0fhxAukD
zUVQ21Je0mWWp47hj6O8pa3kj5T+TecSpz5m/ZW2V9tSO1Ae9gyxv1bvqhON
Tajcmq+ocpVpPT3TdG+qjet5YeWzZ5ddS3tf52E+w9z6N7vnrfyaQ6Hz1Pna
M8/uHf8813HU9m+++ebwxz/+sb7u08/dTtui2qHGVcaMGVMvp7UXfxy9p3Ir
b/nFU42a3pc2v1ptRZpW41nqM9I53mVjFkXPWwAAgKrg7W0/Dp1qPbODZKto
HpLsIa9rvP1hmkOv1dfLzpb++O1vfxt9Nz7JvtP7+ly2oexrzdGydS7ej+Xt
HLOpZN+oL/d5WZJdqjFx/dVcJfX1fj1QOjfP14POVf43nat+r7yV9G/L246j
95W3xpnTmIE5H4KOJRte5fZltmOozFZu1YnsmnTtWO46Wv6qP2la/dbys2PY
dbBzUhlkA6c2WS4WhNmUuvZ2La0eVL86nh1L76uudH28XvI2atr+ZIdJA+m3
ytvqwP5tx9NfHUPfVRtMy5yO11u55TNSnvZ7K6v/t71WO7e24n2dOV+t/i3N
aXXr61l1rDz1bzsHXRvTS/qd9FCq9TT/TfUmf47qUG3At+2ipHao62nawGu7
9N+qG43F2P2T1oeV1+pF96buiVw79O3PXquNv/TSSw33u9WNXUffxpW3j1uT
03pK+o7m76keLU+1tbR9qNyqfx1P195i7/rYMb4N2rNP10a+aLVpa992DX39
2GfT160BzsUI9mMP5huXvvf3pK/v9Fmg75qmyc0v9GVX3jpP1aU9D31dWLJj
qP5s/Cit57T+VQYrt28T9hxJ26F/jqcxXfwz3PvG1Q59fft8fX9hefs1s74u
fF2rXUhDai6Cxuk0r0P9kY8bldOI6ZxTAACAqmL9Wa6vTO0I2ZHy6Wi8WetC
ZPOn6+PTtR7mD7J4lhbjz5LFWNdnPta65ZP2495OsHlRFm8yzVfHtH/ba2+z
m+3k7T/TCPY9X0bZO3Y8i83u93Dwa/P8HC4/p8uObXOL9DurF18XlixvbwOn
/oj02llsDF0zn7/FwfTHsjqxek3jLfq2YDa8xSv19apzkVaz4/g68uMBXmPn
ym15pfn46+rPJ51H7I/hdZmVO61fy9Pys2Na3t4O9lo9vaY+n7TsvsxW71Yu
2c/SenvttVd9L3XNY5a/zdpUev3Kkp2D11xeX3utp2T3pm8nufLbe96+TvVS
6uOztuavnb8f/X2lv+m+jLn2559Jlqe/D9NngW/j3k+d5umfW74dpu1N5c61
Rz+/IdVhPul7/h709evr3t8H/hlYdu/b2IZvB2m78M8Af+/7+s49U5R3ei+q
fFZHvq7TOk/nTaS+w/R6ps8Wn6y+/FpC3579fSo9+Nhjj8W5vrvttlvYd999
42vFf1FfJk3v53r7uQe+7Gg9AACoMrmx89RHJxte83EUN0PxCGSXapxU9qit
vbff+zlSufmLRfokN4cmtZnSvJrZJ7nj+bh43v+TW2Pjj5GzV9Lj5c7Nx2lP
y5ba47m1j758qUYqSum4eVp2r3X993Px1NPzKfK55K5P7nupHzl3zXOpqL3k
jpMrV1HdpuUpukapJvDtIhe/Py1vrkz6nXyT0nq2v560ntaV2l7qZedblnLt
IPXr2WvfTvx1Mu1Qdr5GTnfk6rusjtIxIvuOp9k4R9pWi54Zud+m7SSXb6oV
fd7pcyTXvtPnSW7cwL7jx5yKypP+2+rI113umZoerxUtmSt/+hwpewbk9F6u
neTqLleP6fHSuSDSofI/ah6+1gLaOnGtIdWce/kR1bf52M7pPWMJAACgqlgf
7f1G3s+lcVTNw9JaHcUh+MAHPhDjEmh8VHOcbH2N32eqyL5N7RZvP5kvQuTs
8dS28LZLajdYyumadOy9yCaz92wcPF2HY3ZSbj9fs7H073RvrdRWydls/rWw
c2um9fxnZfa1146+bluxif3Yd3ruvk7KbF5vV+W0pf6aPyLnn/J63euanO7M
aY/c8dPxfH++/nqm7ckfK20j/jvmW/H56/um9RQPRn49zeGU1rP1ejl7vpWU
0wpFNnfOVs9poJxd7p8jOU2R1mu6div1Mdo1L/Kn+LZu94byS/emMz9Rbu1f
M42Y3nve123rkv11Lqu3XN5lGqcVvVh2b6fPh9zzwv8m3afSt/ncve/9l1Yv
vh8x329arpw2zN1Pdj19/abxWFM9nrZ3K5P+Ld+d+i/F2VKcT8V5+eAHPxhj
en7nO9+J/r1cLKD0uQQAAFBlrJ9MbRHZAeoLzZ+nPlI+PcUR1B5kFuvA22xG
zq4o03p+DU3Odk1tLl/mnEbz9nROU6X2WGob23fNdvF2YpENnOqhnP1c9J4v
X7ruJ/Xr5eooJadx7N9FvsYi3ZDTUf7cU63n/UCpzen9Qqmtn5azzP/kr5NI
5+EW1XGR1kuPkdPMXsvZfZPa+Lk2mLN17fcWh9P2XLBYtLaXemrfNktpWcre
S3/r23JO2xW1kbS9+Tqy9mb16rVeei/6vcPLtJ7XNXY9U1+9byNpHRa1c39N
03/7OvP1ktNtuVSktXy7s+R9m0XtK5dfWRn9OfnPvQ5Pv1v0vMyVLXdvp8/M
nD7LfSf17+b85mk+Rc8Qmyuv+0x9lvb+UdxXxRLVXg6K/6l1i8186AAAAFWl
yG6T3aX+UTEDNedlq622ijG2FRtS8a61vt18eblx2pyOSDVRzoax4+f685xt
XmT35GzvnF3q7SHzT6b+AW9DtmLD5WzKtFxFdrMdM5035221Vq9rat96Wzxn
O6X15PMpuqbp5810bM4ObfV3vmypTep9yyK9DrnrntZr0fl7OzL1Jfp6zJ1n
2u7SZHE4NYbyJ3/yJ1HrKTaL4pVYjKTUtm6W0nZaVI+5+rdy+3ltRfVRdE+l
vkuv/cx2z2mutF2m7T1te/69oraTa6NF9256TYvqLf1drj0XPbfS56z93mvr
nJ5q9R71Or2snefuu/RZU/QMzdV9+p1cX1B0T+eeJ37Moai9FB0/PRcljdkp
nqn03le/+tW454XmdKpv0x7t06dP7xf7Oe0XAQAAqkjO3lH/qph42qdL+8Zp
HFR7G2nepnSeYkL6OZu+z7V5WDl/TfpezkZI+++0z/X2Q87GSvv6Mpu3yCfl
tV6ZrimyXcrG5Its0TSvgdobubzSfIs0Qa7O07rMla/I3kt/34pWKStzkQ1q
Oj2Ni2HXOGfjtnJNrD5Tv40/rvcb5eztXP7+nDSeov0npfUUh1NjKqlfr0zD
lLWhsjaVu/cHaqf7z1L9m7apVOv7PNLv5srYTNM1u59yefhnky9fej2L7o3c
PW9lt7xz41K5fIo+91otd5+nz6bc9S86ZrP7t6z8RZ+ndVn2vEyviW9DRXkX
tdWiYylJyymm7f/8z//E/f+0B6HGL+Xr0542Po5y+hwAAACoKr4/NI2mNXqK
xaI92NQXar6L7M9f/epXsT/0MdZSWyHtm70N4W2osjlERVoitbvtr62hSX+f
zvFMbSLvY/DnUnYOOa2Xs2t83uk55OzgZnqm3euZswNzc2hTuym1iXM2Xk4T
Fo2/52xJ/33fLlK7tEibFWkuf11zNnLufHLXsSxuvunK1P9UpGGK2osl7ZWu
vfPkZ3j/+98f9+f26/UGovP8eVmbSHWefz93DYps8lSX5M7RX+PcPNyc7s+1
R1F0/CINU1b+VEf4a5S7dmn502dI+uzI+ZHTcyoqV64dpnWcXjt/PdN25b+b
u76+/On1S++T3Odp+dK6yY31pWW09+z5beMyuWuUnqe/x4u0nr9ffTzSefPm
xX0LjzzyyBgLab/99gs33HBDHHfx60XTOgcAAKgyppnUb2qPJs3dVB+oWBGH
HnpouPnmm6M/z9sHOdsytTNy38nZ8zkbtSiPnN1UNJ8ztbtytmCqpcrsz9S+
ytln9lnudwOx2dPyldHM5s3Z80V1lLMby+os1TQ+zyIbPs2vrAxFtn2zek7L
WNQ+c9cx9x1/nmmdlNVXrmyyL7WXuWk9G1fZUK1XdF2L2kpROysrf+7cy37X
ynVKy7mh91Gu3eX0RtFzpei4ufaeu/45NvR6Fl3Tsu8WjU/l2m1OX5XVaavt
pSiVacdW8m/lOnk9aPFvf/SjH8W159pb/pe//GXc4y9dS9rsWgIAAGzuWH/o
+0XtVStfg+aVHXjggXEPWsWnlj9vc+37NtdyAZQxffr0+nq9973vfdHPoPV6
0nqyO4t0GkA3MZjtOzeeoHgtisny0EMPhcceeyxo3azicRbN1wYAAKgqNuZp
Wk+vZX/efvvt4aSTTgrnnntuXN+g2NX0eQCdRfea7aVu++uh9QAGF/VlGrvU
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
SUzt4eOpAtdeOzbG4XzPe94TtZ7tuSCtZxrP4gX6WElmp/o51tyjAK3h5z9P
mDAhxiOz9Xo2h9PWqwMAAFQV8wWkWk/7Lvj1Cmi9quB13vrUu87L105qyLX2
xtpaWlNLq2tpVS2tqL3fU/vm8pjW1F6vqb23OqyspZoyqf1rZXxnVS2tqH3a
U/vWslpaGlNP7fXK2mera9+Rb2pNLX9LtTapNhf/q/279p16Wve5vh9T7b2Y
eleve2/d63Xvre3ty39Z7deLau8urpV5hc6lVi21r4e1a/rOZWnt/fh5Le8V
vev8Y7UP16yt/X7tuvVxVp2qDP24dozar9enmKF+1/eyduiwtpb56toBe5at
Cj09K0PPqlpaU6uPtaql1WHa9Knh+uuvi/al5nBqz4XDDz88zuGU1vM+PK2d
tfeE13r49ADaw/vCpfUuvvjisPvuu4ddd901rt3zY50AAABVxc/hHDlyZPQr
mNZTzGk/R4w+rwpIB6zpl3pj6tN8a2NK1WD/lM4H9cprVS2tjLpOSq6mQXpr
/1/bE1avram+tdIjq2qaR3F9anovppr6q+kmacHat2pqT6/XxLz0X1279Tb6
qPpK6zWdfb7uN7Xjx9Rrn617v6bPetf0JdlyK2q/WRaU+rSqaTGl1bWTXR71
Xm94u/a91TVB27taSXag9J7+9tYrpn58K9O6FEWefivZty6tWbk2LF+6Mrw+
580we868sGDxorBsjXRvTe/1rgyvTH8lXH/D9XWtZ3suPPXUU/W4SPItLF68
OMyaNSsmvTZ/n2m9NGYLABSTrnGdPHly3Ev9kEMOifupa161rWEAAACoMja2
+frrr4dTTz01+hV23HHHGJvFxjXxGVQF8+et7pdM661TVhk12Jj6a721UeWt
if66Veu8dz21V8tjWt27rGY7LQtrV9cU1ZoVtVSzkVYr1Y69ek2fblrdGzXT
Gump3r6/klDRTRb9Zmv7nIf1N/051YWWK5Q71yje6pn15SURt6p2tqtqx6q9
XNnbl9YmVdS77rOesO5zmXcr+/4hzbdW+m2d1us7vOll09B9SR9G/Vj77Zrl
tU97ajW2Yk1YvHBpeOF3fwj3PfBQuP/Rh8NvXvptmDJ7anhz6YIweerkcMMN
N0St9773vS/61Y855pg4h3PRokVh7ty54eWXXw6PPPJI+MUvfhGeeOKJqPf8
/M5U63GfApRj8zfNNz579uzwwAMPRL2ndXv33XdfmDNnThxv4X4CAIAq47Xe
OeecE4YOHRrjTn/zm9+MWo/99apEc61nvr0ifVek9fo8euvnZfbN2FRaHtNa
zeTsramltSvkzFqn85TW9GkuOdNW92UeZdnaxlTXeHWtF5KJpPZlr/V615XW
az0rcO86rbfOz7Zm/fzT3lTrrVk3LzWs+1zvr+xLpvXWriuT1XBfHa11dbqu
bGv7frNqWU2HLa+llTWt99bSmkZ7Olxz7XXhjHPOChdcelG46Sf/EZ545onw
+JOPx/liisP5/ve/P/rVv/jFL0Zd99xzz4W77ror2p9nnHFGvCfvvvvu8Npr
r9X3WEDrAbSPj2eke2np0qVxXEX+vYkTJ0adZ3Fw8ZUDAECVsRgPCxYsCD/9
6U/jfupnnnlmuOOOO2Lfl8Z+gM0dr0aKlNv6b/Umn64NGZkVgptL6eZTxqQ5
lBJGUSmtXwRXT70NbrmCCaItbhaR+2BdqaMOTPLwp792vQTszbgK6/80Leh+
a+7CtIZtbmtDueLva7UV/Zi1tGZtWNGzMsyePSf85LbbwpFHHxV2G7pb2OeA
fcK/nvyv4eyzz4raTvOm//zP/zx86EMfCgcddFCcT631s5/73OdiXMBPf/rT
MV7E888/H+dwNttjHQDK8XE4fQwk+fKYzwIAAN2CzWXp6emJMaYVE0JJaxWW
LVvWME+MPq8KtCae2pdaRd9MBFxvmto6yADodcctP6m6KzD3fij+vKwmch9K
68WYmavW24uyH1944YXwrUu+FYYNHxY+9OEPhV122TnO3dxtt93iOr2//uu/
Dh/+8IfD9ttvH/dg+OhHPxrndGpO9cknnxznmGldrbdNic8C0D65cZJ0zz3W
wAIAQDfg16hL72mNkPwGth5INiprFgBaR/eK7p+VK1bWbUjdY/Pnzw8PPPhA
+MpXvhJ1nLTdBz/4wfA3f/M38bV8eltuuWX891/+5V+Gv/iLvwjbbbdd+Id/
+Idw6623hldffTXeo3ZfFs3j5F4FKMfuSa/r0j0s0XoAANANpPswe3tR/V60
WVeuxF8A0CLmx/P3jd1Pim37wx/+MHzmM5+JcZCk56TrpPWk8Szpvb/6q7+K
eztfcskl4aWXXqqvH7K8vU2K1gNoHR/r1+5XjaPYfdUQC5j7CQAAKoy3Q/1+
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
SFjwwXxafMhhYemNj7zD6wigs6RzOKXpNK759ttvh2XLltX3UaHfAwCAqmN9
neZpao+hZ599NvzmN78JU6ZMiX3eQGLJAzQDrbeOh84o1HkN6ZAfvLPrCaCD
5PbnTPdj8XugAAAAVBUb05TWk7bTuKaSxWQxrafXaD3oFGi9PtbceFhrWq+W
lj60qUsL0B2ke6/4MU3bZ8HvrwIAAFBVTOuZrrNk/Z6NaxKPDDoJWq+PlSOd
nhv5SMNnqQ5cfOO0TVRKgO7Cx2YRfr9M03rM3QQAgG7Aj12m81h838eestBJ
0HpiWug5pETLTf1BWIxfD6Dj5OZwej9fmgAAAKqKX4tn6xNs73Qlfab5nczh
hE6C1hOPhKVlWq5hLd8ZYeUmKWO16O1Va8I2h3L8HE0/h8VrPeZwAgBAN2D9
ma1ZsD7PxjJtfqd/D2BDQeuFRMsdFnqmrv9oTe2zxczfbIs1axQfH7scmuP1
nGk9H2/af47WAwCAKuPXLeRikTF/EwYDtF6rcVm05wI6rxkrYkyNVev8etjm
UI7XcX6delFMTgAAgKri/Xp+b1m/To8+DzoNWi+Jy4LWGxDLa42nZ01vWL1W
z6ia1qulvhbFswqKya1Nl19Pe+wpHrX+mq+PPRcAAKDKFO0z5Ps5+zdzWaBT
oPUa47I0S8zh7M8q7Qtaa0Qr9Qzr1VjU6pjQetCMdExTa9LfeOONMGnSpDBh
woQwd+7cqPm095D6PgAAgKri158XzWHxvj+AToDWK4/Lsuahxhic7KWeZ1VM
Na0XW5LpPL3mWQXF+PUJ6t+k7X75y1+Gb3zjG+G8884Ld999d5g9e3bUgPj1
AACgypiOU582bdq08Pvf/z6MHz++3s/5ONQAneIdr/VK4rIYjXM8icOZY3VM
vVHtofWgVdL99V555ZVw9dVXh49//ONh//33j6+nTp1K/GkAAKg81uctWrQo
/OxnPwvf/OY3w5gxY8L//M//hDfffJOY0zAovNO1XkNclqzPLpnjiV8vS5+6
W6f1NH+zF60HreH13pQpU8Lo0aPD8OHDwx577BGuuOKKMH36dNbrAQBA5bG5
LJrDcv7554d99903jm1eeumlYcaMGf32HALoBO90rdfgsxv5SOOHUx/pt5aP
9Xp56lpPGi9qPdt3gWcVlKP+zNbryYcnX95+++0Xhg0bFq666qrY/7F2AQAA
qo7tLySt97WvfS0MGTIkfOQjHwmjRo2K/Z+Na6L1oJOkWu+d5TluLy4LPr1i
1ms96bxVaD1oGb9mT3496Ttpvb322itcfvnlsf/DpwcAAFXHYpHNmzcv6rvt
t98+7LzzzuHss8+OfZ3W7Pk9ZgE6QU7rxffeCU1sahJ3pSz+5kh0Xhnr53Dq
1ap176D1oJw0/rTib2oOp7Te3nvvHV9PnjyZ9XoAAFB5LDbL66+/Hk477bTo
0/voRz8aY5EpVotpPXQedJIyrddbf9GlKqeZ1jvksKjxVmbitUAjaD0YCDaf
xeasSOvJlyett88++0Qfn+K1oPUAAKDq2DwWxd3UHM5tttkm7LTTTtGvJ60n
nac+kTmc0Ela1nq2Bkt7p61dFdauIRplu6zu4nloDVqPOZzQIurzpOOsb5PW
0xp1xWbZc88967FZ7HMAAICqYnNZtF7vzDPPjHM4d9hhh/haczht7JM16tBJ
vNaz1EzrrV2zKqxepX1AFC9IbXJ1bJ+rV6+p6Zm1YVUtrVytsYkVm/DMNj/W
dPF92xibBa0HrWF+PYs9ZnE4NX9z6NCh4corrwyvvvoqcagBAKDymL/ujTfe
qGs98+tpDout1UPrQafpLUjrPzUVuCbqvrUac1i9Kuq83t61MZkttlb+adlv
a/T5qhiro3etfqOxjFou3evaasqaWDdrYr11m93a5xPujW2hb2yAPRegNfw8
Tmk97TUkrSe/nl5rXotpQQAAgKpia9MVm0Xr9WwO5znnnBP7P4vDidaDTcM6
zSdtt7a331xi/+++130asK4T+4lJ05CrO1/MzZS+07Z66l3vO13/abAT8N/r
wzTU+v0M4rzv3tCXwkaMoeqK1X+MwI8NbMYXAzYb1O/ZGgXpuu9+97vhc5/7
XPjsZz8bbrzxxujXs7FOAACAqmJxOBWbJY3DKb+ejXvS58Gmo9Hj1/r3i36T
9yR2jtaO3zcPdc06v7nNR10V1xEpJtLq1as2g70t857Xwa7BgbF5lQY2X2yd
umk9rWF44IEH4h57mr/50EMPxfFP+j0AAKg6Pg7nhRdeGNemjxgxIu6rbjGn
8esBdB6zNZXefvvtsHjx4vjXYkbU56euSwDQGdI9F5YtWxbjk02YMCFMnDgx
9oc9PT2s1wMAgK5Afdlbb70Vbr311nD66adHn95tt90W+z6/tx5aD6Bz6L6S
Pam1ss8991y4//77w1NPPRVmzZoV/Xpmh2JvAnQW03r214+7mK+PtXoAANBN
yOb8/e9/Hx599NHwxBNPxBjU8jGYnYnOA+gsuqfkT5Af4Tvf+U449dRTw2WX
XRbGjRsXfXzmT0frAXSWnNbzfj7pPOZvAgBAN6E+bdGiRWHBggXx7/Lly+tj
m+wxBDA4LF26NLzwwgvRn37ggQeGY489Nq4b0j1oPgbmTwN0Fpun4rWeT+bb
Q+sBAEC3oD4vnb9iY5tK2JoAnUV25JIlS8KLL74Yvva1r8V9vQ4//PDwyCOP
1NftKWFvAnQWr/WK9B7zWQAAoBuwOSvq00zf+f7Ox4ig3wPoHLqnpOn++Mc/
xv1OtK+XtJ7mUcvfJ53HPDKAzpPqu3RtrGlA5k8DQLfxyKRTwlb3fCamQyfN
3NTFKWFm+P5jn1lX1lPC95e09qtpc66qn99Wzz8zuEWsCD7Gpl+vYP2d13to
PYDOYev1/vCHP0StN2zYsKj1FO9d6/X8PDLuPYDOYX1bmdbze60DAHQFS+4M
h5oO2sy10DSnSdsqp9d6j90Zpg1eESuDX6Puxzrt336NOvYmQGeRX0/r9UaO
HBn23nvvcNRRR9X9ej5OBL4FgM6RG9v0iXmcAN3DtDl3htMfc7pB/qzav0+f
9Mw7Twd4HbRZ+/WeCaff075PL9KgZ68KjwxaGauD13g5v55pPfx6AJ3H+/W8
1pMGTO9NAOgMfn5mGoeTtQsA3YKfA1iQNmO/Vvs803C+p8/JfMXroMc2Xx30
yPMbco28Ttx8z3Fjks5VKZrDSZ8H0FlsDqfW640aNSoMHz48HHnkkf20Hntb
AnQW9WtaD5v2ed6n58c5AaBqtKDzuk3rNfiz2vSFbU5s8HlsgE+wS/F7CZmm
y+03hF8PoLO0qvUYZwHoLLavguk63Ydz5syJ+8pqv8vXX3897jskPah+EQAq
RjJXUZpu/XzNmTF+x6E1HZD1fVWVhnOurj+rYZ3egNbbofVSrM9TUr+2YsWK
uK+6/pr28749AOgM0m8WhzOn9VIfOwB0Bj+Oor5v1qxZcV/La6+9NowdOzbu
ezJ//nz2lgWoKA16oW3dMzM88vwp4dAGv2CT9X1L1v3G68t+awKdBon+xL7f
FM+5bLEcqa5NU10v1Y7fbI6njjnpquSYWt94Vfj+nNzaPndO647Ttz7S/fb5
dvSa12lFZWzGzOZzWYtY8kzj2k47b1fH/dY4Fl37bH1tGkzLqb978803w4wZ
M2JSP2d7e2FvAnSeVOvZer3HHnsMvx7AIOPjj02ePDnccMMN4bDDDguf/vSn
w/XXXx+mTZuG1gOoKA3rvdrx7UR/Xyu6qfXf1LVGw14Ad/abY9qgSdooR+O5
lsxTbTY3stkxczon2d+gsCyt+uc64pscmF5sHB9ItW5Bfmlc04a0+fgUbU2e
Yrw/+OCD4dvf/na48cYbo29Bes/muWBvAnQWP4fz9NNPL9R6rNcD6Cx+zwX1
bZq7OXr06DBixIgwdOjQcPn/z955+LlVXG//9ze87/sLCRA6CT0U04uBhBIH
TIcQenAgOInpBEIPMd30YiAQem+mN2NCiQmYHtNtMAYTOq7bJJ33fkc6u6PR
3CtpV/KutOfxZ7y70tXVvaOrO/PMc85zzj5bPvzwQ6tvaTC0KCrn7TXoLNX0
sRjfyZzrl8/3s7hEGa+p8ziqcT3lJpmxkTW+Z8i/ss+pft4zME8WRT+4Xs3n
759HtZzQocP1AGPZF1984ca3UaNGya677urWNT/++GMXy2lcz2BoDsgJmj59
ehnX8/P1DAZD4xHW10PXU663wQYbyIQJE+Sjjz4yrmcwtCzK5/t9HCfhKtH5
dzBvT7jQ5LQ5fS8HCef647w4x9nFmuWZ+lvfscwc0HFITX4m6Twq7KvIeaRw
p8pz6nvtzPcmSH28p/w4+l0Pom5vl/D8vWtkXnncaxnXDWs7eJ9T+NkPNjRG
jFx04shWW201WW+99eT000+XGTNmlMVx2tzTYGgslOv5+XrkCml9PYPB0Hj4
tWRp+LGcddZZ7jsI17vgggvcWqflqRsMLYyKebrPVzJiEcvm6OrjEuEgc+rh
MhFeGNu+P8dRcSyx2Mfy9/dfG2pzFTpYoF32vbbKOdXLuRrlI1rnfsrPv3L7
VD00+PyHUn5eCPVkgetR42vllVeWNddcU0466ST54IMPnE+L79FpMBgaB7ge
MZzUUmeOuffee8tTTz0l8+bN6/W+1X8Gg6ExCGvKqq636aabyoYbbijnn3++
5esZDG2BktfIgGLx4q+rL96wFs2qf8cBqntXpsU1ZmiFioDr9b22yjnVm3uX
uX1G34THXNf7Vj//1M85Fr+b6mEzuGAsoxHDyXxTud6JJ57Yy/W09p6NeQZD
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
NNT2bMwzGBoHd8/IF6Q7+b599c3XcvmVl8uWW20h66+zjpxz2hny9itvSufc
RVLorpfrpfG0CFL9V/x9lLhXmNNWxsli29eTf1fHMdf1Xo/0cUitA6j78M5l
E/PbHFbQ8U791L788kuZPHmyXHbZZXLJJZe433lsqPinGQxxdMitY6fJyO1p
0+XWAZQVmzV1Rmk/STv328YdosHQYgjz2FS7o8Hr0Oy++OILx+0+/vhjee21
1+SJJ56Qm266Sc4991z54x//KKNGjZLNN99cfvvb38qkSZPctoM5nvga3n//
+1/58MMPZebMmW6cY13T1yuN6xkMDULyVSrkEq7Xg89mTubNny833HSjbLvt
NrLqT1aWI8f+QaZOeV4WfrfAcb2uem4R9XCsmvxXyvndIb21ypWTlW/bR5vq
0Oqqecn0Hl+d7+XnAHp9UZHnl9KMArYnfK7HuPbRRx/J1VdfLXvuuafstNNO
csUVV7jH2MZgqMS3HseaJuOnDs5RzLpjeuP4mc/1xs6RWY05RIOh5QAfUn6H
r8r333/v8u6I93j77bdlypQpct999zlud+mll8qJJ54oBxxwQDJ/21Y22mgj
WW211WSllVaSkSNHuueJF2E/g8mhlOvNT+aaTz31lEycONGNeaxrcm5+zKrV
GjIYGgA1Z+kpOMEun/C9js4Ouf+BSbL77rvJyissL/vvuZc88cDDMu/r7x3X
66yH65Xxt/75shSfDLWvi+SRDzyeVOJO/j7COMis59KOOYt31f1eyX43qdi+
Wh2/WvVFQ6tCY3D053vvvefibRin11lnHTnrrLPcmqetcQ4EtfOhWa3GM2bP
kTHbN0ZP6z++lfGNPIayc5ohzzfkGA2G1gP3ffQ7tDjiMW+//Xa55pprXNwH
YwO6HeuC2223nWy66aYyYsQIWWWVVeTHP/6xLLHEErLkkkvKhhtu6OI333jj
DcevBps/qWaHRwzn8Mtf/lJGjx4tEyZMkE8++aSstoSNeQZDA9BrxFlwfK+Q
Iya8R/753LNy2NjDZLVVfiI7bb+93HvLbfLd5185b5YOCyUzGBoOjdEhx+Kc
c86RTTbZRNZff305//zze8e/wR6jWxZ18KHnz53WhPjBJmpvQ4CbNr7PfO5o
XM8wfKE53Hir3HrrrY7b/epXv3I6HdxuzTXXlOWXX95xuh/96EeO4y2zzDKy
9NJLyw9+8AOn6x1yyCHy4IMPyty5c4eEVqZcD21y3LhxsvLKK8taa60lf/nL
X9y6ptVbMBgaDOV6+WIjlpPv2Wuvvy6nnHqyrLPOWvKLkVvIjVddLV/Omi35
rp6E69n3z2BoFPwce7576HoXXHCBbLXVVo7vwfXIwxgKY3TLwudDmdyho4yT
jbmjozHv30TtraGxk/1BU86twTqhwdCi0LoJ8CJiHP/61786DWz11Vd3vA6O
R4PbLbvssrLUUku5xnNwvQ022EBOP/10eeWVV5yOhq7H/vy66zGEj/vjVNZr
0pp/PuotSq4eXI8YU7jeySef7LjeUKn5bjC0Dcq4XkHyuWKM9AcfvC8XXTRB
Nt5ohGw0Ym25+Jyz5KN33pHuRR3SZfNNQwsgHGPq9XBO2zZtDKs2FqaNgWHu
/fvvvy8XXnihbLnlli4eR2M4w7Eva1xNO45a+qC/PtfV+qWWY+hPv9aCMt0p
S/sq4y0N1N9q5pr1oknctA6Ucc0quqIfH5t9rMb1DMMYcybICpN2KLYpd8nM
5CE4Gnxv6tSpydzsItl1113lJz/5ieN4yu1WXHFFx/v4e7nllpMf/vCHsvba
a8sf/vAHpwnCFf/zn//InDlznMaHD4rWNK82jsRqnlfbPvTT1PVM9dzEU+ao
o47q1fVOOeUUl5vOccH3TNszGBqMgnpE4Hfbk9xTPpUbrv+7bLXFJrLKSsvK
8UeOk1enviCL5s2VnHE9wxBHyKGq1SQPuUStY1gtY1v4fPjaGNdD18M3bd11
13VcD10v7XV+fd2wxY4xXM+tlTPWwyOz3jOt//znw+MbmCdbOR/K1L7KOFnI
MTz+UeI0s6bOkfE+10r2PSt1f5EWcqPZyXuM9bnTDLl1akfZfso5ks+JAm5a
wVtDbtWRcODpMsbvm+Scx9/xbR1xoBnvH4HPubO37eh/zGvdfchrSn1R9tlM
j/TZQPCiXD1lh945/LFzGrjrtsKLcqzXT2EbPWWcHPvei47/tCsmT/POedqL
vfUW4EBwNOrj3XjjjbLffvu5GE44Hbl58D7iN+F5xHXC+eB+8CjiPvFsgU9d
d911zhPlzTffdLxPtT4/dlKbP5bEap/7NWDD+7hf80+f98cn3vvII490nBVO
etpppzmup7qecT2DobFw0l4huZ/0dCVcrke++eZLufeeO2THUdvI8ksvIQf+
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
JwaDuAr0XLge/J5YDHQ+Yum1/rmvBabFa4acbzhw/VAzZ6y75JJLnD5Kv1JX
ne8V/WYwGAwGQyvD92bRfD042ymnnNKbr+ev9/pzQ+YgxH6iH7DGvMcee7jX
MvdgfXnixImuZhM5ImENPn+cNRjaBWkxkGm5e3yHWE9hXk6Du+GnSPwlc3u+
X2jkeB8xH0Vr5yfzUB7jJ74SxOppLi3fP3Jp0Xn23HNPGT9+vNN5qLX22Wef
Oe9F3tPnm9ViOQ2NRyye3ddf9TmuC66Bxx57zMXJ77bbbi5Pms8XXjJ27Fjn
uzJt2jR3H4fT+54iIa8M43l9vS+mS7cjQu2UdUtyXU844QS3RsIaJn1p6x4G
w2LC1BkycvtpxTY2GfcG+3gMhjYD4xlzQHQ9XSfGh5N5pc4ZdG4a6nOMk+SC
kNt+ww03uHwh+B6ckbVm1krxdMGzJazB2655IIbhC99vI7zWVZvT7xD6OOsg
zDPJF3rrrbdk6tSpbk6PTnfLLbe4nCtiy0477TSXl3X00Uc7HZ21GBp5s+g5
zFGZ8++0007u+7vkkkvK//7v/7oaKeRv7b///m67a6+91sX/kXcLp4Rbapx2
OP/3j9nWZBoPjYkPY9v9zwKeR3zE7bff7rQ8dFt4PJ8xeZoXXnihPP300473
s63v6ZKWN5oVqztccjXD76bmPz7//PPyr3/9q6w/LY6zv/hWbh07rXf+Pn5q
+pazhv08/1sZ7/VV2MaMnS7j7/i2rfvl+XO9cz7328E+HIOh7cBYh4YAL2NO
iGf3lVde6daSw3z+2NyExryV8ZGYMeacI0aMcD4BxMSceeaZju8xdvpr2TZ/
NLQbQl1E10fwt0cnQCsnxo66lE888YTcfPPNThMnZho9gRrXrJeg3ey4447O
Ox/9hjw84qvJp8Unl8fWWWcdN+fndxoe+2xD7uwPfvAD+T//5/+4tsQSS8gy
yyzj1mC222479/3EZ5A4a3glmiA8E/6Hnqixf6GvkqGx0LUyvcf690auGe7J
8A74HLXyuKfy+VMXAN4H/6MGOGttvi5Yra5pGKs5HH15/D7Q34mT5Xvq16LQ
ZugHZs+RMb18ZbrcOjt902E/z/e5blZrWx7cUbYuMOaOjsE+IIOh7cB4ztr+
iy++KPfff7889NBDLh6IWC9/zhDOB4AfD8Q+0CgeffRRpzOwBs0cFY9Oct2J
52ReYjUXDEMNsblt+FioBcRer+sefHeIv0Qbf+211+Spp57q5XVocWjocDpq
VJLjyjwen3wa3hD8xPudx8mfpRG3Rx7e6NGjnX7HT7TzXXfd1f1NPB+vYVt4
HX66/CR/Dw6I1q5ckfeA97G2c/jhhzuNkLUe6jjgz0+OH7GinIPm3Gb5Mmbx
Al9XSuMS1fY92MiKyY39Hb5O4Z9jyKX1+oFrcN3cd999TsPlM+cz5ZpAy4On
EzfPZ6P1bdLy7Xyup8eRxvXaPW7TR3jead5Iw6U/moIy/jJDnk/d0Ob5s+6Y
XhvXq6KPti6+lfE1rgsYDIb64c9RmZ+yrv/111+Xze+y1njDOQLr0fgCECdG
jb6RI0c6vYE5LfWLXnnllV6+Z1zPMNiIzYnDuXg4Lw9zT/nJOgcxkZ9++qnT
WpiL33bbbU6T4XuAVo5OR/0u+Bv8Dl0OPsbfeBvtsssust9++7l6ldRFI17z
uOOOc3ofMdVnnXWWXHHFFS5WmloLNPgj+tz111/vuNoZZ5zh1ll4HY0a2uwL
vyTyaeENvDf8TzkfHJLHODa4I3798FF4KeeA7oceiX8T50g+WOgXmRUT6Pdd
mBvobxeuAQ0VbSnGh8Jz8mNeYx6r/jn6dfPCHDruu+i+xNrircrnAl+Hx6Pl
8XmQd0lMvMbS+31abb0i9thQ6efFjfBzjXFkG6P6jzKtLkuPKtP/2pXLZCNL
1wx5YFty4bJrIGtdwGAwNAKNmGMxZ4Ezog+QY8QcEk2BeLTLLrvM5fZpnJiN
o4bBgq/DZHki8rjm2emcXP/WuC+4ENrddddd5zgZnphwO3Q2OBV5sMqtttxy
S8fr8FHBDwm/DTgcmtrjjz/ucoaoaYIeyLyf+Erm93iwEFdNbi2aDo11FWJD
eQyfFnK72J7Xoc2xD+KnWXtBJ8LDA40dPki8KMdAvChe82h+fE9ZmyEmlMfg
fnBFXgOvfO6551ysNufs5x6GtRxCXhS2WH2BGNceCnPttBy32Hkpb+O6oMVq
oMfyItmO3E1ie1kTQ7PletEaGuedd55MnjzZ1VtAy8uqlWGoDdXiV/1r2VAv
yrW6zLjMMv0v1HQ8vafEF2dNnVOW2zbm3FgeW39f13f8z587XcaU5dCl5cx5
7+XOs/ja2rlrFV2zJi6cvOcdM4LjJc9vhtw6NcINq8TXpudP1tKvWbyevMTp
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
cejpzpX8WXIt5s0S8eE0GFoUei/266P6MRfahsP4ZzAYDIb2hV/vjZw9NCnq
CpFnpvGbzfGLHHz4+fl+nr7G9ygXox9effVV50269tpr9+p65OutsMIKjufh
04lH59577y0XX3yxy/MjLlb1PL8Pdd/N8PN2x57v85spDKH6euW+LMO31rX7
bFzNhZ4WqblQXmOvrL6ewdCi8OP1w1h+fy2uHcc+g8FgMAwfhLXEgV9jvJ3r
C2n8qh+j6nM99VTh/Ilxvf/++3u1PTQ9OB+19/bYYw/ZeeedHQ8kphPfTnIf
2R4vN/Xg9GupNyNfz1VbKHG97lzetcIQ+uzKfFlGXSPDVRVyc8pcTwtyveK/
YpxwYcjUUDcY6oW/zufrd82PuzAYDAaDYfEi1LCU6/g8z9e82glZXE/HfJ0D
4MlJbCYcjvp6cD30PGrqXXbZZS7u9aijjpLNN99cVlllFVd7Dz+3iRMnurrs
xIGyj2bGBxUr6yX8HS9Rx/cKjvsNDQS+LMPY8z7nOF6Pi7FtjRjOcr5nXM/Q
6ghjOnS88zlfO455BoPBYBie0PrhPufxaxH4XLCdEJ5nWtO5AHGt1FdHw8N3
E89SuN+UKVPk3XffdT+pwUtddTQ+Yjq322475+uCxvfRRx+5/H+N62z0XEK5
HlGbXckfXXkZQlzPfFkUPT14+3WXct6GyueTjkLQeh9sr9uBYRghxvX8OI5w
DDAYDAaDoZXh13rzuZ0+pnGH7cb1gF9L3ed2Pg/Tx/DOnDZtmhx99NGOx8Hn
8CuF56HZ4WXz2muvOY3vkEMOkQ022MDVZlh33XXd3/BEnocz0r+NnkPo9Bs3
ls7kj46ESuSGivYy4xqZa74sDrlct+N6hVbkevpLKW3PYGhFxMY81fXC1o7j
nsFgMBiGD0JPEuU1sVjDdl3f1HHe904J13d9be+aa65x2h15efhuEp/JmjAe
LuTm4W/zyCOPyIknnihbbrml822hXgO1LM4++2x55plnnK83r2mGrjckuZ6h
F/l8Mqek1n3C+VonX8+4nqF94K/xhfl6vgezcT2DwWAwtDp8nuPzGtW5hiPX
83P1/JhW9VR5/PHHnbZHPt7TTz8t33//veN5aHvK+fBy+fe//+3qsB9wwAEu
xw/Ot9VWW7k69XfffbfTA+GGWr8pLX60WjxR2fZSjOHsHnIxnAZFPp9cS914
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
hB8P8soQ14W+M36cuA9yNtFnATWcvXr10p7Qdo8GO+eTWo9Ud2yth+Onqx+w
njJo8GBp3rKFND2nhTw9+XnZ+vtOyQsXaN/wWHIU13opdW+lxOrS+bIUXe/m
MlrxN+8P9CZLL7rPNyO36HFKfCklPEam98v4udI/uBVb9M/htI9fZg3LaD1C
CCEkyNi9f/384+z5POfwwcXOuYR2R90eeqn36dNHeymgrxR8V+DJCS0XiYS1
Vg8+BajpO/fcc/V2xH5xu/FntfWj7eFJSHXDXjezvxu21kM92PgJE6T9hRdK
/aZNZMTYJ2X91k1ypOCohKP4ThVKDD99cjhn5J7gq9/8KLqvrW3s+JaTT+mr
tdLkX2aq35zXXHJ88dify48NMyZKbikxPWDnbfJ4RgghJJuwPRTdOYq9Rs2e
C8EmEommxBuwveG9idhe+/bt5ay6deXWW2+R776dKfv3/y0FBXmyatVKT9+N
kGbenLRDh4vUow5xPxOvsNcFzP7DfYRUV9w8Zrd+D+sjO3fulDfeeEMuv/Iq
qd+oiQwaMlSWrVguh48elEi0QKKRfE/r5anmS6UsvprpauTS+7WkiwMW05dl
yskszZclVW8e23P5vXfb6zNXJqYz4ZTiWg/YXqqEEEJIULHXnm2t59dbm+e8
4BL2tF7UmX/CdxM5Zbm5uVK3bh1p0/pcefaZp2Xz5o3ebQdl6W+/yCNDB0vj
Rg3k8ss6yZtvvqF1nO581vYw4H5CqjP2/u/61CInEL5Gn376qXTpcr00bNRU
+vR5SBYtXCSHD+33NB503lFvoGY233nkUvwlbS2UzpelBL8W/zig8zc5OZbH
SSY+K6W8ZjdOd0zPlXwjaZ8vx+Sm+uDqcvcYRwghhAQZdz0a83bk6Zl6BdZh
BZ+41ktdq4aeR5wOfYPPP/98adSwvvS46w6ZP2+uNyfdI7/++rMMGjhA6p1V
R66+6kqt5/v777+T+U1u7MKOARNS3XG/H8aL86uvvpZbb+0mjRo1k3vvfUB+
nDtPDh7YJxLN88YRHdGYo/UcL8kSdVM6X5a0fi0l5Hamic1llE5Z5rjcMTxX
ukeEL2cpHpzA9a5i7QIhhJBswsTxzPzdzuu05yn0ng4uEU/oYcbi9niGD893
330nPXrcpVqv/fnnydtvvSmbNq6XBfN/lN4P3C9169SSG67vKl988YUcOHAg
JefXfTwzZyKkuuHm/Nm/m+8H8jhnzZotd97ZQ+o1aCy3dr9Tvp45U/7++y/v
DzytFzvi3feIhMXRemWoWyvdl8XVTyX34rNzK8tUN/cPau3+8XOVQIqnTRrN
afLSzbHNHjyeEUIICTrGg9PoPb+aE+PdQoIJWjW7Ws/E9rZt2yYTxo+Xtm1y
pH69ujLskSEyd84s+WrGl9LttlukVs0zpXv3bqoJTb91v/o8xvVIdSddDqed
7zxv3nzJvaen1KnfSDrfcKN8Mv1z2bP3D+/76Wk9OSJROSohKUh53Ir0ZSnJ
3zPlthP8Hjc96bVl6fcv63Nl/LhptB40OI5tyFtAX1HTR51rV4QQQrIBs95s
az2/nBbO4YML4npuDqeJ12Je8/m0z+T6rtdJ7Vo15KYbr5c333hd3pr6hlxx
eSc57dST5a677pC5c+dqDlq69W56GRBShO1nbPsYLVjwk/S8r5fUadhILrvu
Wnn3k4/kjz2/exovX3VexBv5KVqvLL4s6TRdBn4triZzcjAnZuypWdbXfKzP
lenrSP9YOK6tW7dOZs2aJT/88INs2LBBcx54PCOEEBJ07DkIznfI0Tt48KCe
52z/aZ7zgk2R1iuu97B9Fy9aKAMf7i8N6p8l7c5ro54so58YKee1bS0n/vt/
pUePO2X+/Pm6X/jtE268kJDqiPud8KttXbhokdzXu7fUadxIOlx1uUx57y3Z
9ddOzduMaEwvz/vf1nrpdJoPaf1XfHrMbZiR0o8gVZP53b8s9XdleM1leq4Z
RdrN8lpBD76c3ImSYrVZ7P2lfx3wJIZnTv/+/aW3t20++eQT+fPPP7nGSQgh
JPCYuB1yONFbbc6cOTJv3jztA2X0HmvUg09S60l8AHv+uXXrFnnt1Zfl/HZt
pWmTRnLjDV3lzju6S5PGDeWUk0+UXr3ukyVLluh+4vbhcHPVCKmO+OVs2lrP
3Gfxz0uk14N9pGb9enLuBe3kuVcmy9bdWyUcy5dQzFN5MU/rxayeC2XRWBn5
r6Tqu9xkr3KjhVLvWyQZyxCrK81LJvn6yvhcdg2g9VkUq/NzR06ulNByQWN6
EydOlA4dOsh5552nfUWR2856PUIIIUHHzEfgBf7222/LQw89JAMHDpT3339f
1zVNbifjNcEmndYr6r9wSObM/kHr86Dvzm3VUmN6NWucIWfVrS1Dhw6WFSuW
qzerq/Go9Qgpub+e/b34+ZdfpHffB+WM2rWk0dlN5cmnx8rGbRskFM2Xwqin
9aJ5khcLFT1win77Z74s8RtT41wmDpbUSQntZD+Gm/NY0m0plND7wH59ZX4u
y1fT1bIzJnq3OXo2J9FXr7QsUKxzPvnkk9KqVStp2rSpjBkzRrZu3cq4HiGE
kMBjarbgvT906FBp0aKFnu8eeeQR2bx5c4rWq0qUte6/ugNvlpK0XjQakfXr
1sjwx4ZJ65xWUqd2TdV5J5/0b9V948c/pTUsxqPH9d2k1iPVndK0nhm/eFqv
z4Oe1sM6SoN6MuKJEbJh8zoJe1ovFMmTwki+5MfClf12qhWI640bN05jeuec
c45e3r59O49nhBBCAo/pI4QYHmoV6tatK/Xr15cBAwbIxo0bVevh9uNxzvP3
YfOrqy9j3X8lvubM+kqV3/OlW2uHzjPDT+vFYlHZtXO7TH1zilzW6ZKkzjvp
xH9pXucLk57XdW47n9doPVvvEVJdsb8Tfn1IbK33YJ8+cuaZZ3jH2npaF7t1
8waJRQsl4um9cLRACqn1jivQeuPHj5d27dpJy5YtNa63ZcsWxvUIIYQEHlvr
IX+zTp060qBBA83j3LRpUzKuV/Exm3T1JKX4BpSzlirf1+z6Ixw7JdelpNe9
KVovsRldrXfwwN/y04J5cnv32zRvE1oPA1pvkqf1TP2KHaPA/mP6UnFORKoz
6Xw37fURo/X69nlQap55pjSqV0/GjBop2zZt9A7GhRLzRtQb4Vikst9OtQJa
b8KECUmtN3bs2GQOJ9ewCCGEBBkzH0EOZ9++faV27dqq9QYNGqRaz+6xXrFz
+fLwmjvelMVrrpyfr4zvOxOtV1CQJ1u3bJKhQwZJyxbN1ZMFw8T1bK1n/z21
HiHpvVlcb6u41usjtc84Q5p6Wm/cqFGyfcMGkVChSBiDvUyPN6jXQ95m27Zt
5eyzz1ath+MdtR4hhJBsAOey3bt3Sx/MPxJa7+GHH1atd9x8yMrFa+44UyYP
8vJ9vrJKXDt/M10OZyQSkn379sjLL7+oeZynn3aKxvUuaN9OJr8wyZv7xNe5
zd/aPfrs9QBqPlIdsb2KzO++cb0lP0vfB3pLndPPkJYNG8kzo8fIjg0bRQpD
cb2neRT8Dh1P1q5dW0zrIa7HGmRCCCFBx8xHoPX69eun9XqNGzeWwYMHqzeL
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
Oey2bdtkypQp6icIvQc/zvnz5+uc1vQcZvyXVFdsrYe1EeQAIhcQx1T0KkF8
D70qTUyP35PKw65LMGtZ0HuIuWKNE/1Dsc7JPAVCCCFBx6xtIkfv3Xff1fkI
Yjfo//TXX3+leDHynJd92B4Fbq8893rsI6g1uuWWW7Sus0OHDlrDhzmt6UPl
xgap/0i2UNK+7ZfzPGvWLF0PQUzv4osv1u8K6veMhuB3ovKwz2l2LqepPbbr
lrmdCCGEBBkz10dtCeJ4v/76qyxdulRjOOiVTX/F7MfdtunmsNBzyNkcNWqU
9qBq3ry51nVin0Gsws7jTKcXCQkibrzb3dfd/iXwcEQu4Pnnn6858T169NAY
OI6zdh9LUjm4tZW2f6q93sVtRAghJBvAeQ3nOWg7zNnx067BCuz5LvYPR1V5
jRX3p2XG7COIV3z44YfSpUsXjVfAo2XatGlag2TWxUuaB3PdgAQNN96N/dzW
bO5+fvDgQfnxxx/VcxM9Stq1a6e1rehXGvhjapbg1uvZvlLmOpOXTgghhAQZ
95xn127Z9+H8vHpjewv+8ssvmueLnsNNmjTRON/y5ct1ncD023Pzfd24CPcl
EhTsPpTQd6aua+/evUmNYOf9Iab36quvSseOHbXPAnKeP/vsM10PwX1I5WO2
KXS7va5p4nt2jI8QQggJMm5OUkk1KDzvVW+wj0DLoY5z6tSpcuWVV2qPDviU
Yy4Lfx/Mm/x8Pf38XggJAnY+MtY6fv75Z3nzzTe1vyTi3PhOmDUO5DkjVxO9
StGHEnnOI0aMkBUrVujf0uujamCOSdB05phl1+zRV5gQQki2YM/DS5qXM65X
vTF1SJjTmvlsv379NEcNvcPg2wr/Otzm9mN3e7RzfyJBwvarhV6D58qQIUM0
LxPfA6xxGK0H7xV4sGAdpEaNGprr/Mknn2gs0PRXN97GpPLwO8/Zxyk3v5MQ
QggJKiXF8biuSQxG55kaJXhvvvLKK1qLhDntHXfcIf/5z3/k77//LrZu4Jcb
zFgxCQr2fozvwIIFC9SvGH3zRo8eLYsXL9a+I7gNPRXQpxTxvKZNm8pjjz2m
XleogcbjQOeZ9RBSebg9F9zcFqPLzfGOEEIICSp+8RU31keIPUfFfnH48GGZ
M2eOajxoPfTce+qpp2T9+vV6Xz+tZ+9P9LkjQcGtaV62bJlqONSrXnbZZfLy
yy9r/R56siG3E3V66ElyzTXXaEwPdXrG5wPfDWhC6ofKxa/ngn2MMlqPxyhC
CCFBx46v2DEX+iYSG1PLYsfo4EHxwgsvSE5OjtYmdevWTWN7yGkzc1u3HtRA
rUeCgrsfr1q1SnOWW7Roofv9XXfdpb1JZ8yYIQ8++KD60yKv+fHHH1fPIuR9
mmOo3YOEVB72ec14tECDI/6K7WV7THFbEUIICTLpekW5t3N+Ur2x50RGx8Fb
HjlrPXv2VD9OxPbgQ4GctUOHDiXv5xcnptYjQcE+BmKfXrlypTzxxBO6xnHq
qafKueeeK7fffrvcd999ctFFF2n+5m233SZffPGF+hi5vRmYM1H5uHUK0Hjb
t2+X3377TfuF4rLR6IQQQkiQsfOTsJaJ8xuG8Q/g3IQYTK6T6z//2muvSadO
naRBgwZawwRPzh07duh+ZNfD+HlzElLVMfuq8WhcvXq11ukhh/Nf//qXnHHG
GbrWgYEeC+ifPnz4cPXrhE+n3a+UfbqrBq6/NPJvkZOA7Yrx9ddfJ/10CCGE
kCBj5uCYw2AtE/lJmMtgro76LPpwEuDnW4cBPYe18IEDB0qzZs1U7w0YMED9
CRH386uFsR+LkCCAfdV4EyGuh/g14nfQeieffLKccsopycvwK8L34dNPP1Xf
lnXr1qluMD0XTHyQ+3/l4dYnoM/9008/rfWXl156qTz//POao47tRAghhAQZ
M+9Azt2XX34pEyZMkIkTJ+pl1F2xzxABfrm+xr8A+85HH32kXhSY87Zt21Ym
T56scyXMj91+xbaXOfcpUtWxe7Fhv/3ll1/UaxP9Rk466SQ57bTT5PTTT9d9
H5dxPXI5kcc5aNAgefbZZ+XDDz/UXg3wdcE6Gr4zjBlVHm6uAbx1kJfbqlUr
XbNCbG/z5s3JPHRCCCEkqJi4C7zicH7DHAU+criMuTrmN4zrETsWYWr3jF7D
PoJ8NeStIa+tfv36cs899+h6AfYr01PM+NqZy4xrkCBgr09gv0UP9TvvvFNq
1qwp//73vzWWhwGdd+aZZ2pOJy7jZ+PGjeWCCy6Qrl27yr333ivjxo2Tb7/9
VvUevgekcnD7LCD2Cr+dNm3aSMuWLfXypk2b2AuREEJI4DFzGOQYIfcOvnLw
kUOvYJzrzPyccb3qjVtj5Mb5sP/AiwJzYOxDmDNB+yGOceTIkWRMxMyXGdcj
QcGsbSBGjbz22bNnq+csdJ3J28SATwtieyeeeKJqQMT88F3A+llubq6MHTtW
pk2bpt6ce/fuZX5gJeLG9aD1xowZo/5SiO2hf4zJ4eQxihBCSJAxWg/xF/QH
Rl8o5CANGzZMz3V2/h3PedUXdx3cHth/MAdGzctLL72k3hSIeVx11VUydepU
3Y/cWiWuH5AgYer14LPy/fffy0033ZSs0UP+JgY03n//93+rxqtXr560b99e
+09CN2AdZMWKFbomgt6UjBdVLm79sR3XQ26C0XrcRoQQQoKOWbOGD5nReojr
Pfroo1qvgDk85jickxOzr9geKybegbkrvFhQy9SvXz9p2rSp+rRgrgtPO3jP
m/UCu28DIVUdowuwzyJGDb9G1Kaa+J3J2cTviPVBL3Tv3l3zNWfOnKnHUWhE
t9ck9//Kw81DN3E91BojhxOXsd2o9QghhAQdc87buXOn9OnTR+MxqLcaPHiw
bNy4kTE9ovj5cJq5kqm/w0/kpqHnAnwpoPXQU3rUqFFaz3fgwIGU+3MeRYKA
3QMd+/cHH3wgV155pWo86DsMXEbuH/Z7xISwvoEceOzzdg8b9lyoGrh5CshJ
GD9+vMZisR2p9QghhGQLOOdh/g2tB2+5unXrag4n/OOg9YwfB9ehqzd2Lyoz
94Vec+vwEOPDfjNp0iT1L8faAX7id9TuIfbHej0SJOxe6rt27ZLXX39dfflR
n4d8TayNYR9HjfPHH3+s+zni2EbfubFwel1VDez1q/Xr16tGR78M480CrUev
VEIIIUHH5CYhhxP6DnUmiMc8/PDD1Hokia31gPGgN/G5SCSc/B35augrhjxg
5HLWqFFDbr31Vo2HYK5Mvx8SJGxNgFgdeihccEF7rdfD/n377bfLiy++KAsX
LtR6POS9m5h3ur6S3O8rH7POieMResqi5wLyb1u0aKE+1NjWzDUnhBASdMy6
M9ahofUQ14PeM1rPzuHkOa/qE0szjvkvYv6xPY3PRSPeSMT2wnEdt3//fvnq
q6+ke7fu0rBBQ7n22mvljSlTNH5s9GF8f0qM5MVYfPi+Dud6n/unvIu0j2nu
670f/O/cbH7P/DPMblI/g6LPLv75iY6q/vnErH2j+H6Q/rfk3yf292XLlsrI
ESOkY8eLNd8PtanTp0+Xbdu2SkFBvrdfF/WQ1LUPo/WiiZzBsPedwToHj6WV
jlmvQi7CmjVrNK7XoUMH9ZZCn1nTc4h5nIQQQoKMmbfDhxM5nMi5Q1xv6NCh
SW8Wu9aEVG2whaLO8NcqtrCJ+P5VfN9IbHdcRkwiEp+36twXcyXE86IhCXsj
gp/hwkRNXki2bt4qH77/kQwcMEgmPfe8/PrzEjl8+KB3ux3X855LRyzx1PHX
E4t5c+RYYk09+QbwX8R6TZL4u0jiPURS9Ic+lLmA+Zo+Xjj++N49vJm3eEpV
Iqph9c914G8wF08Oif9Mzb1zFEIW5+WZfapIC+Hz8z4371p0DQhL/KOrymAb
R3QXM/t0RAeuiept8RFN3Fb0nYhjYkDz5/0oT4x8XPo/9KB6zi75+Rf5a89f
kl9w1Ls93xsFElV9F/9+hKHvEt8bMyIYsZiPrnT2nVIXGcq2qkNSMTktpobh
k08+0TXOvn37yqeffpr0k6LWI4QQEnQwj8F5beDAgdr7Fzks6Llga71snMNm
G2ZOHnFGStwlOS2Ma6yYp5NinkaLRRM6SOI/MZdHjELjdHpbRO+bnLMm5rKF
kUIpjBZIOOYN72dhyNtfCjzNVxiRvEN5snPrTvl10a+ybtUa2b/3r8R8uDCR
24bnCMefGxoy7M1+wxBa3t9H8rzHypOI93sU8ixqdB5uCxXFmvH6vd9jkUK9
LeK9zpD3vgq9+4cjKu+8t+T9radJo5F8HbFooerIkHf/AglJofc3ETw3WluH
4s+lj+M9cSFeC25H7DKCGsOQ9xjh+PPGioap58q2GkR3n4rGEprZ20+8T0Ly
veswQpX5IjOgwNsu+d52xWvG/hyBJvP2A+zn0GN5oYh3n/ht2JcE+5TxUtF1
jZhqtOVLf5FPPnhb/jP9E1mzZrUcPHxE95Mo9r3IUe9x85JaD7tdITSiaj3s
p/HvDx5LNWAsmlxzsPel5DqGu1iTIueK7hBzBikd25sFxyL0wUAcb8mSJbJo
0aJknxiucRJCCAk65pyHnDvUnPTo0UPuvfde9R/YvXt30k+f57uqT0Zaj5Ay
YO9TkM3xuFdc63mKWY5612EUVuaLzIA8T5sf9TRWYSwaj0FHEloPmt87/h0N
e3pP43BxrYcR1TzMqBQUYkR03WHP7ztly/rl8sduTwvkH1U9F45BvxV6tx+R
SOFhiRYWqC4s9G4r8J67EJoi5GnHUDzmB60XUi0Yj4zG85/RxxTragVF6wXp
9J5ia72INaj1MsXWe3Z9pdv/k+c+QgghQcac7xC/Q2+0b775RnsFo+8vekkZ
vw2e76o+9tQwqfViiVxGbj7yD3C1XiSh9RCLgtbLq9yXVyVAzBD5y9HwUYkW
QOvlqVbI9758R70PLh81ep6GixXkSRS+RNB6sZjGAyMaD4zrvHxPOxZ491E/
kKjl5ZLImy5Z64UTg1qvLNi513Y/GZ7vCCGEZAu2zwb88BHfw0BfKFOXznNf
cChWr0etR46BYlpP4jVtUBghbxRU7surEuSH4jm+8XhgvjcKNN/3aDgmB0Mi
R0PwZPE+LeSNRkIaRyxE3M+7D2KMyCdGLnM8RzjVtzOSqO8rSesJtd4/xq8P
RjbX3hJCCKme2HrP1Ksb33C35yyp4tg+ktZgEif5pxTPDY4ltF9cXVR3CiPx
Y6R4ek7C+d6Hlaf5ofnedUcQ19P1MujAPPVuyQ+FJc8boUgkUQsbr12Fzgsj
BhiOxPWdHnvjw192+EXyeYzOhNI0HTUfIYSQbMH10Tc+1HavBeMfTq0XAPys
+aj1yDHgxvZCOtS9R6Kxqu7AWfHAByiKZOlQRLVeLHrE03D5UhCFHwxuxzpZ
gV4fjuRLPtbSwqgNjMV9YiKF6vkTrxuLx/HifRqKLGr9v8fpXHdJaWSi5aj1
CCGEZANpe6ZZMT3Tb5ZaLwAU03h2cI+QsmNrPeg89RvRHgWoK2MWp01MPV88
TRfNS2q9kGo99N477F2frz6xoViiD4Qeb0PJnuvRqKnRiyVGom9IWq3n6j1+
zzMhEw1HrUcIISQb8KtNt383vmSs2QsIvjovmugXRkjZsbUe/DbRY6FAtR76
Ehyt1NdWlSnwjpkF0HqxeFxPtV4kX+N8oUQvBtT5RWOR5LEX+ZuhEPQf4ntx
rad6L2183tV7PEZnSibnM2o9Qggh2YJdr+fG+NQXjue7YOD0z1ONp/3Dw5X9
yjJgs+R3qin7Ti5tDKjyHv/ZhKv1knE95CVGDlfqa8tG9uzZK0eOHJUQavci
sbjmK7H2llqPEEIIIf7YOZy257TJ48zWHtFZSzKWF0nVeUHQeptekYOl6jxv
dHpFGKU8fhglgT3IaL0QjwVVDGq9f4Kbw2J6DPF8RwghJFuwe8namg/nu6Ia
kmjyMqniYH6iiV9xfReDp7v2ha76kbDIi1dnENOrKQdf3FzZL7XaoDoP+Yax
eE84o/XCgZoHlxIv7nS1HOz7ihRuCvp+Ra1XFuz1zby8PNm9e7esWbNGVq9e
Lb///rsUFBSwdoEQQkjgMVoPWg7emzjnod8CznP4aTQetV5AsLVeNK71IuE8
72LV73pd2Jexu6qG0XqhaEz9Jgtj8dheJBagY0Gm8eKs2O+oSzLFzl+Btvvq
q69k7Nix8sQTT+jlPXv28LxHCCEk8BitB223c+dOWblypaxatUovHz16NBnv
Y3+9IBArqtNTrQfvjEL1BkSP56qNE3vp+31lvyAiRuvFczY1rqe6L6r9vwPD
twMy03nZoPdiMcq9DLBjeji3rV+/Xp599lnp3LmzXHbZZXp58+bNmt/CuB4h
hJAgYzxYDh48qGuZEyZMkIkTJ8qMGTPkr7/+Smo85rIEgSKPhlhC50kMI+Rd
VdVzOL+Xw9UiTzNYTQ+TtXqx+IDOC4VD2hs8KJQYL9602bu9eO7w4W8r69Ue
I9R6GWGvX2Igb3PkyJGSk5MjZ599towaNUr1H7UeIYSQoGO03p9//qnnuosu
ukguueQSzWPZsmVL0oOT3tNBANsIcxdvDhMxWg8d0bANq/jcPJM8u6yI9QXL
M9H24NT+ehH4V+RrD4FgkFm82K0VDexaQzCWECodu04d57W1a9fqOQ9a75xz
zpFx48bJ1q1bmcNJCCEk8JiahV27dkmfPn2kTp060rBhQ3n44Ydl06ZNSU8y
xvWCgOmVgW1WqLE99WeJJXRfFSYTX5bAzr8VO5YXRK0X0xGOoAdLkLRepvHi
1PsFdl2BWi9j7Hq9devWyejRo6V169aq95555hnZsWNH8nZCCCEkqBifadSm
9+vXT7VegwYNZODAgar14M8CzxZqvWBg4rSRCDRefED3RSJVe26ekmeXZgQ2
ry5F39kjGN+nmPcvqv+w5gNf13yJBUXrpcSLr5b8TenumCX1osHZrSod228a
+ZpjxoxRndeiRQuN623fvp1xPUIIIYHH5LEgh/Ohhx6S2rVrS/369ZNaD76c
xnuaVH3UcyDhOwCvxEg0IoXhAgmFq/LcPEvm2WkJuNbT/O1IfO0AXj8Ymhtc
9UmNFw+Q9NHtLInrBWe3qnRwjMQ6JvTexo0btVb9vPPOk5YtW8pTTz0l27Zt
oycZIYSQwGP8yBDXQw5njRo1VOsNGjSIcb2AYSuKsKfzQp7OC6vW8+Yz4aqc
w5k6zw5u/C4dQdZ68RpQo/ME8bxYcLRe5n08ssQbKCi7VRXA1nobNmxQrde+
fXs599xzNa5HrUcIISQbMFoPfWSh9WrWrCmNGjWSRx99VD2nzbnQ1LCTqovt
o1EYiUoB8nORp4Qaq0gVnptnnGcXVIKt9bRaD1rP9O6IFejvVZ8yxIudvgyB
XW8Iym5VBTA5nDjHoYc6vFlQr+fG9XjeI4QQEmSM1vvjjz+0Xg85nPBmGTp0
qMb1cB6kN0swML3Q4I1fEI5IvjePgdYLq+dc1Z2bZ55nF1SyQ+tFofWQC6w5
nEHwq8g8VpdaLxrgfTAou1UlU1TXHEl6s6Ber23bturDiZ7qpr8e43qEEEKC
Ds57qNcz3izQeoMHD9a8FnOuY8+Fqo9a8Hn/RaD3NJ4X0VzOSMJvrqqSeZ5d
kHH76gXFMNH08YDW8zRexHi7BmD+m2m82O21HtRaPRCU3aqSMVrPnNuwrvnc
c8/J5ZdfLh07dtTL1HqEEEKyBZPD+cADDyTr9eDNYnrJspd6cEh19odPSzTp
LV41cfLs0o5szO0MBvHYf0T1XjyeF4xjQUbx4mJ9HQO+n1X9zVIlMPksRu+h
Xn369OnyyCOPyJAhQ+SLL77QXBfqPEIIIUHHrG+iv17//v2lSZMmmsMybNgw
9SYztXpc3wwGqVGjWDIeW3Xn5o7/YdoR4Ly6gGPmxdB78Xhe+e9LoQh698XU
N1ZjiOgJGTu2LV5SvDiy6XvJ71u8p2NgPVkMVfVrXgWxey4cPXpU6/OWLFmi
A/0W4EtWdY+bhBBCSGaYtc2///5b3njjDendu7fmcr711luq/0wvWfYZCjZV
ds5SLK6SZmRtbmfVx6wVlHdsP+IdTsIR5BuL6ry41rPzReNeMOHQ4X/w6JnG
i7NI55EyYXuzYKC/0KFDh+TgwYOq88w5r8oeOwkhhJAMMFoP57alS5fKzJkz
5bvvvpMVK1boec9oPZ7zgoEdx+P2IuVFRexPoXBMh2q9aCzuIZSIH6JnO/q1
x6Lo2573Dx4903gx1hEGSP63x6bzimKfxfPd3dtI1cDktLjnODe/k8dRQggh
QcbMP3Bew3rm/v37VeNhjdM+D1I7BANX61H3kfKmPPYr/B3ieCGN5SHG5/3E
HDtW1M8v6mm9SNg7DoWPSNQb4cIjmT9BafHiTlfLwb6vHLPGs9+Pq/XsYR9n
3dvtv3P1BrVGxeG3DVytx/56hBBCgo49xygoKEjW55nznn2+45yj6lOS1itN
//neRxKu+95/Ifh7SnxE8C9WqPNxxF8kMZB3F8o/7I0jEinM9+bnhVJYUCih
wpCEwhHt+3e8MX1DMLCPHzlyRNcybN8hs66Rbo0f1+Nx8PdmuB611WVuXh7r
CLHE40DjFeVvxrWeieuFPZ1XWHBYR8jTeYcO7i3/N1NO+O0D6bRbSVrQTwdm
+/5UWZjvtcnVdLeBuR3HA0IIISSo2D2GTJ26mfe6a5yccwSPY9V60cRAjl0h
6lswPxc4MeIf9hHk2hV6O5Kn9SL5EgvlSxSjME97scV034rqCIejUlB4/OdN
Zu4GffbXX3+pvyx6J2/dulX27NmjsewDBw7I4cOHVQMaHWeGrQHN9wQ5z6am
x/4OVYfvSFn2qbSPkRjxfSKs+0XEaG793PO9y/mq944ePSB//rFDfv11kSxf
9qv89edubxvlVZmekbYmSxcXymTdJZ0OrA771PFG48redxffdbMW5G43xvUI
IYRkA7bvih3jsH03q0u8ojrwT7VeKBqRAm9uXRiNJHLt0NEh3mNb4JeY0Huq
7zBPLzgqYW8+Hi2m9Y7/vMm8T2g59IycMWOGTJ48WccHH3yg/urffvut/PTT
T1qnil5bO3bs0D4k6Du5d+9e9S5CbjMeY9++ferHjp/Qe3ZMsLp8R45Z68Xi
w+h/xHzt+GkoVOB9rgWezjsoGzaukWnTPpLhw4fKxInjZN68uZ5G/1M/+6pA
Ok1XluMmtd3xxeSs+MX13Ou4PQghhAQZvzxNc77zyysiVZuyzMFLm1umxvW8
+bin9aD5wgmtF415+0zMxPZCnt7zfkYKNa4X9rReqMDTQTqHj+mIROJeHMcb
s28jZget9/7770tubq5ceumlcuWVV0rXrl3lzjvvlIceekhGjRolkyZNUk/a
9957Tz7++GPtuwV9CD0I7yL8Dn34888/qxa0Y3/ZGAPIZD/5p1oP+wT0HvYP
E2spLCzwfhZ6Ou+QrFmzUt6c+prcfset0qx5I7nq6svllVdeki1bNlcZrWdv
+3Tfu7LGQqn9KhY3FmvXprt16oQQQkiQMec5O4/FPg+yXi9Y+OWFZTqftO+T
LsYXicWScb2o8cePFmk91Xth+OVD94U1rhe/X7weC+N4Y+dgIlcT8btBgwZp
H8n//d//lf/6r/+SE088UWrWrCmNGzeWnJwcad++vVxyySWqBa+55hrp0qWL
XH/99XLzzTfL7bffrj2XP/vsM9m8ebPmgfnFdmyCPG/P5LWXtg8Vvy6u9eJr
APG4r1ljgiZH3O7XX3/2dPez0qXrNVL3rJpSs9bp0vmaqzyt97Ls2LFd4r3+
Kp+Sci9drefWhaU7rlLrVSzueqapxTWxedYtEEIIyRbMOc/2qXDzOatTLVLQ
ceeU6eqFXA8CW6sY7Y+4SfI+GII6vZiOosfC7REd4gy9HvGaqKMXE5ov2fM9
zZw2U/1g32aw91nTRwsD87nff/9dvvzyS+nZs6fUr19fdd6///1v/XnyySfL
qaeeKqeddpqceeaZqv/w8/TTT5e6deuqBuzVq5e8++67smrVKvWutf1c7Dmk
Pc9Pl+cXFMr6eu38APvYUbRP2noP2wfxvJD2tN6yZYt88cV0T48/LB07XiQN
G9aTpk0bSbfut8rrr78my5Yt03zaqhJDzSROl+5+md6flC+u1jN99mzfJa5x
EkIIyQbMPNTVema+z3NesHC1mx2rNdvU1SZ23hK2N/TL9u3b1bsEnpWao4j7
x4r0WeLZRBIK0Hcg7qITekn5C3tUxPvHsOvnMIzWM58B4nEvvfSSXHbZZVKj
Rg056aSTkprPXDa//8///I+cccYZcuGFF8qAAQPk008/VX8X03/S9vEsqV+X
mzOWzesnfmsIdq6crdNwGesKe/fu0x6fU6ZMkR497pKWLVtKnTq1pU2bHHng
gfvlgw/ek7VrV+v+adcTE1JW3Bgr9j/4NKFWd+PGjXoZ15njJSGEEBJk7PX3
dFqPBANb57g6r8j3oki/29sd1yPHcdGiRfLOO+9oXdvq1dbcuqxaT4rPxStL
67m/I340b948efjhh6VJkyYaz8M45ZRTVNchtgfNh9/POusszeF8+umn5ccf
f1SvFlvjuf0abH3jl9OZzVrP1njp4skpn08kKkePHJVtW7fKd999J6NHj5ar
O1+tMdRatWrKRR0ulMFDBnm3fSs7d+3wttuRlM+akH+CvS9iX0Ld7Q8//CDP
P/+8PPvsszJr1iz17DVeu4QQQkiQMXEPrGXCf3DXrl3qO4jrmEMULFwdYf/u
XmfylnAZcxr4TkL/DB06VC6//HKtTYPe27lzp94v5qv1Shs+r7HEW8vnM7Dr
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
64HOg58/avOaNm0qd9xxh7z//vs618f8PdM5t51n6M6BspWS1vEz1SaZ3jdd
PLCk68ry2kC6nFNDupy1sr52+/Z016X7vLN5fyLBwT722utb9nqHHdcnhBBC
goq9Lg9srWffTr1X/uDztL0sXN3n+oOYdWfMR6Dl0LMb/v3w7ofnJjxZ4I+I
OA7uS6oeZdHeVWkQkk2ky9+2j7nZmrtOCCGkeuHmaLo5aOZ3erNUHMYXxPYJ
Mb717twDsTp493/88cfSvXv3uAdHnTpy1113aa8F5OWRYFDZ+o1aj1RXTCzP
zaew/ZYY0yOEEJIN+OUHuuucdl4hKV/s2J6tq01cz3gf4jZcRp0V+ipA2yFn
E/2t4cMydepUrdcyfdVJ1QdbqbI1HLUeqY4YrWd+mmMrjqHbtm3TmlbUsVLr
EUIICTq2ljM+ECaeBN2A3+1+DKT88PMqtHM3jc+m2Q7bt2/X2N3dd98tzZo1
k3r16qkPC/oqoEc3/DuMhyS3VdUnFqBBSDZhr2PgWAu/W/jSwqv2tddek/nz
56v/EXPhCSGEBB27Dmz37t2yZcsWXdvcv39/Mo/QxJaoH8oXE0d1Pfvt+J7Z
Btg2qMXr1q2bNGzYUHXetddeqz4s8F2EV4vdP4/bqurjzTQlGpDBvYlkE67W
Q/3ziy++KDfeeKOun0Hz4TxIrUcIISTomHMdtMLs2bO1H/cHH3wgixYtUr3n
+seT8sf2gDOftd3fHrlF6KnWp08fOf300zVvE54smI/Ah8XU+9l++aTqkC4v
MhqrfA1HrUeqI269wrp162T06NHSsmVLzY0fO3as9ixhH0hCCCFBx8SP0Hdr
3Lhx0rlzZ+nSpYv2X8Zap9Eb9GapOIzOM1rP5M9iQIP/8MMP0r9/f52HQOtd
ffXVmmeEuQi2D4bdI45ajxBC0mPqpHHMxbETuRE457Vu3Vrz46H1ULdn8usJ
IYSQoGLyBqH1Hn74Ye3TdvbZZ8uwYcNU6xkNQa1X/thecO7AHAT+APPmzZMh
Q4ZIu3btNG/z4osvlkmTJmlvPVPLZ+s8rkMTQkjJmLieyZ9Yu3atrnXm5OQk
43qoj2YvdUIIIUHHnMug9Xr37i01atSQ+vXry9ChQ2XDhg3JWj36T5c/dr2e
q/uQP7tw4UJ55JFHpE2bNtpDr2PHjjJhwgRZsWKF+rAYTWj3A2ZcjxBCSsbO
4cQxdPXq1arv2rZtq/kTTz31lMb1uHZGCCEkG8B5D3VfttYbPHiw1jBgzdPu
yUAyw9Ze9jCfoa3tzGWTuwmv72XLluk68znnnCOnnXaatG/fXutJsE1wu5mD
mJgetw8hhGSGnQOB4y7ietB3559/vsb2cOyFTxnXOAkhhGQDOJfB57Ffv37a
l7tBgwYycOBAzeG0/T6oJTKjpNxMO4Znaz38hK6GjkM8dfLkyZqv+a9//Uvn
HqNGjZJffvlF432mh54by+P2IYSQ0rG1Ho6nyImH1jvvvPOkRYsWMmbMGNV6
9J8mhBCSDeB8Bq3Xt29f1Xrw9EdcD/Xq1Hplx+1B78b13L56RusdOXJEa0TQ
Fx2+33Xr1lWfgAEDBqgP519//ZX0bwHM2ySEkLJjr5XZcT3ky6Ne3XizMIeT
EEJI0DE6AzmcttYzcT3TV51aInNMLqadW2lrZbtWxGhpfM67du2SadOmaQ89
5NHCJ6dXr17y1Vdf6W2I+9nbgVqPEEL+OeYYilyK8ePHq9Zr3ry5xvXgc8wc
TkIIIUHHaI4///xTHnroIY0lIYcTsSRoPeP1SC2RObaGs3OFXG1m1+jBc3PW
rFmSm5urertWrVpy0003af90+Obgfga//E1CCCGZY46jOD6vX79efa9Qr4ca
aWg95LXQf5oQQkjQsXsuIK5Xu3ZtjesNGjRIz3WM65UdW4uZvnm2D4CbF4sa
vDlz5uhnDp19xhlnSNeuXeXdd9/VeB7+Pl08j1qPEELKjl0nDa33+uuvy113
3aV5FVOmTNEcTmo9QgghQcec70y9Hnq4NWnSJKn1mMNSdmyth7mCHePDvMLW
friM3gqPPfaY+gJA511xxRXy4osvJnNo3VigXQfo5oayrpIQQkrG9eHEetuq
Vavkm2++0Zz5lStXysGDB5O5+IQQQkiQwfkOvh/wme7cubNcd911ms+CdU07
d5Bkhh1zc/1XoPXM/AGem9Bz+NwvuugizdtEDhF+X7p0qebP2o/n1v6xdq9q
s2Fijpxwwgk6cmdU9qshhBhcL2SsqcEb68CBAzrQv9T2zyKEEEKCijnX4dw2
d+5czV3BQO3Yvn37isWQSOmYeYTtwWLX5hnNh9p/eG5efvnlqvPQW2H48OGy
aNEiXVPO5LN3a/e4nSoWW7/5jZyJG8w9ZWKOuT5HkldXwdd8Qs5EqbiXN0Ny
c1Kfj7qXVDauD6eda+/2PiWEEEKCDLQHdAfOd4cPH5a///5b81nMuqa97slc
zsyw425mXdj2a8HPnTt3ymeffab+K8ibbdWqlfTv319++ukn9WlBTM/u3eDG
8OzLrs7j/KSisPWb37A1nadxjouWOtbX7I0KFF8zckv6jAipHNzjpn3sdNfl
CCGEkCBjasqg5YzmM+c+XGfOd1zjzBx7/mA+P7u3+t69e2XmzJnau75p06bS
uHFj9QSA9oMfqvHDcXWeX56mGzskFYml307IlRIV0oaJknMctFTplOE1l/tT
5/poy+P8GgjxwRw37Xp0N6+Tx1VCCCHZgLuOaXuAuL4i1HqZYc8Z3Ho9xEsX
L14sI0aMUC+WGjVqSJcuXeSNN96QzZs3Jz03cV/XAy5drz5un+OErd9Ki9VZ
OienchM4M3/NFfS8Obm5lfMaCEmD63MF3OO1ezshhBASRFz9YOcN2vVi1BKZ
484TzGeJvEz07J00aZLW6J155pnSunVrmThxoqxevVp1nsHOmzWPRyqXlLq3
UmJ16XxZiq53cxmt+Jv3B3qTHRdznm9GbtHjlPhSSniMTO+X8XMVvcuivFFo
u6qiewlJYNdUG2ytZx+3eewlhBASZOxzHgb0BTSJyem0cxCp9TLD1XqYP+Az
Ra88eLGgd179+vWlefPm2msBNXqok7RrQ8zf2TlF/PwrF7v2rDTNU3RfW9PZ
tXNOLqOv1kqTf5mpfnNec8k669ifK/kuk3o2/jj0IyVVDbOuaa+l2edBk1fB
4y4hhJCgY+sIv7ie6ytCSseNlWLOgP6F6Nt05513qs5Djd7dd98tP/zwg3qx
QFfb8wpX6/Gzr2zK4quZrkYuvV9LOj1UTF+WKSezNF+WVL15bM+VfCPJvzHv
w1/3ElJ52PoOx2esxZljMLC1HiGEEBJkXM8x1y/Szmfh+uY/49ChQzJv3jwZ
MmSINGvWTPsrILb37rvvyu+//578nO36PDeHk599ZWPrt1L6FqTzZSnBryWt
HkrRWzlFlzPyOCnlNbtBtmN6Luf5SotNElKJuF7Jbh6LvebJdTZCCCFBx9SS
Ge9HuwccfverbSDpcesf165dqzV57du3l5NPPlk6dOggzz77rGzatCmp56j1
qji2DipNN6WrT0tbt1ZCbmea2FxGuZBljssdw3OJrVet91BZ3jCElIB7TsOx
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
zPbPmF4JPS/wjx26Tvx4bqs18mo9+/wrpL98zek/q4pdp/49Uu/hVhOHjufn
HdN9/v3LtkXeNk7Ttf62oXuUvx21HiGEENIa6B2r9fxnx/j9xf9I/u+1+ves
HWBtctUmvl7yP9f9Y3adbxdYG8muhW7tFP84/jHwivV1sf5gRUWFm4ulW7du
cuONN8o777wjtbW1hTx0f788iq9JfTvFbhOqS8iesvtbnafrJvqayLcJbX5+
e/maN0uD+Xrd6jLry43Z2Gnxp75t6tu1vg0csvX9fWL2o2vDJO1EQv/d3SR1
krxKUubktb4p2bYRx6yX3Q1JnXfukPq6Omlq2CXJHxF83rhLdjdhvZJdkrSM
NCSv9bt3utfG3ShTU3Zy5dvT3g22DZLXQn2b3PtdO3bJju1JKXcm7b8zyb8O
r8n39Un/q29qTrsSPbsr2T75vgnb4bMG833yudTVJympR/J9Ukk4UpKUbKsp
qV8T6t6A6xz1Qzsm9WpM2qBhh+xqqEt2S/peE9quuf12Ne2WXck52InXJDUk
ZW4058TXWb6PKk1H2fPn3yfsPiCkUbRv+nHQoWNarRLqxyF9Y6+LPFojpOF0
e80rds369Q+1i9bDv6f4beHrMv+eHjo3WefJv+ZD95DY86aQzg3pQnsc/O74
59a/JxNCCCGkGWu3YNwa5i2DrwtzufixNKrf9Dfd13pZOi30m25T6Pc7lKxt
YzWjfdbr2zG6j2oT7Ie6Tpw4UYYMGeLWTcdaehi3h9hNtaWg+VTnxrRe6Fm1
b/+F9J3vgwo9548927b2qG+j+nFe9ph+HKt/bN/OCtmGofxC5yU0jiikwezx
rSa3eaT1Hd/Xqdtbf3SRDwFl3N2sU5oVW6NLuxIdt7Me2maX03tNe3SQ03l7
0u7dDU4HOS2U7NWUvDY6nZe0j9Nxu3OlJqTGpJ6JZquHTmtsKnxmU2PyfdOu
Zm3XlOi8xm3JMWub9Z44vZekXUnameSLtKs56WeJoE00XrJtbWPzK7bBPg3Q
g41O07qU1LOhPjmXu+qSdtyxR+/tclpv567tUrdzW6L3kus9qWd9omnrk7rW
79F5dUleO9DeOK/oN03ZNn7Ml2TvL3pfsjHd/jWh159qgJCfWf/3tZvtZ75O
Qr/GXFa4/n1fWqgPlqL17LUPrA7175X22Zt/Hwjd5/T/0HOutPuoprRrPeZz
8/PGNrEy4zN7nvx8bFtZjYd98Ju0atUqN6/02rVr3Wdp/lNCCCHkYMf6ej7/
/HP5v//7P7fu+h133CHPPvus+03F+nzQPlu2bCn490LPU/3n1jr/p7XVrQ2m
9oRvz4eevYd0kZ9Cz5a1DFaP6HcbNmyQV199VS644AIXu4m19CZNmuTm41Q/
p2+Hhp41a119GzKUfNvJxlXFbDhrf9kYziy/hK/TQvavX5+QPR6y4fzjxDSY
rY+1PX0bNeTzzCqnrwlCPolQGdS319DQrEvqG/W1waVmndJY6OuN9fB5JToJ
CVpO9iTnw2tJBZ9cY2u9FkqNiT5qbGjRe3hNsneHSaSX6CEbE83WsCMpI3Qe
/Hb1Tc5vB/2nSfUdNBxem3ZA90lz0s/36MKmROs17mzOI2mUZr3nyp30wQb4
9dB+Sb2bmhO0XkPyWu/8e8n/TfVO7zUkdYYfD5q5JTW5NrT9OqRPYn0y9izA
6qvYuff7PM6dXvuhPhe6L4V0p68PQ2X1n+vE7rWh+tlyx2I1NWmfDPk5Q33f
5mu1nI3DD11zto18bRu6B/oa0d5HrJ6OXZehexDquX37dqfvPvnkE3n33Xfl
L3/5i9x+++1yyy23uPd4JpnXr0oIIYQcbFidhWfXH3zwgUyYMEF+8IMfyKBB
g+T888+Xm2++WR588EF58cUXXVwj5qXEODb1+6ktEIoZxGewtewzWegr+A6x
Xt0XX3zh3kNj6udIWOPA+hSt9tF8Nan9gfJjH80X2hR56WdImj/sByTYDpiP
pUePHi5dc8018o9//KOwZrraLvgf+SFf5KPv9Rh4jzLjVffVstm29p+TYxv4
DXRf2y7IG2XXNkNCvCna0z7nD8V0qY2NbZEf8ser5qfH0Lqg/fGKNvFtaF+7
Wv2s507LjvJp/njF/9rmqvlj+Vo7EnVDvlouLS/aQNsFeeN/bIP3Wu6Qj9Fv
G9TTtfXGpF8k+W1Ee3+xUTbgeF+0tDvabdOXm9w+iLkUnE93Tve0hYu9bPbj
wSe3o3aHbN60JcnzqyQfpM3J+9ap+buk32xI+uLW2kTXQfMVpGSR1nP/J3pw
V90u2bghKeP6L+SrL5PybUI+XyZl/kK++DxpoySvL5N8v/oyafPk+JuS4+ys
3dWsExNdB79hI/SlC9vc7fLcnfwv8CXWJ22elP2rpD024VxuTPrGxqStv/w8
afskbULaIF98uV7Wrf80+XyD7NhZ16yJ0cZJNvBOOQWMdvHsd7S3Xn/aJ/R8
Iml/xyvaXe8Zvqaz8Y6qLXC9YT/dF8+j9DryX5G0H9r5n0LPi9RHqNeP5u9f
P0h6DWjMdwzbH5E/yq71RxntfQVJv8MrjmvjEaymss+OVCOhHbR8mp+9D+I8
4D3yRjn89vZ1r33Wg3uWlk/LrNeitpXe07Gtniv15SEfe1+02hNlgb9OfXdY
Hw9rwv7pT3+S6667zs2TjDVxTjvtNPdbtXTp0sI59e+5hBBCyMEOfhdV6+H3
Ev6se+65x8UxdunSRY444gjp3r2783ddcskl8tvf/tb5/O666y555JFHpKqq
yv2u2+fmoXEieP/xxx87nyHmQJk2bZo89thjLk2fPt3lhYS17JCmTJkic+bM
kdWrV7ty+f5Da5Mgf9hB7733njz//POF/XEc5P/000+7Y+CYU6dOdZ9hbfR/
/etf7v3QoUPl0EMPdXXGNqiP6g0cGzYTNC58nFpuzQuvWn4cE9+hjii3b/eF
tA2Ohfk/kRfyQF6an5YVCf9jrhjYPEuWLCmKKQv5SVQLQpPPnj3blRMJbaN1
0Pd67BdeeMHlresvxnxz2jYrVqxwPlHko+XFe81b2wnvn3vuOfn3v//tzpOe
y1DsJt5DF6DceGav+Wr/sMdBO+EcP/HEE/LGG28U1rq38Zq+TwPHgw0K+/Hp
p56SRx+ZKtOnPipPPDpdnnzscXn04akyNUmPTkvaZmpybpPP3nprvrNnXd2b
dEymOH3XkOgn6DRopoZdjbIx0Vxvv7lAnnriGZn2SFL/R5J+N3V6kt/jzWnq
4+7/qcl3jz/2pMx77XVZveoTpxGdj6++sTmO0/n89vj53DOB+sRu/lzm/HV2
UvfkXE59JGnbpF2mJW0ybeqedkZ7J30laZ+pSfvMfPElWZX0wx07EZOa9Ikk
/4akzPVoe5xLjSNNyr/lyy2ydNFSeen5F2V6kgfyn/rIlOT14SRfHOvhpN2n
yNRpU5L8pyR9Cn18lezcsaOlPaD30CbwlTa0XK+4hhYtWuTOp14zep3jPc4h
zqv2RfRxbI++4vujrObAe1ybuO5nzJhRyMP2O/QNJHyGvJ9KzvnChQsLusn3
QVkNiesAegPx3CgjkvZr5KXXp/ZDlAH3FGiVtPutHmPNmjXy2muvFdpArxt7
H9T+/uSTT7p1waGjbEy9r/XwCj2Fcv/1r38t3AuRD/J//PHHC/cCvSdiG4xX
hr6yz7dCfnUcG/oN188zzzxTKJ/mae+LDz30UOFei2tOr83Q8x5tc70fIl/E
1cN/p/pu8ODBbix1586d3XO5c845Rx544AFZvnx5YRwB/XqEEEJIGLV1oCFg
C0FXjBgxQs4880w3hu1b3/qWfOc733HriyMdeeSRcvzxx8v111/v9AHsOath
QuP+582b59YxwO81dCTmQenTp09hPhQk6Er8jvfs2VN+/etfu33wDNrG6Pg+
JtgP0B147gt/JPJGPGbXrl1dPlgnD/l26tTJfY7j/eY3v5G7775bRo0aJUcf
fbT7Hv49aDpoDc0X9YL/EnmfddZZbltN2AevvXv3du9xvL59+zq7BLYTtAds
J+uL0LLr/9A/t956q/Tr18/tj7zQJtoO9lhYB0L1KOwta+uF5mFHPaDzrr76
6kL+sJNs2yNvtDv+//GPf+x0Mewy6y+18ZVqk8HGnjVrllx55ZVujQqUT8+h
nj+8or3x2bBhw5xvGM/pNTYWfU39N1abwZ7FWhcXXnhhoW1RZs1X/1e778QT
T3TxXPA3+zakryfRTtAGtyVtPnjgIOnasbP06dZTBvbuJ4OPGSB9j+4jPbr0
kK6duspRR3aSwYOGJPbmOFm69IOkfRNbtR6auqEw3q4+0XfQeM7vVlsvK5ev
kvG3T5AThpwgPbol/QN9pHtS7h5H70k93P/4btCAAXLTjTfKgvlvy9bNW5I8
kFdix2PcXFNTISEutK5uuyxaslD+3+hrpF//3tKpyxEudevRWXr16SG9+/aU
nr2TfHt2l45djpQuR3eRH/3kApn7RpVsqd3u5lFpwMjC3YkWaGqQHYhVbdrt
/HwNOxtduR97eLr8+PwfS99efaRb0r5dOneS7t2Sdu/eVbp1TfpN56OS/tI9
Od/HyDUVI6Rq7muyObk2oU0F/keXkjbZ2RJHiHML+x16ArY5zhvuJziHOLd6
7eu5xWf//d//7bQP9L7zp5rr3K7zomNtYe/j2kQeyF/7ufZrfI7/0RfRV9AP
8SxGx99qv3Cxuub+gvsO7j+/+tWv3LWC+4fmi2MgX3yOax7XEa7N//3f/3V5
h/B9zNBAV111lcsD+SIP7d8oN9pC2+X00093ugdaEtdNKJZU2wk6Fs+bcG0i
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
QhpP21vjT9FvUW6XT81y+WDZB1KTpA/RFns+R9mRN/q8jr1saZPdUjilGKfW
2ORiF+u21+buK3r92GcCQNvElh36b/v2bUne65O8cZ2gXXHekj7yIdp5WZKW
uvc1y2uSun0on639VLZu2yr10AQo8+49c6ZAPxbSbje3TF3dDjdPDc4T2hnX
j567QjslbaOf4bzr84ZCmxhfuO0/2g/1fGo/wXGQt80fCWXAtaz90NcGNl5A
r3vsY/PQe4peQ9ovbd42flD7h+2HOCfaV/TepO2hZfb7OPoK6psH3Nswt6Tm
57eDTehPuE+gj1u/pt+/9b6FvFFu5Kf3wlDZNe+0fuiPDYSWRD1xbeh9Sdtb
y6/Hw/0Y14OW2/e1h8Ya4j6B9tbrD+cL5SKEEELI14+N7QmNsdffbTvHnbVF
rJ8oZK+obWhjtawNFtIHitp+eDatY290DKI+n4a9hPgmxEJizMopp5zixvvA
JlE7x9ceWqbYGnB+svGfaVrPtkksptGmwvz/ja3nP/e1nv3en7fe2s2hY/vn
Sj/366PP/f052UNl8J+527LF+oqvNW2bahvH5gwN6V+bp8YD+nNQWDvXrtfn
6+hQfXRMmb99Wrv46w/G/L+hc+nb5P7cImlz6ft9z2p4XU/FXxPB5h3yJYd8
NaE6+PtZjWLvK7af+X3QfxYRuj/4ZfbvWTGtZz/LOkexazDvvTTterF1s3NM
+u3iXzN+H8+KVU07l77G9vPPuvb9tghdJ/61qm2OslvtSQghhJCvn5gtErMv
Y7aMtZFitrT9LKb1fLvMt7ustoTdAL8e5kLRORCwxgLixdR/6NuTsWPmTbYO
sfaMtZ9vG8fa3dpMafZaWrLP2UM2bB4dZ+uStp/W2z9OSCOl6bY8dchqj5h+
88vl92vfpvfrUkrKspGtzovF7cX6SUhT2c98nZ23r4Sui7R+EtNHoXYN9Smr
z0J1i32et7/712LaNejX1X/ukFebxPqw7XOhc+5fZ6FrKq0fpF1P/vFDujh2
7cf6gl9n/zcgtl6o388JIYQQ8vWSZiv4n8X2Cdl6/rgzxbd/9Ls0W87aIv68
IoglwvgYzJeHOd7wijFqOo95aPxbHts3S0ek2fJZ9leajWz9LqE8Y/6PkA1p
bdzYecvzufXThZ75p9mZIU1lz0daO8fsd7897DlOs5FDOiKmxexx8uiMWPuF
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
67p6eP3yyy/l5ZdflvPOO086dOggZ511lkybNq0wTk+1nu7DuVkIIYQQQggh
pPyo1tM19FSzITYTrxiTN3HiRDdGD/Gbo0aNkrffftuN07PazupDQgghhBBC
CCHlxWo9nVsF77GOQl1dnZtr89JLL5UjjjhChgwZIpMnT5a1a9cW+QH9OFBC
CCGEEEIIIeVFdZpqPdVr0HLQdPfff7+ccsop8r3vfU8uv/xymT17tmzevDm4
Fh/H6hFCCCGEEEJI+0G1nfXVYSze/PnzZeTIkXL00UdLr1695K677pIPPvig
sJ6er/U0D/r2CCGEEEIIIaS8WK2mvjroNczJgjlYhg8fLl27dnVrp8On99VX
XxW2szGbeFXfILUeIYQQQgghhJQXP/4S/2PeFfjvfvvb37o5Wfr16ye///3v
paamprBuemidBq6jTgghhBBCCCHtg9B6CfDpvfbaa3L++edLp06d3DoLL774
omzcuNH57jTW09d6NhFCCCGEEEIIKR/qj9O18vB+1apVbk6WAQMGSLdu3WTE
iBFu7XTMzemP6/P1HefjJIQQQgghhJD2AbSZrqe3fft2t37e1Vdf7Xx6J554
opuTZd26dYUxfSGtp//rug3UeoQQQgghhBBSPqw+g15bv369PPXUU24tPayz
8LOf/UxmzZolW7duLZrDxe5j12Kn1iOEEEIIIYSQ8gMfnc63An22bNkyue22
2+Swww6Tzp07uzlZEL+JGE87j4uN5VS/oL6n1iOEEEIIIYSQ8gK9pj45vM6Z
M8f58r797W/L0KFDZfr06W5NddVvobhN/z11HiGEEEIIIYSUFxt3ifk3H3ro
ITnllFOkQ4cOctVVV8m8efNk8+bN1G+EEEIIIYQQsp+h66AvXbpUbrzxRunT
p4/07t1bJk6cKIsXL3bzbxJCCCGEEEII2b+A1qurq5NXXnlFLrroIunSpYtb
U2/mzJny+eefOx1Ivx4hhBBCCCGE7D/oOD3Eb95zzz1ujYVevXrJNddcI9XV
1W4NBmo9QgghhBBCCNm/gIarra2V5cuXy8iRI6Vnz55y/PHHy7333uvWVNd1
97g+OiGEEEIIIYTsX8Cn99prr8k555wjRx11lJx33nkye/Zs2bhxo/Pp6frp
eCWEEEIIIYQQ0v6Br2716tVy3333Sf/+/aVbt25SUVHh1tnD+ulYVw8aD/49
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
QgghhBBCCCGEkP2H/w/Fv0XG
    "], {{0, 464.4}, {534.6, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120, 120}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{534.6, 464.4},
  PlotRange->{{0, 534.6}, {0, 464.4}}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.827974112652102*^9, 3.827978160272624*^9, {3.827989023625279*^9, 
   3.8279890313320236`*^9}},ExpressionUUID->"94c802d7-0679-45af-99d1-\
43fef473fd9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Other Trials",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272202415290284`*^9, 3.8272202636975317`*^9}, {
  3.827974142283854*^9, 3.8279741473800197`*^9}, {3.827976993695263*^9, 
  3.8279770085625267`*^9}},ExpressionUUID->"3a21df98-acbd-40b3-a8f6-\
bd90de2783e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"i", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "500"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", "fluxexchanges"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Reverse", "@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.827220553253589*^9, {3.827220843103536*^9, 3.827220895388138*^9}, 
   3.8279770085625267`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"f86643e7-b6de-4f5f-a40a-4e4208c1da9c"],

Cell[BoxData[{
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Reverse", "@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "boundaries"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.827464375165097*^9, 3.8274643983827176`*^9}, {
   3.827464430761165*^9, 3.827464431458178*^9}, 3.8279770085625267`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"4b4cf0eb-f680-4fef-b34a-4c5b829dd039"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000001`", ",", "0.30000000000000004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", "0.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.6000000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30000000000000004`", ",", "0.7000000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.9`"}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8274643769436903`*^9, 3.8274643990132046`*^9}, 
   3.827464432030997*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"70fd1028-7263-417a-b6e5-757f18e87514"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "1008", ",", "2"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8274643769436903`*^9, 3.8274643990132046`*^9}, 
   3.8274644320382905`*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a8c90b4a-6485-4a8f-96aa-d59b935855fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "i", ",", 
          "fluxexchanges", ",", "300", ",", "500"}], "]"}], ",", "10"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "boundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"first", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "[", 
        RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"first", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, 3.8279770085625267`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"6e0afa4d-8405-4bcc-a107-a051caa1a23a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"774.79222`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.827221744939277*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"09ba5012-8585-4cd3-907f-9b4214b61acc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "3", ",", "3", ",", "1", ",", "2", ",", "1", ",", "3", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272217533294697`*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"273a5f7b-8644-40d9-b645-74279ac5f2e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1803", ",", "1", ",", "1617", ",", "1748", ",", "1", ",", "1638", ",", "1",
    ",", "1642", ",", "1", ",", "1"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272217577339425`*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"ef7d9ad4-00ba-41b0-8f50-607e8e74e30b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "i", ",", 
          "fluxexchanges", ",", "300", ",", "200"}], "]"}], ",", "10"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "boundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"first", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "[", 
        RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"first", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, {3.82722182648096*^9, 
   3.827221826536984*^9}, 3.8279770085625267`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"eb4b74e6-3cba-4536-9ebd-7f39d1f98d23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"711.6161496`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272225445563593`*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"c0734ddf-8a23-459d-ae58-0442e926a90d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "3", ",", "3", ",", "1", ",", "3", ",", "1", ",", "3", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.827222552876501*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"0469009b-35f2-4d9c-90d9-1dd5e25ca8f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2410", ",", "1", ",", "2521", ",", "2527", ",", "1", ",", "2370", ",", "1",
    ",", "1932", ",", "1", ",", "1"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272225574378166`*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"d65732d3-7409-4b07-af26-443c11368cda"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "i", ",", 
          "fluxexchanges", ",", "300", ",", "20"}], "]"}], ",", "10"}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "boundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"first", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "[", 
        RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"first", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, {3.82722182648096*^9, 
   3.827221826536984*^9}, 3.8272226005130577`*^9, 3.8279770085625267`*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"e6f7d63f-71ac-4dd2-ad56-405db41dff5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"686.8795665`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272225445563593`*^9, 3.8272232929027452`*^9, 
  3.8279770085625267`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"74c46682-4916-49ef-9a0a-452f02770f52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "3", ",", "3", ",", "1", ",", "3", ",", "1", ",", "2", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272225445563593`*^9, 3.8272233013508463`*^9, 
  3.8279770085625267`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"44b1e17b-e73a-418a-bf56-3f5f6926e025"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3000", ",", "1", ",", "3000", ",", "3000", ",", "1", ",", "2404", ",", "1",
    ",", "7", ",", "1", ",", "1"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272225445563593`*^9, 3.8272233059683247`*^9, 
  3.8279770085625267`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"389227ac-cde0-4f15-adb5-9a8275d8e7ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"i", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", "fluxexchanges"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Reverse", "@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.827220553253589*^9, {3.827220843103536*^9, 3.827220895388138*^9}, {
   3.827227949969146*^9, 3.8272279516430855`*^9}, 3.8279770085625267`*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"954db2d5-1bc1-45bd-81f9-0887ba86d6a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "i", ",", 
          "fluxexchanges", ",", "300", ",", "20"}], "]"}], ",", "10"}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "boundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"first", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "[", 
        RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"first", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, {3.82722182648096*^9, 
   3.827221826536984*^9}, 3.8272226005130577`*^9, 3.8279770085625267`*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"f9dda754-be8b-4ff4-a857-bc4680630d38"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"943.3556159`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272289158382993`*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"68827856-a18a-44fd-a087-74c88a26cf46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "3", ",", "3", ",", "1", ",", "3", ",", "1", ",", "2", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272289255974293`*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"76863894-3faa-4391-99f8-2bb8c75c451b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "246", ",", "1", ",", "2143", ",", "214", ",", "1", ",", "256", ",", "1", 
   ",", "7", ",", "1", ",", "1"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272289307925997`*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"ad215bda-c3b4-4c05-ad33-4ffbf7b86c88"],

Cell[BoxData[
 RowBox[{"boundaries", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomChoice", "[", 
     RowBox[{
      RowBox[{"i", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", "fluxexchanges"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Reverse", "@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"-", "1"}]}], "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8274656266834946`*^9, 3.827465654047805*^9}, {
   3.8274657392899246`*^9, 3.8274657441338015`*^9}, {3.827466622761772*^9, 
   3.8274666256001225`*^9}, 3.8279770085625267`*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"25dd7411-87d6-4b05-a95b-702c9b7dcfaf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "56"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
          RowBox[{
          "stoichiometricmatrix", ",", "steadystatevector", ",", "i", ",", 
           "fluxexchanges", ",", "300", ",", "20"}], "]"}], ",", "10"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "boundaries"}], "}"}]}], "]"}]}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"first", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "[", 
        RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"first", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, {3.82722182648096*^9, 
   3.827221826536984*^9}, 3.8272226005130577`*^9, 3.827464625803501*^9, {
   3.82746580645471*^9, 3.827465808124654*^9}, {3.8274666413285675`*^9, 
   3.8274666431382627`*^9}, 3.8279770085625267`*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"9eebc087-ddf6-4801-aeda-8a1a2dbf8a1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3090.4542803`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272289158382993`*^9, 3.8274651257662735`*^9, 
  3.827469739009469*^9, 3.8279770085625267`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"dbc86c68-38ef-4509-8272-66b2283bb08d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}], ",", "fluxexchanges"}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{"boundaries", ",", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"Range", "@", "fluxexchanges"}], ",", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"0.1", "*", "fluxexchanges"}], ",", "1"}], "]"}]}], 
           "]"}], ",", "1"}], "]"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsize", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "i", ",", 
          "fluxexchanges", ",", "300", ",", "20"}], "]"}], ",", "2"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "boundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"first", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "[", 
        RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"first", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, {3.82722182648096*^9, 
   3.827221826536984*^9}, 3.8272226005130577`*^9, {3.827229001256073*^9, 
   3.827229048332595*^9}, {3.8272292618255043`*^9, 3.827229262022353*^9}, {
   3.827229634705552*^9, 3.8272296359242353`*^9}, {3.8272298391985645`*^9, 
   3.827229840846158*^9}, {3.8272300374740634`*^9, 3.827230040436902*^9}, 
   3.827230674220505*^9, {3.827231249088149*^9, 3.827231259566846*^9}, 
   3.8272313492623634`*^9, {3.8272314924636784`*^9, 3.827231496558365*^9}, {
   3.827231761561832*^9, 3.8272317630045557`*^9}, 3.8279770085625267`*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"57fb7141-c967-4c70-a655-8d80cb079323"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"202.3057997`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272297775746202`*^9, 3.8272299746621904`*^9, 
  3.8272301833215413`*^9, 3.827230717451352*^9, 3.827231268979417*^9, 
  3.827231355976334*^9, 3.8272317091131725`*^9, 3.8272319665531163`*^9, 
  3.8279770085625267`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"2f43049e-9410-4a1d-b1c6-1370e51b4f05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "1", 
   ",", "3", ",", "3"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272297775746202`*^9, 3.8272299746621904`*^9, 
  3.8272301833215413`*^9, 3.827230717451352*^9, 3.827231268979417*^9, 
  3.827231355976334*^9, 3.8272317091131725`*^9, 3.8272319683698874`*^9, 
  3.8279770085625267`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"98b4cf0c-96dd-444f-98cb-8dad993c9e2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "600", ",", "600", ",", "600", ",", "600", ",", "600", ",", "600",
    ",", "1", ",", "600", ",", "600"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8272297775746202`*^9, 3.8272299746621904`*^9, 
  3.8272301833215413`*^9, 3.827230717451352*^9, 3.827231268979417*^9, 
  3.827231355976334*^9, 3.8272317091131725`*^9, 3.8272319692108526`*^9, 
  3.8279770085625267`*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"8b6b1d78-4910-47cd-bb4a-a06b6bce2e2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"syntheticseqgenerator2", "[", 
   RowBox[{
   "stoichiometricmatrix_", ",", "steadystatevector_", ",", "boundaries_", 
    ",", "fluxexchanges_", ",", "sequencesize_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "subsetsizechoice", ",", "subsetpositions", ",", "coefficients", ",", 
      "objectivefunctions", ",", "solutionvectors"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subsetsizechoice", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "fluxexchanges"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"subsetpositions", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "@", "fluxexchanges"}], ",", "subsetsizechoice"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"coefficients", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", "10"}], "}"}], ",", "subsetsizechoice"}], 
         "]"}], ",", "sequencesize"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"objectivefunctions", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ReplacePart", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.", ",", "fluxexchanges"}], "]"}], ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"subsetpositions", ",", 
              RowBox[{"coefficients", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "sequencesize"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"solutionvectors", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"LinearProgramming", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"objectivefunctions", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", "stoichiometricmatrix", 
          ",", "steadystatevector", ",", "boundaries"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "objectivefunctions"}]}], "}"}]}], 
       "]"}]}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272166958564386`*^9, 3.827216706754908*^9}, {
   3.8272174003965287`*^9, 3.827217422513888*^9}, {3.827231864077096*^9, 
   3.8272318726940465`*^9}, {3.8272323321183767`*^9, 
   3.8272323403712993`*^9}, {3.8272332085931516`*^9, 3.8272332393584747`*^9}, 
   3.8279770085625267`*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"cd60ca79-076d-49e8-af58-d25a9861663f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}], ",", "fluxexchanges"}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{"boundaries", ",", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"Range", "@", "fluxexchanges"}], ",", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"0.1", "*", "fluxexchanges"}], ",", "1"}], "]"}]}], 
           "]"}], ",", "1"}], "]"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8279770085625267`*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"1c2a5f37-83f4-4e99-b8cc-04ea1c8b9654"],

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgenerator2", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "i", ",", 
          "fluxexchanges", ",", "300"}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "boundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"first", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "[", 
        RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"first", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8272175939633603`*^9, 3.827217641335334*^9}, {
   3.8272176785106597`*^9, 3.8272178405535917`*^9}, {3.827217977459494*^9, 
   3.8272179819311094`*^9}, 3.827218013670974*^9, {3.827218216776662*^9, 
   3.8272182854940643`*^9}, {3.827219890753894*^9, 3.8272198909438806`*^9}, {
   3.827220930036392*^9, 3.8272209467997823`*^9}, {3.82722182648096*^9, 
   3.827221826536984*^9}, 3.8272226005130577`*^9, {3.827229001256073*^9, 
   3.827229048332595*^9}, {3.8272292618255043`*^9, 3.827229262022353*^9}, {
   3.827229634705552*^9, 3.8272296359242353`*^9}, {3.8272298391985645`*^9, 
   3.827229840846158*^9}, {3.8272300374740634`*^9, 3.827230040436902*^9}, 
   3.827230674220505*^9, {3.827231249088149*^9, 3.827231259566846*^9}, 
   3.8272313492623634`*^9, {3.8272314924636784`*^9, 3.827231496558365*^9}, {
   3.827231761561832*^9, 3.8272317630045557`*^9}, 3.8272319130097065`*^9, {
   3.827233249953823*^9, 3.8272332596601825`*^9}, {3.827233317268608*^9, 
   3.8272333258784823`*^9}, 3.8279770085625267`*^9},
 CellLabel->
  "In[186]:=",ExpressionUUID->"680a7060-0d05-42c7-844c-389bfc0cdf94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"195.1262594`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.827232178777985*^9, 3.8272325757121367`*^9, 
  3.827233538671067*^9, 3.827977008570553*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"0e6c34dc-01e4-4237-9ffa-74d1be9e1df4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "1", 
   ",", "3", ",", "3"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.827232178777985*^9, 3.8272325757121367`*^9, 
  3.827233540280964*^9, 3.827977008570553*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"63a9d36e-d514-4daf-8c64-48b55ce5dddf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "595", ",", "505", ",", "590", ",", "600", ",", "598", ",", "596",
    ",", "1", ",", "598", ",", "600"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.827232178777985*^9, 3.8272325757121367`*^9, 
  3.82723354106929*^9, 3.827977008570553*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"85e5feed-18de-4883-a623-38a0e7e396f3"],

Cell[TextData[StyleBox["Trials with different boundary limits ",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.827233832837589*^9, 3.8272338516394544`*^9}, 
   3.827976899289655*^9},ExpressionUUID->"ac5b9c06-f396-4500-a5fc-\
67de86459810"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sequencesize", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "200"}], ",", "200"}], "}"}], ",", "fluxexchanges"}], 
        "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.827234114807976*^9, 3.827234115895759*^9}, {
   3.8272342209724636`*^9, 3.827234223414585*^9}, {3.8272344341364384`*^9, 
   3.827234443849713*^9}, {3.8272344897962*^9, 3.827234492342883*^9}, 
   3.8279768992910395`*^9},
 CellLabel->
  "In[242]:=",ExpressionUUID->"96f66d96-d195-4806-b132-b04c8fb8439e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"subsetsizechoice", "=", "250"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subsetpositions", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "@", "fluxexchanges"}], ",", "subsetsizechoice"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coefficients", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "subsetsizechoice"}], 
      "]"}], ",", "sequencesize"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"objectivefunctions", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0.", ",", "fluxexchanges"}], "]"}], ",", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"subsetpositions", ",", 
           RowBox[{"coefficients", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solutionvectors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"LinearProgramming", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"objectivefunctions", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "stoichiometricmatrix", ",", 
       "steadystatevector", ",", "boundaries"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "objectivefunctions"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Chop", "[", 
    RowBox[{"solutionvectors", ",", 
     RowBox[{"10", "^", 
      RowBox[{"-", "5"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", 
  RowBox[{"first", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Flatten", "[", 
      RowBox[{"sequenceschopped", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Flatten", "[", 
     RowBox[{"sequenceschopped", ",", "1"}], "]"}], ")"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"first", "@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"sequenceschopped", ",", "1"}], "]"}]}], ",", "All"}], "]"}], 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.827233899630619*^9, 3.8272339037625804`*^9}, {
   3.8272339538292856`*^9, 3.827233960092284*^9}, {3.827234033418259*^9, 
   3.8272340352710238`*^9}, {3.8272340702699375`*^9, 
   3.8272340705735884`*^9}, {3.827234123459634*^9, 3.827234124002864*^9}, {
   3.8272341580349193`*^9, 3.8272342026966763`*^9}, 3.827234246130293*^9, {
   3.8272343108887825`*^9, 3.827234321994787*^9}, {3.827234368117446*^9, 
   3.8272343998628416`*^9}, {3.8272344462974076`*^9, 3.8272344467872353`*^9}, 
   3.8279768992910395`*^9},
 CellLabel->
  "In[244]:=",ExpressionUUID->"90d9a228-979c-422d-ad93-f6c356c87031"],

Cell[BoxData["300"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.82723427469989*^9, 3.8272343484026203`*^9, 
  3.8272344282056675`*^9, 3.8272344814475327`*^9, 3.8272345348750257`*^9, 
  3.8279768992930336`*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"4849e02c-c892-4042-b32c-18a49790fa8b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"boundaries", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "500"}], ",", "500"}], "}"}], ",", "fluxexchanges"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "@", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"sequencesfixedsubsetsize", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"syntheticseqgeneratorfxdsubsetsizevaryingcoeff", "[", 
         RowBox[{
         "stoichiometricmatrix", ",", "steadystatevector", ",", "boundaries", 
          ",", "fluxexchanges", ",", "10", ",", "20", ",", "i"}], "]"}], ",", 
        "10"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "coefboundaries"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sequenceschopped", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Chop", "[", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "5"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sequencesfixedsubsetsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"first", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Flatten", "[", 
        RowBox[{"i", ",", "1"}], "]"}], ")"}], "\[Transpose]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"first", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"i", ",", "1"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "sequenceschopped"}], "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8279743561904526`*^9, 3.827974363566989*^9}, 
   3.8279768992930336`*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"63a3399d-8620-4ef4-acbd-ebf95188d4eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"31.4049146`", ",", "Null"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.827974395912134*^9, 3.8279768992930336`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"bc62019a-fb24-40b1-8c56-0ff702c4c5c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1006", ",", "1007", ",", "1004", ",", "1005", ",", "1004", ",", "1005", 
   ",", "1005", ",", "1006", ",", "1006", ",", "1003"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8279743966973*^9, 3.8279768992930336`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"3c4fe68c-c38e-4e43-9e86-a4d60904e9aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", "100", ",", 
   "100", ",", "100", ",", "100", ",", "10"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.827974397181076*^9, 3.8279768992930336`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"c9ed6c8c-5403-4f5a-8c42-bd475813d2c1"]
}, Closed]]
},
Evaluator->"local2",
WindowSize->{573., 604.8},
WindowMargins->{{60, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5d2bb6b7-3f22-41ed-b4eb-73a2f70958d1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 718, 13, 28, "Input",ExpressionUUID->"7303abaa-6687-4536-b1d2-ba38b9a3d432"],
Cell[CellGroupData[{
Cell[1301, 37, 294, 5, 35, "Text",ExpressionUUID->"b9cce465-e4dc-4c45-ab98-39d60c38747e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1598, 44, 941, 18, 49, "Input",ExpressionUUID->"f53254ce-f391-4b33-9a13-3c627f232910",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2542, 64, 26618, 482, 65, "Output",ExpressionUUID->"843bc7dd-25de-4511-98d2-5e39c6b301b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[29163, 548, 2435, 62, 185, "Input",ExpressionUUID->"4040e321-da72-4be8-ae7c-3f2d638359d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[31601, 612, 1924, 45, 68, "Input",ExpressionUUID->"6b1f75ef-9b56-444a-b253-6369a1f48f84",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[33528, 659, 76443, 1417, 259, "Output",ExpressionUUID->"5a824fdc-366d-4e96-827d-3a7379bb8d85",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[109974, 2078, 1437, 40, 127, "Input",ExpressionUUID->"61e1aad2-231b-42ad-958f-8b4cf72928b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[111414, 2120, 2962, 71, 185, "Input",ExpressionUUID->"a9ba4c3d-c722-4e1f-8737-2e911d88eb57",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[114379, 2193, 1211, 27, 68, "Input",ExpressionUUID->"48b08232-f72e-45e7-8958-308d86488aba",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[115593, 2222, 1537, 45, 68, "Input",ExpressionUUID->"cec02b29-fcb4-449d-943b-c4c2b3f40d64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[117167, 2272, 415, 7, 31, "Text",ExpressionUUID->"cd26e807-1b35-4d15-a839-404728092d26",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[117585, 2281, 2639, 65, 185, "Input",ExpressionUUID->"8cb40589-a10b-4ad1-a1b6-0f3fd5ed4b80",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[120227, 2348, 2694, 74, 185, "Input",ExpressionUUID->"d76fe613-e0ab-42b8-bf27-93939264d09c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[122924, 2424, 386, 7, 32, "Output",ExpressionUUID->"5d2510a0-ca39-4c8d-a9d8-d8eea92dd089",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[123313, 2433, 361, 8, 28, "Input",ExpressionUUID->"d047329e-a8c6-489e-ac0f-0d1f596851c0",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[123677, 2443, 906, 27, 32, "Output",ExpressionUUID->"53c3f511-0c84-4dcf-b1e0-c2c01fb88b70",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[124586, 2472, 2934, 74, 146, "Input",ExpressionUUID->"c77309eb-6518-4401-9a49-f3b3a806fd82",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[127523, 2548, 3118, 86, 263, "Output",ExpressionUUID->"bb26fe4a-1d88-4eed-ba34-83b27651bdcd",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[130678, 2639, 431, 7, 35, "Text",ExpressionUUID->"0b05e5e5-f96a-477c-9ed3-6ed16abc5900",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[131112, 2648, 1626, 49, 49, "Input",ExpressionUUID->"07b8671b-c2ba-47aa-aff0-f75b02515927",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[132741, 2699, 2670, 63, 185, "Input",ExpressionUUID->"bdece311-7469-4221-ad07-3d24712f0272",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[135414, 2764, 2812, 73, 166, "Input",ExpressionUUID->"78a35992-c54c-45c7-9762-4b6ac5ff201a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[138229, 2839, 391, 8, 32, "Output",ExpressionUUID->"00985017-0b51-4f10-bf52-12ad2d7dde17",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[138623, 2849, 3450, 90, 146, "Input",ExpressionUUID->"87211642-95dc-4086-a903-800b1ef5f260",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[142076, 2941, 7038, 178, 263, "Output",ExpressionUUID->"083f5977-525e-4fb6-8de6-d3383a23be9c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[149151, 3124, 357, 6, 35, "Text",ExpressionUUID->"808be21c-ba65-4fd5-854e-1f86a3acadc4",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[149511, 3132, 4169, 116, 224, "Input",ExpressionUUID->"f644084c-531c-460f-9d2c-29956c0dfc4f",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[153683, 3250, 421, 9, 32, "Output",ExpressionUUID->"4e481845-1491-4909-9b35-26899820910d",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[154107, 3261, 3683, 94, 166, "Input",ExpressionUUID->"e28e56c4-a2a7-44af-a94b-02906fc07b55",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[157793, 3357, 4108, 113, 263, "Output",ExpressionUUID->"582ccf73-eaa7-434a-a1b0-b8e3d9bf5a01",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[161938, 3475, 263, 5, 35, "Text",ExpressionUUID->"f63f4c1b-96d2-4002-b6cf-b91c744f0547",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[162204, 3482, 134903, 2217, 374, "Input",ExpressionUUID->"94c802d7-0679-45af-99d1-43fef473fd9d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[297144, 5704, 363, 6, 35, "Text",ExpressionUUID->"3a21df98-acbd-40b3-a8f6-bd90de2783e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[297510, 5712, 1385, 39, 68, "Input",ExpressionUUID->"f86643e7-b6de-4f5f-a40a-4e4208c1da9c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[298898, 5753, 830, 20, 49, "Input",ExpressionUUID->"4b4cf0eb-f680-4fef-b34a-4c5b829dd039",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[299731, 5775, 1047, 26, 32, "Output",ExpressionUUID->"70fd1028-7263-417a-b6e5-757f18e87514",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[300781, 5803, 343, 6, 32, "Output",ExpressionUUID->"a8c90b4a-6485-4a8f-96aa-d59b935855fe",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[301127, 5811, 2253, 60, 146, "Input",ExpressionUUID->"6e0afa4d-8405-4bcc-a107-a051caa1a23a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[303383, 5873, 285, 5, 32, "Output",ExpressionUUID->"09ba5012-8585-4cd3-907f-9b4214b61acc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[303671, 5880, 362, 7, 32, "Output",ExpressionUUID->"273a5f7b-8644-40d9-b645-74279ac5f2e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[304036, 5889, 377, 7, 32, "Output",ExpressionUUID->"ef7d9ad4-00ba-41b0-8f50-607e8e74e30b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[304416, 5898, 2302, 61, 146, "Input",ExpressionUUID->"eb4b74e6-3cba-4536-9ebd-7f39d1f98d23",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[306721, 5961, 289, 5, 32, "Output",ExpressionUUID->"c0734ddf-8a23-459d-ae58-0442e926a90d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[307013, 5968, 360, 7, 32, "Output",ExpressionUUID->"0469009b-35f2-4d9c-90d9-1dd5e25ca8f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[307376, 5977, 377, 7, 32, "Output",ExpressionUUID->"d65732d3-7409-4b07-af26-443c11368cda",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[307756, 5986, 2324, 61, 146, "Input",ExpressionUUID->"e6f7d63f-71ac-4dd2-ad56-405db41dff5d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[310083, 6049, 316, 6, 32, "Output",ExpressionUUID->"74c46682-4916-49ef-9a0a-452f02770f52",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[310402, 6057, 389, 8, 32, "Output",ExpressionUUID->"44b1e17b-e73a-418a-bf56-3f5f6926e025",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[310794, 6067, 401, 8, 32, "Output",ExpressionUUID->"389227ac-cde0-4f15-adb5-9a8275d8e7ad",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[311198, 6077, 1431, 39, 68, "Input",ExpressionUUID->"954db2d5-1bc1-45bd-81f9-0887ba86d6a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[312632, 6118, 2324, 61, 146, "Input",ExpressionUUID->"f9dda754-be8b-4ff4-a857-bc4680630d38",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[314959, 6181, 289, 5, 32, "Output",ExpressionUUID->"68827856-a18a-44fd-a087-74c88a26cf46",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[315251, 6188, 362, 7, 32, "Output",ExpressionUUID->"76863894-3faa-4391-99f8-2bb8c75c451b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[315616, 6197, 371, 7, 32, "Output",ExpressionUUID->"ad215bda-c3b4-4c05-ad33-4ffbf7b86c88",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[315990, 6206, 1376, 37, 49, "Input",ExpressionUUID->"25dd7411-87d6-4b05-a95b-702c9b7dcfaf",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[317369, 6245, 2491, 64, 166, "Input",ExpressionUUID->"9eebc087-ddf6-4801-aeda-8a1a2dbf8a1b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[319863, 6311, 339, 6, 32, "Output",ExpressionUUID->"dbc86c68-38ef-4509-8272-66b2283bb08d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[320205, 6319, 4030, 106, 224, "Input",ExpressionUUID->"57fb7141-c967-4c70-a655-8d80cb079323",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[324238, 6427, 464, 9, 32, "Output",ExpressionUUID->"2f43049e-9410-4a1d-b1c6-1370e51b4f05",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[324705, 6438, 537, 11, 32, "Output",ExpressionUUID->"98b4cf0c-96dd-444f-98cb-8dad993c9e2f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[325245, 6451, 553, 11, 32, "Output",ExpressionUUID->"8b6b1d78-4910-47cd-bb4a-a06b6bce2e2c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[325801, 6464, 2844, 70, 185, "Input",ExpressionUUID->"cd60ca79-076d-49e8-af58-d25a9861663f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[328648, 6536, 1436, 42, 88, "Input",ExpressionUUID->"1c2a5f37-83f4-4e99-b8cc-04ea1c8b9654",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[330087, 6580, 2798, 67, 127, "Input",ExpressionUUID->"680a7060-0d05-42c7-844c-389bfc0cdf94",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[332888, 6649, 338, 7, 32, "Output",ExpressionUUID->"0e6c34dc-01e4-4237-9ffa-74d1be9e1df4",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[333229, 6658, 411, 9, 32, "Output",ExpressionUUID->"63a9d36e-d514-4daf-8c64-48b55ce5dddf",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[333643, 6669, 426, 9, 32, "Output",ExpressionUUID->"85e5feed-18de-4883-a623-38a0e7e396f3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[334072, 6680, 311, 5, 35, "Text",ExpressionUUID->"ac5b9c06-f396-4500-a5fc-67de86459810",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[334386, 6687, 890, 23, 49, "Input",ExpressionUUID->"96f66d96-d195-4806-b132-b04c8fb8439e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[335279, 6712, 3211, 86, 205, "Input",ExpressionUUID->"90d9a228-979c-422d-ad93-f6c356c87031",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[338493, 6800, 335, 6, 32, "Output",ExpressionUUID->"4849e02c-c892-4042-b32c-18a49790fa8b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[338831, 6808, 2251, 65, 185, "Input",ExpressionUUID->"63a3399d-8620-4ef4-acbd-ebf95188d4eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[341085, 6875, 290, 6, 32, "Output",ExpressionUUID->"bc62019a-fb24-40b1-8c56-0ff702c4c5c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[341378, 6883, 392, 8, 32, "Output",ExpressionUUID->"3c4fe68c-c38e-4e43-9e86-a4d60904e9aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[341773, 6893, 383, 8, 32, "Output",ExpressionUUID->"c9ed6c8c-5403-4f5a-8c42-bd475813d2c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]]
}
]
*)

